// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.33213
//    <NameSpace>HRXML.Net</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>True</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>True</GenerateCloneMethod><GenerateDataContracts>True</GenerateDataContracts><CodeBaseTag>Net35</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>ASCII</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace HRXML.Net
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Collections.Generic;
    using System.Runtime.Serialization;

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IndDependentInfoType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IndPersonalInfoType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "IndBasePersonalInfoType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class IndBasePersonalInfoType : EntityBase<IndBasePersonalInfoType>
    {

        private List<EntityIdType> personLegalIdField;

        private List<EntityIdType> priorIncorrectPersonLegalIdField;

        private List<EntityIdType> personIdField;

        private List<EntityIdType> priorIncorrectPersonIdField;

        private List<EffectiveDatedPersonNameType> personNameField;

        private System.DateTime dateOfBirthField;

        private bool dateOfBirthFieldSpecified;

        private LocalDateCertifiedType dateOfDeathField;

        private string genderCodeField;

        private List<IndMaritalStatusType> maritalStatusField;

        private List<EffectiveDatedContactMethodWithPrecedenceType> contactInfoField;

        private List<CitizenshipType> citizenshipField;

        private bool isVeteranField;

        private bool isVeteranFieldSpecified;

        private bool isDisabledField;

        private bool isDisabledFieldSpecified;

        private bool isTobaccoUserField;

        private bool isTobaccoUserFieldSpecified;

        /// <summary>
        /// IndBasePersonalInfoType class constructor
        /// </summary>
        public IndBasePersonalInfoType()
        {
            this.citizenshipField = new List<CitizenshipType>();
            this.contactInfoField = new List<EffectiveDatedContactMethodWithPrecedenceType>();
            this.maritalStatusField = new List<IndMaritalStatusType>();
            this.dateOfDeathField = new LocalDateCertifiedType();
            this.personNameField = new List<EffectiveDatedPersonNameType>();
            this.priorIncorrectPersonIdField = new List<EntityIdType>();
            this.personIdField = new List<EntityIdType>();
            this.priorIncorrectPersonLegalIdField = new List<EntityIdType>();
            this.personLegalIdField = new List<EntityIdType>();
        }

        [System.Xml.Serialization.XmlElementAttribute("PersonLegalId", Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> PersonLegalId
        {
            get
            {
                return this.personLegalIdField;
            }
            set
            {
                if ((this.personLegalIdField != null))
                {
                    if ((personLegalIdField.Equals(value) != true))
                    {
                        this.personLegalIdField = value;
                        this.OnPropertyChanged("PersonLegalId");
                    }
                }
                else
                {
                    this.personLegalIdField = value;
                    this.OnPropertyChanged("PersonLegalId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PriorIncorrectPersonLegalId", Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> PriorIncorrectPersonLegalId
        {
            get
            {
                return this.priorIncorrectPersonLegalIdField;
            }
            set
            {
                if ((this.priorIncorrectPersonLegalIdField != null))
                {
                    if ((priorIncorrectPersonLegalIdField.Equals(value) != true))
                    {
                        this.priorIncorrectPersonLegalIdField = value;
                        this.OnPropertyChanged("PriorIncorrectPersonLegalId");
                    }
                }
                else
                {
                    this.priorIncorrectPersonLegalIdField = value;
                    this.OnPropertyChanged("PriorIncorrectPersonLegalId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PersonId", Order = 2)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> PersonId
        {
            get
            {
                return this.personIdField;
            }
            set
            {
                if ((this.personIdField != null))
                {
                    if ((personIdField.Equals(value) != true))
                    {
                        this.personIdField = value;
                        this.OnPropertyChanged("PersonId");
                    }
                }
                else
                {
                    this.personIdField = value;
                    this.OnPropertyChanged("PersonId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PriorIncorrectPersonId", Order = 3)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> PriorIncorrectPersonId
        {
            get
            {
                return this.priorIncorrectPersonIdField;
            }
            set
            {
                if ((this.priorIncorrectPersonIdField != null))
                {
                    if ((priorIncorrectPersonIdField.Equals(value) != true))
                    {
                        this.priorIncorrectPersonIdField = value;
                        this.OnPropertyChanged("PriorIncorrectPersonId");
                    }
                }
                else
                {
                    this.priorIncorrectPersonIdField = value;
                    this.OnPropertyChanged("PriorIncorrectPersonId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PersonName", Order = 4)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EffectiveDatedPersonNameType> PersonName
        {
            get
            {
                return this.personNameField;
            }
            set
            {
                if ((this.personNameField != null))
                {
                    if ((personNameField.Equals(value) != true))
                    {
                        this.personNameField = value;
                        this.OnPropertyChanged("PersonName");
                    }
                }
                else
                {
                    this.personNameField = value;
                    this.OnPropertyChanged("PersonName");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(DataType = "date", Order = 5)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth
        {
            get
            {
                return this.dateOfBirthField;
            }
            set
            {
                if ((dateOfBirthField.Equals(value) != true))
                {
                    this.dateOfBirthField = value;
                    this.OnPropertyChanged("DateOfBirth");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateOfBirthSpecified
        {
            get
            {
                return this.dateOfBirthFieldSpecified;
            }
            set
            {
                if ((dateOfBirthFieldSpecified.Equals(value) != true))
                {
                    this.dateOfBirthFieldSpecified = value;
                    this.OnPropertyChanged("DateOfBirthSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LocalDateCertifiedType DateOfDeath
        {
            get
            {
                return this.dateOfDeathField;
            }
            set
            {
                if ((this.dateOfDeathField != null))
                {
                    if ((dateOfDeathField.Equals(value) != true))
                    {
                        this.dateOfDeathField = value;
                        this.OnPropertyChanged("DateOfDeath");
                    }
                }
                else
                {
                    this.dateOfDeathField = value;
                    this.OnPropertyChanged("DateOfDeath");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(DataType = "integer", Order = 7)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenderCode
        {
            get
            {
                return this.genderCodeField;
            }
            set
            {
                if ((this.genderCodeField != null))
                {
                    if ((genderCodeField.Equals(value) != true))
                    {
                        this.genderCodeField = value;
                        this.OnPropertyChanged("GenderCode");
                    }
                }
                else
                {
                    this.genderCodeField = value;
                    this.OnPropertyChanged("GenderCode");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("MaritalStatus", Order = 8)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<IndMaritalStatusType> MaritalStatus
        {
            get
            {
                return this.maritalStatusField;
            }
            set
            {
                if ((this.maritalStatusField != null))
                {
                    if ((maritalStatusField.Equals(value) != true))
                    {
                        this.maritalStatusField = value;
                        this.OnPropertyChanged("MaritalStatus");
                    }
                }
                else
                {
                    this.maritalStatusField = value;
                    this.OnPropertyChanged("MaritalStatus");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("ContactInfo", Order = 9)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EffectiveDatedContactMethodWithPrecedenceType> ContactInfo
        {
            get
            {
                return this.contactInfoField;
            }
            set
            {
                if ((this.contactInfoField != null))
                {
                    if ((contactInfoField.Equals(value) != true))
                    {
                        this.contactInfoField = value;
                        this.OnPropertyChanged("ContactInfo");
                    }
                }
                else
                {
                    this.contactInfoField = value;
                    this.OnPropertyChanged("ContactInfo");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Citizenship", Order = 10)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<CitizenshipType> Citizenship
        {
            get
            {
                return this.citizenshipField;
            }
            set
            {
                if ((this.citizenshipField != null))
                {
                    if ((citizenshipField.Equals(value) != true))
                    {
                        this.citizenshipField = value;
                        this.OnPropertyChanged("Citizenship");
                    }
                }
                else
                {
                    this.citizenshipField = value;
                    this.OnPropertyChanged("Citizenship");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVeteran
        {
            get
            {
                return this.isVeteranField;
            }
            set
            {
                if ((isVeteranField.Equals(value) != true))
                {
                    this.isVeteranField = value;
                    this.OnPropertyChanged("IsVeteran");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVeteranSpecified
        {
            get
            {
                return this.isVeteranFieldSpecified;
            }
            set
            {
                if ((isVeteranFieldSpecified.Equals(value) != true))
                {
                    this.isVeteranFieldSpecified = value;
                    this.OnPropertyChanged("IsVeteranSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisabled
        {
            get
            {
                return this.isDisabledField;
            }
            set
            {
                if ((isDisabledField.Equals(value) != true))
                {
                    this.isDisabledField = value;
                    this.OnPropertyChanged("IsDisabled");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisabledSpecified
        {
            get
            {
                return this.isDisabledFieldSpecified;
            }
            set
            {
                if ((isDisabledFieldSpecified.Equals(value) != true))
                {
                    this.isDisabledFieldSpecified = value;
                    this.OnPropertyChanged("IsDisabledSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTobaccoUser
        {
            get
            {
                return this.isTobaccoUserField;
            }
            set
            {
                if ((isTobaccoUserField.Equals(value) != true))
                {
                    this.isTobaccoUserField = value;
                    this.OnPropertyChanged("IsTobaccoUser");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTobaccoUserSpecified
        {
            get
            {
                return this.isTobaccoUserFieldSpecified;
            }
            set
            {
                if ((isTobaccoUserFieldSpecified.Equals(value) != true))
                {
                    this.isTobaccoUserFieldSpecified = value;
                    this.OnPropertyChanged("IsTobaccoUserSpecified");
                }
            }
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "IndMaritalStatusType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class IndMaritalStatusType : IndMaritalStatusEnumExtensionType, System.ComponentModel.INotifyPropertyChanged
    {

        private System.DateTime validFromField;

        private bool validFromFieldSpecified;

        private System.DateTime validToField;

        private bool validToFieldSpecified;

        private System.DateTime certifiedDateField;

        private bool certifiedDateFieldSpecified;

        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime validFrom
        {
            get
            {
                return this.validFromField;
            }
            set
            {
                if ((validFromField.Equals(value) != true))
                {
                    this.validFromField = value;
                    this.OnPropertyChanged("validFrom");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool validFromSpecified
        {
            get
            {
                return this.validFromFieldSpecified;
            }
            set
            {
                if ((validFromFieldSpecified.Equals(value) != true))
                {
                    this.validFromFieldSpecified = value;
                    this.OnPropertyChanged("validFromSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime validTo
        {
            get
            {
                return this.validToField;
            }
            set
            {
                if ((validToField.Equals(value) != true))
                {
                    this.validToField = value;
                    this.OnPropertyChanged("validTo");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool validToSpecified
        {
            get
            {
                return this.validToFieldSpecified;
            }
            set
            {
                if ((validToFieldSpecified.Equals(value) != true))
                {
                    this.validToFieldSpecified = value;
                    this.OnPropertyChanged("validToSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime certifiedDate
        {
            get
            {
                return this.certifiedDateField;
            }
            set
            {
                if ((certifiedDateField.Equals(value) != true))
                {
                    this.certifiedDateField = value;
                    this.OnPropertyChanged("certifiedDate");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool certifiedDateSpecified
        {
            get
            {
                return this.certifiedDateFieldSpecified;
            }
            set
            {
                if ((certifiedDateFieldSpecified.Equals(value) != true))
                {
                    this.certifiedDateFieldSpecified = value;
                    this.OnPropertyChanged("certifiedDateSpecified");
                }
            }
        }
    }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IndMaritalStatusType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "IndMaritalStatusEnumExtensionType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class IndMaritalStatusEnumExtensionType : EntityBase<IndMaritalStatusEnumExtensionType>
    {

        private object itemField;

        [System.Xml.Serialization.XmlElementAttribute("NonStandardValue", typeof(string), Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute("StandardValue", typeof(IndMaritalStatusEnumType), Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                if ((this.itemField != null))
                {
                    if ((itemField.Equals(value) != true))
                    {
                        this.itemField = value;
                        this.OnPropertyChanged("Item");
                    }
                }
                else
                {
                    this.itemField = value;
                    this.OnPropertyChanged("Item");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum IndMaritalStatusEnumType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Domestic Partner")]
        DomesticPartner,

        /// <remarks/>
        Divorced,

        /// <remarks/>
        Married,

        /// <remarks/>
        Separated,

        /// <remarks/>
        Unmarried,

        /// <remarks/>
        Unreported,

        /// <remarks/>
        Widowed,
    }




    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "IndDependentRelationshipEnumExtensionType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class IndDependentRelationshipEnumExtensionType : EntityBase<IndDependentRelationshipEnumExtensionType>
    {

        private object itemField;

        [System.Xml.Serialization.XmlElementAttribute("NonStandardValue", typeof(string), Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute("StandardValue", typeof(IndDependentRelationshipEnumType), Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                if ((this.itemField != null))
                {
                    if ((itemField.Equals(value) != true))
                    {
                        this.itemField = value;
                        this.OnPropertyChanged("Item");
                    }
                }
                else
                {
                    this.itemField = value;
                    this.OnPropertyChanged("Item");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum IndDependentRelationshipEnumType
    {

        /// <remarks/>
        AdoptedChild,

        /// <remarks/>
        Brother,

        /// <remarks/>
        Child,

        /// <remarks/>
        ExSpouse,

        /// <remarks/>
        Father,

        /// <remarks/>
        Granddaughter,

        /// <remarks/>
        Grandson,

        /// <remarks/>
        Grandfather,

        /// <remarks/>
        Grandmother,

        /// <remarks/>
        LifePartner,

        /// <remarks/>
        Mother,

        /// <remarks/>
        Sister,

        /// <remarks/>
        Spouse,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "IndPersonalInfoType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class IndPersonalInfoType : IndBasePersonalInfoType, System.ComponentModel.INotifyPropertyChanged
    {

        private List<IndDependentInfoType> dependentField;

        private UserAreaType userAreaField;

        /// <summary>
        /// IndPersonalInfoType class constructor
        /// </summary>
        public IndPersonalInfoType()
        {
            this.userAreaField = new UserAreaType();
            this.dependentField = new List<IndDependentInfoType>();
        }

        [System.Xml.Serialization.XmlElementAttribute("Dependent", Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<IndDependentInfoType> Dependent
        {
            get
            {
                return this.dependentField;
            }
            set
            {
                if ((this.dependentField != null))
                {
                    if ((dependentField.Equals(value) != true))
                    {
                        this.dependentField = value;
                        this.OnPropertyChanged("Dependent");
                    }
                }
                else
                {
                    this.dependentField = value;
                    this.OnPropertyChanged("Dependent");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserAreaType UserArea
        {
            get
            {
                return this.userAreaField;
            }
            set
            {
                if ((this.userAreaField != null))
                {
                    if ((userAreaField.Equals(value) != true))
                    {
                        this.userAreaField = value;
                        this.OnPropertyChanged("UserArea");
                    }
                }
                else
                {
                    this.userAreaField = value;
                    this.OnPropertyChanged("UserArea");
                }
            }
        }
    }
    
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
	    [System.SerializableAttribute()]
	    [System.Diagnostics.DebuggerStepThroughAttribute()]
	    [System.ComponentModel.DesignerCategoryAttribute("code")]
	    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.hr-xml.org/2007-04-15")]
	    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://ns.hr-xml.org/2007-04-15", IsNullable=true)]
	    [System.Runtime.Serialization.DataContractAttribute(Name="EffectiveDatedPersonNameType", Namespace="http://ns.hr-xml.org/2007-04-15")]
	    public partial class EffectiveDatedPersonNameType : PersonNameType, System.ComponentModel.INotifyPropertyChanged {
	        
	        private System.DateTime validFromField;
	        
	        private bool validFromFieldSpecified;
	        
	        private System.DateTime validToField;
	        
	        private bool validToFieldSpecified;
	        
	        [System.Xml.Serialization.XmlAttributeAttribute(DataType="date")]
	        [System.Runtime.Serialization.DataMemberAttribute()]
	        public System.DateTime validFrom {
	            get {
	                return this.validFromField;
	            }
	            set {
	                if ((validFromField.Equals(value) != true)) {
	                    this.validFromField = value;
	                    this.OnPropertyChanged("validFrom");
	                }
	            }
	        }
	        
	        [System.Xml.Serialization.XmlIgnoreAttribute()]
	        [System.Runtime.Serialization.DataMemberAttribute()]
	        public bool validFromSpecified {
	            get {
	                return this.validFromFieldSpecified;
	            }
	            set {
	                if ((validFromFieldSpecified.Equals(value) != true)) {
	                    this.validFromFieldSpecified = value;
	                    this.OnPropertyChanged("validFromSpecified");
	                }
	            }
	        }
	        
	        [System.Xml.Serialization.XmlAttributeAttribute(DataType="date")]
	        [System.Runtime.Serialization.DataMemberAttribute()]
	        public System.DateTime validTo {
	            get {
	                return this.validToField;
	            }
	            set {
	                if ((validToField.Equals(value) != true)) {
	                    this.validToField = value;
	                    this.OnPropertyChanged("validTo");
	                }
	            }
	        }
	        
	        [System.Xml.Serialization.XmlIgnoreAttribute()]
	        [System.Runtime.Serialization.DataMemberAttribute()]
	        public bool validToSpecified {
	            get {
	                return this.validToFieldSpecified;
	            }
	            set {
	                if ((validToFieldSpecified.Equals(value) != true)) {
	                    this.validToFieldSpecified = value;
	                    this.OnPropertyChanged("validToSpecified");
	                }
	            }
	        }
    }
}
