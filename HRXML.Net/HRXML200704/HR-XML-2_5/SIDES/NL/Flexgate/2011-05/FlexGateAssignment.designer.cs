// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.3.0.36516
//    <NameSpace>HRXML.Net</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLasyLoading>False</EnableLasyLoading><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>True</UseBaseClass><GenerateCloneMethod>True</GenerateCloneMethod><GenerateDataContracts>True</GenerateDataContracts><CodeBaseTag>Net35</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><AutomaticProperties>False</AutomaticProperties><DisableDebug>False</DisableDebug><CustomUsings></CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace HRXML.Net
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Collections.Generic;
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.birdseyeview.nl/Flexgate/2011-05")]
    [System.Xml.Serialization.XmlRootAttribute("FlexGateAssignment", Namespace = "http://www.birdseyeview.nl/Flexgate/2011-05", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FlexGateAssignmentType", Namespace = "http://www.birdseyeview.nl/Flexgate/2011-05")]
    public partial class FlexGateAssignmentType : EntityBase<FlexGateAssignmentType>
    {

        private bool customerCSAField;

        private decimal daysPerWeekField;

        private decimal hoursPerWeekField;

        private System.DateTime modifiedField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustomerCSA
        {
            get
            {
                return this.customerCSAField;
            }
            set
            {
                if ((customerCSAField.Equals(value) != true))
                {
                    this.customerCSAField = value;
                    this.OnPropertyChanged("CustomerCSA");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DaysPerWeek
        {
            get
            {
                return this.daysPerWeekField;
            }
            set
            {
                    if ((daysPerWeekField.Equals(value) != true))
                    {
                        this.daysPerWeekField = value;
                        this.OnPropertyChanged("DaysPerWeek");
                    }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HoursPerWeek
        {
            get
            {
                return this.hoursPerWeekField;
            }
            set
            {
                    if ((hoursPerWeekField.Equals(value) != true))
                    {
                        this.hoursPerWeekField = value;
                        this.OnPropertyChanged("HoursPerWeek");
                    }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified
        {
            get
            {
                return this.modifiedField;
            }
            set
            {
                if ((modifiedField.Equals(value) != true))
                {
                    this.modifiedField = value;
                    this.OnPropertyChanged("Modified");
                }
            }
        }
    }
}
