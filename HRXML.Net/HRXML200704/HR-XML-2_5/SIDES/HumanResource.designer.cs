// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.3.0.36516
//    <NameSpace>HRXML.Net</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLasyLoading>True</EnableLasyLoading><HidePrivateFieldInIDE>True</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>True</UseBaseClass><GenerateCloneMethod>True</GenerateCloneMethod><GenerateDataContracts>True</GenerateDataContracts><CodeBaseTag>Net40</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><AutomaticProperties>False</AutomaticProperties><DisableDebug>False</DisableDebug><CustomUsings></CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace HRXML.Net
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Collections.Generic;
    using System.Runtime.Serialization;

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("NumericValue", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NumericValueType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class NumericValueType
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private double minValueField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool minValueFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private double maxValueField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool maxValueFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private double intervalField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool intervalFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private double valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double minValue
        {
            get
            {
                return this.minValueField;
            }
            set
            {
                if ((minValueField.Equals(value) != true))
                {
                    this.minValueField = value;
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool minValueSpecified
        {
            get
            {
                return this.minValueFieldSpecified;
            }
            set
            {
                if ((minValueFieldSpecified.Equals(value) != true))
                {
                    this.minValueFieldSpecified = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double maxValue
        {
            get
            {
                return this.maxValueField;
            }
            set
            {
                if ((maxValueField.Equals(value) != true))
                {
                    this.maxValueField = value;
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool maxValueSpecified
        {
            get
            {
                return this.maxValueFieldSpecified;
            }
            set
            {
                if ((maxValueFieldSpecified.Equals(value) != true))
                {
                    this.maxValueFieldSpecified = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double interval
        {
            get
            {
                return this.intervalField;
            }
            set
            {
                if ((intervalField.Equals(value) != true))
                {
                    this.intervalField = value;
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool intervalSpecified
        {
            get
            {
                return this.intervalFieldSpecified;
            }
            set
            {
                if ((intervalFieldSpecified.Equals(value) != true))
                {
                    this.intervalFieldSpecified = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                    }
                }
                else
                {
                    this.descriptionField = value;
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StringValue", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StringValue : EntityBase<StringValue>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string minValueField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string maxValueField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string minValue
        {
            get
            {
                return this.minValueField;
            }
            set
            {
                if ((this.minValueField != null))
                {
                    if ((minValueField.Equals(value) != true))
                    {
                        this.minValueField = value;
                        this.OnPropertyChanged("minValue");
                    }
                }
                else
                {
                    this.minValueField = value;
                    this.OnPropertyChanged("minValue");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string maxValue
        {
            get
            {
                return this.maxValueField;
            }
            set
            {
                if ((this.maxValueField != null))
                {
                    if ((maxValueField.Equals(value) != true))
                    {
                        this.maxValueField = value;
                        this.OnPropertyChanged("maxValue");
                    }
                }
                else
                {
                    this.maxValueField = value;
                    this.OnPropertyChanged("maxValue");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("description");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FlexibleDatesType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class FlexibleDatesType : EntityBase<FlexibleDatesType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string itemField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesChoiceType itemElementNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string dateDescriptionField;

        [System.Xml.Serialization.XmlElementAttribute("AnyDate", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("MonthDay", typeof(string), DataType = "gMonthDay")]
        [System.Xml.Serialization.XmlElementAttribute("StringDate", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("Year", typeof(string), DataType = "gYear")]
        [System.Xml.Serialization.XmlElementAttribute("YearMonth", typeof(string), DataType = "gYearMonth")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                if ((this.itemField != null))
                {
                    if ((itemField.Equals(value) != true))
                    {
                        this.itemField = value;
                        this.OnPropertyChanged("Item");
                    }
                }
                else
                {
                    this.itemField = value;
                    this.OnPropertyChanged("Item");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesChoiceType ItemElementName
        {
            get
            {
                return this.itemElementNameField;
            }
            set
            {
                if ((itemElementNameField.Equals(value) != true))
                {
                    this.itemElementNameField = value;
                    this.OnPropertyChanged("ItemElementName");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dateDescription
        {
            get
            {
                return this.dateDescriptionField;
            }
            set
            {
                if ((this.dateDescriptionField != null))
                {
                    if ((dateDescriptionField.Equals(value) != true))
                    {
                        this.dateDescriptionField = value;
                        this.OnPropertyChanged("dateDescription");
                    }
                }
                else
                {
                    this.dateDescriptionField = value;
                    this.OnPropertyChanged("dateDescription");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IncludeInSchema = false)]
    public enum FlexibleDatesChoiceType
    {

        /// <remarks/>
        AnyDate,

        /// <remarks/>
        MonthDay,

        /// <remarks/>
        StringDate,

        /// <remarks/>
        Year,

        /// <remarks/>
        YearMonth,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("MilitaryHistory", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "MilitaryHistoryType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class MilitaryHistoryType : EntityBase<MilitaryHistoryType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string countryServedField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EntityIdType serviceNumberField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<MilitaryHistoryTypeServiceDetail> serviceDetailField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string serviceStatusField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string commentsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private UserAreaType userAreaField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryServed
        {
            get
            {
                return this.countryServedField;
            }
            set
            {
                if ((this.countryServedField != null))
                {
                    if ((countryServedField.Equals(value) != true))
                    {
                        this.countryServedField = value;
                        this.OnPropertyChanged("CountryServed");
                    }
                }
                else
                {
                    this.countryServedField = value;
                    this.OnPropertyChanged("CountryServed");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityIdType ServiceNumber
        {
            get
            {
                return this.serviceNumberField;
            }
            set
            {
                if ((this.serviceNumberField != null))
                {
                    if ((serviceNumberField.Equals(value) != true))
                    {
                        this.serviceNumberField = value;
                        this.OnPropertyChanged("ServiceNumber");
                    }
                }
                else
                {
                    this.serviceNumberField = value;
                    this.OnPropertyChanged("ServiceNumber");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("ServiceDetail")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<MilitaryHistoryTypeServiceDetail> ServiceDetail
        {
            get
            {
                if ((this.serviceDetailField == null))
                {
                    this.serviceDetailField = new List<MilitaryHistoryTypeServiceDetail>();
                }
                return this.serviceDetailField;
            }
            set
            {
                if ((this.serviceDetailField != null))
                {
                    if ((serviceDetailField.Equals(value) != true))
                    {
                        this.serviceDetailField = value;
                        this.OnPropertyChanged("ServiceDetail");
                    }
                }
                else
                {
                    this.serviceDetailField = value;
                    this.OnPropertyChanged("ServiceDetail");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceStatus
        {
            get
            {
                return this.serviceStatusField;
            }
            set
            {
                if ((this.serviceStatusField != null))
                {
                    if ((serviceStatusField.Equals(value) != true))
                    {
                        this.serviceStatusField = value;
                        this.OnPropertyChanged("ServiceStatus");
                    }
                }
                else
                {
                    this.serviceStatusField = value;
                    this.OnPropertyChanged("ServiceStatus");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments
        {
            get
            {
                return this.commentsField;
            }
            set
            {
                if ((this.commentsField != null))
                {
                    if ((commentsField.Equals(value) != true))
                    {
                        this.commentsField = value;
                        this.OnPropertyChanged("Comments");
                    }
                }
                else
                {
                    this.commentsField = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserAreaType UserArea
        {
            get
            {
                return this.userAreaField;
            }
            set
            {
                if ((this.userAreaField != null))
                {
                    if ((userAreaField.Equals(value) != true))
                    {
                        this.userAreaField = value;
                        this.OnPropertyChanged("UserArea");
                    }
                }
                else
                {
                    this.userAreaField = value;
                    this.OnPropertyChanged("UserArea");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "MilitaryHistoryTypeServiceDetail", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class MilitaryHistoryTypeServiceDetail : EntityBase<MilitaryHistoryTypeServiceDetail>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string unitOrDivisionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private RankAchievedType rankAchievedField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private DatesOfServiceType datesOfServiceField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> campaignField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> areaOfExpertiseField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> recognitionAchievedField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> disciplinaryActionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string dischargeStatusField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private UserAreaType userAreaField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string branchField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitOrDivision
        {
            get
            {
                return this.unitOrDivisionField;
            }
            set
            {
                if ((this.unitOrDivisionField != null))
                {
                    if ((unitOrDivisionField.Equals(value) != true))
                    {
                        this.unitOrDivisionField = value;
                        this.OnPropertyChanged("UnitOrDivision");
                    }
                }
                else
                {
                    this.unitOrDivisionField = value;
                    this.OnPropertyChanged("UnitOrDivision");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public RankAchievedType RankAchieved
        {
            get
            {
                return this.rankAchievedField;
            }
            set
            {
                if ((this.rankAchievedField != null))
                {
                    if ((rankAchievedField.Equals(value) != true))
                    {
                        this.rankAchievedField = value;
                        this.OnPropertyChanged("RankAchieved");
                    }
                }
                else
                {
                    this.rankAchievedField = value;
                    this.OnPropertyChanged("RankAchieved");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public DatesOfServiceType DatesOfService
        {
            get
            {
                return this.datesOfServiceField;
            }
            set
            {
                if ((this.datesOfServiceField != null))
                {
                    if ((datesOfServiceField.Equals(value) != true))
                    {
                        this.datesOfServiceField = value;
                        this.OnPropertyChanged("DatesOfService");
                    }
                }
                else
                {
                    this.datesOfServiceField = value;
                    this.OnPropertyChanged("DatesOfService");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Campaign")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> Campaign
        {
            get
            {
                if ((this.campaignField == null))
                {
                    this.campaignField = new List<string>();
                }
                return this.campaignField;
            }
            set
            {
                if ((this.campaignField != null))
                {
                    if ((campaignField.Equals(value) != true))
                    {
                        this.campaignField = value;
                        this.OnPropertyChanged("Campaign");
                    }
                }
                else
                {
                    this.campaignField = value;
                    this.OnPropertyChanged("Campaign");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("AreaOfExpertise")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> AreaOfExpertise
        {
            get
            {
                if ((this.areaOfExpertiseField == null))
                {
                    this.areaOfExpertiseField = new List<string>();
                }
                return this.areaOfExpertiseField;
            }
            set
            {
                if ((this.areaOfExpertiseField != null))
                {
                    if ((areaOfExpertiseField.Equals(value) != true))
                    {
                        this.areaOfExpertiseField = value;
                        this.OnPropertyChanged("AreaOfExpertise");
                    }
                }
                else
                {
                    this.areaOfExpertiseField = value;
                    this.OnPropertyChanged("AreaOfExpertise");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("RecognitionAchieved")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> RecognitionAchieved
        {
            get
            {
                if ((this.recognitionAchievedField == null))
                {
                    this.recognitionAchievedField = new List<string>();
                }
                return this.recognitionAchievedField;
            }
            set
            {
                if ((this.recognitionAchievedField != null))
                {
                    if ((recognitionAchievedField.Equals(value) != true))
                    {
                        this.recognitionAchievedField = value;
                        this.OnPropertyChanged("RecognitionAchieved");
                    }
                }
                else
                {
                    this.recognitionAchievedField = value;
                    this.OnPropertyChanged("RecognitionAchieved");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("DisciplinaryAction")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> DisciplinaryAction
        {
            get
            {
                if ((this.disciplinaryActionField == null))
                {
                    this.disciplinaryActionField = new List<string>();
                }
                return this.disciplinaryActionField;
            }
            set
            {
                if ((this.disciplinaryActionField != null))
                {
                    if ((disciplinaryActionField.Equals(value) != true))
                    {
                        this.disciplinaryActionField = value;
                        this.OnPropertyChanged("DisciplinaryAction");
                    }
                }
                else
                {
                    this.disciplinaryActionField = value;
                    this.OnPropertyChanged("DisciplinaryAction");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DischargeStatus
        {
            get
            {
                return this.dischargeStatusField;
            }
            set
            {
                if ((this.dischargeStatusField != null))
                {
                    if ((dischargeStatusField.Equals(value) != true))
                    {
                        this.dischargeStatusField = value;
                        this.OnPropertyChanged("DischargeStatus");
                    }
                }
                else
                {
                    this.dischargeStatusField = value;
                    this.OnPropertyChanged("DischargeStatus");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserAreaType UserArea
        {
            get
            {
                return this.userAreaField;
            }
            set
            {
                if ((this.userAreaField != null))
                {
                    if ((userAreaField.Equals(value) != true))
                    {
                        this.userAreaField = value;
                        this.OnPropertyChanged("UserArea");
                    }
                }
                else
                {
                    this.userAreaField = value;
                    this.OnPropertyChanged("UserArea");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string branch
        {
            get
            {
                return this.branchField;
            }
            set
            {
                if ((this.branchField != null))
                {
                    if ((branchField.Equals(value) != true))
                    {
                        this.branchField = value;
                        this.OnPropertyChanged("branch");
                    }
                }
                else
                {
                    this.branchField = value;
                    this.OnPropertyChanged("branch");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RankAchievedType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class RankAchievedType : EntityBase<RankAchievedType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string startRankField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string currentOrEndRankField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartRank
        {
            get
            {
                return this.startRankField;
            }
            set
            {
                if ((this.startRankField != null))
                {
                    if ((startRankField.Equals(value) != true))
                    {
                        this.startRankField = value;
                        this.OnPropertyChanged("StartRank");
                    }
                }
                else
                {
                    this.startRankField = value;
                    this.OnPropertyChanged("StartRank");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentOrEndRank
        {
            get
            {
                return this.currentOrEndRankField;
            }
            set
            {
                if ((this.currentOrEndRankField != null))
                {
                    if ((currentOrEndRankField.Equals(value) != true))
                    {
                        this.currentOrEndRankField = value;
                        this.OnPropertyChanged("CurrentOrEndRank");
                    }
                }
                else
                {
                    this.currentOrEndRankField = value;
                    this.OnPropertyChanged("CurrentOrEndRank");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DatesOfServiceType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class DatesOfServiceType : EntityBase<DatesOfServiceType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType startDateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType endDateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                if ((this.startDateField != null))
                {
                    if ((startDateField.Equals(value) != true))
                    {
                        this.startDateField = value;
                        this.OnPropertyChanged("StartDate");
                    }
                }
                else
                {
                    this.startDateField = value;
                    this.OnPropertyChanged("StartDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                if ((this.endDateField != null))
                {
                    if ((endDateField.Equals(value) != true))
                    {
                        this.endDateField = value;
                        this.OnPropertyChanged("EndDate");
                    }
                }
                else
                {
                    this.endDateField = value;
                    this.OnPropertyChanged("EndDate");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("EmploymentHistory", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EmploymentHistoryType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class EmploymentHistoryType : EntityBase<EmploymentHistoryType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EmployerOrgDataType> employerOrgField;

        [System.Xml.Serialization.XmlElementAttribute("EmployerOrg")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EmployerOrgDataType> EmployerOrg
        {
            get
            {
                if ((this.employerOrgField == null))
                {
                    this.employerOrgField = new List<EmployerOrgDataType>();
                }
                return this.employerOrgField;
            }
            set
            {
                if ((this.employerOrgField != null))
                {
                    if ((employerOrgField.Equals(value) != true))
                    {
                        this.employerOrgField = value;
                        this.OnPropertyChanged("EmployerOrg");
                    }
                }
                else
                {
                    this.employerOrgField = value;
                    this.OnPropertyChanged("EmployerOrg");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EmployerOrgDataType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class EmployerOrgDataType : EntityBase<EmployerOrgDataType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string employerOrgNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EmpContactInfoType employerContactInfoField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EmployerOrgDataTypePositionHistory> positionHistoryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private UserAreaType userAreaField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string employerOrgTypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployerOrgName
        {
            get
            {
                return this.employerOrgNameField;
            }
            set
            {
                if ((this.employerOrgNameField != null))
                {
                    if ((employerOrgNameField.Equals(value) != true))
                    {
                        this.employerOrgNameField = value;
                        this.OnPropertyChanged("EmployerOrgName");
                    }
                }
                else
                {
                    this.employerOrgNameField = value;
                    this.OnPropertyChanged("EmployerOrgName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmpContactInfoType EmployerContactInfo
        {
            get
            {
                return this.employerContactInfoField;
            }
            set
            {
                if ((this.employerContactInfoField != null))
                {
                    if ((employerContactInfoField.Equals(value) != true))
                    {
                        this.employerContactInfoField = value;
                        this.OnPropertyChanged("EmployerContactInfo");
                    }
                }
                else
                {
                    this.employerContactInfoField = value;
                    this.OnPropertyChanged("EmployerContactInfo");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PositionHistory")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EmployerOrgDataTypePositionHistory> PositionHistory
        {
            get
            {
                if ((this.positionHistoryField == null))
                {
                    this.positionHistoryField = new List<EmployerOrgDataTypePositionHistory>();
                }
                return this.positionHistoryField;
            }
            set
            {
                if ((this.positionHistoryField != null))
                {
                    if ((positionHistoryField.Equals(value) != true))
                    {
                        this.positionHistoryField = value;
                        this.OnPropertyChanged("PositionHistory");
                    }
                }
                else
                {
                    this.positionHistoryField = value;
                    this.OnPropertyChanged("PositionHistory");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserAreaType UserArea
        {
            get
            {
                return this.userAreaField;
            }
            set
            {
                if ((this.userAreaField != null))
                {
                    if ((userAreaField.Equals(value) != true))
                    {
                        this.userAreaField = value;
                        this.OnPropertyChanged("UserArea");
                    }
                }
                else
                {
                    this.userAreaField = value;
                    this.OnPropertyChanged("UserArea");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string employerOrgType
        {
            get
            {
                return this.employerOrgTypeField;
            }
            set
            {
                if ((this.employerOrgTypeField != null))
                {
                    if ((employerOrgTypeField.Equals(value) != true))
                    {
                        this.employerOrgTypeField = value;
                        this.OnPropertyChanged("employerOrgType");
                    }
                }
                else
                {
                    this.employerOrgTypeField = value;
                    this.OnPropertyChanged("employerOrgType");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EmpContactInfoType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class EmpContactInfoType : EntityBase<EmpContactInfoType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PersonNameType personNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<ContactMethodType> contactMethodField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EmploymentLocationSummaryType locationSummaryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<InternetDomainNameType> internetDomainNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string contactTypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PersonNameType PersonName
        {
            get
            {
                return this.personNameField;
            }
            set
            {
                if ((this.personNameField != null))
                {
                    if ((personNameField.Equals(value) != true))
                    {
                        this.personNameField = value;
                        this.OnPropertyChanged("PersonName");
                    }
                }
                else
                {
                    this.personNameField = value;
                    this.OnPropertyChanged("PersonName");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("ContactMethod")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<ContactMethodType> ContactMethod
        {
            get
            {
                if ((this.contactMethodField == null))
                {
                    this.contactMethodField = new List<ContactMethodType>();
                }
                return this.contactMethodField;
            }
            set
            {
                if ((this.contactMethodField != null))
                {
                    if ((contactMethodField.Equals(value) != true))
                    {
                        this.contactMethodField = value;
                        this.OnPropertyChanged("ContactMethod");
                    }
                }
                else
                {
                    this.contactMethodField = value;
                    this.OnPropertyChanged("ContactMethod");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmploymentLocationSummaryType LocationSummary
        {
            get
            {
                return this.locationSummaryField;
            }
            set
            {
                if ((this.locationSummaryField != null))
                {
                    if ((locationSummaryField.Equals(value) != true))
                    {
                        this.locationSummaryField = value;
                        this.OnPropertyChanged("LocationSummary");
                    }
                }
                else
                {
                    this.locationSummaryField = value;
                    this.OnPropertyChanged("LocationSummary");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("InternetDomainName")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<InternetDomainNameType> InternetDomainName
        {
            get
            {
                if ((this.internetDomainNameField == null))
                {
                    this.internetDomainNameField = new List<InternetDomainNameType>();
                }
                return this.internetDomainNameField;
            }
            set
            {
                if ((this.internetDomainNameField != null))
                {
                    if ((internetDomainNameField.Equals(value) != true))
                    {
                        this.internetDomainNameField = value;
                        this.OnPropertyChanged("InternetDomainName");
                    }
                }
                else
                {
                    this.internetDomainNameField = value;
                    this.OnPropertyChanged("InternetDomainName");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contactType
        {
            get
            {
                return this.contactTypeField;
            }
            set
            {
                if ((this.contactTypeField != null))
                {
                    if ((contactTypeField.Equals(value) != true))
                    {
                        this.contactTypeField = value;
                        this.OnPropertyChanged("contactType");
                    }
                }
                else
                {
                    this.contactTypeField = value;
                    this.OnPropertyChanged("contactType");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EmploymentLocationSummaryType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class EmploymentLocationSummaryType : EntityBase<EmploymentLocationSummaryType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string municipalityField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> regionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string countryCodeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string postalCodeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Municipality
        {
            get
            {
                return this.municipalityField;
            }
            set
            {
                if ((this.municipalityField != null))
                {
                    if ((municipalityField.Equals(value) != true))
                    {
                        this.municipalityField = value;
                        this.OnPropertyChanged("Municipality");
                    }
                }
                else
                {
                    this.municipalityField = value;
                    this.OnPropertyChanged("Municipality");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Region")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> Region
        {
            get
            {
                if ((this.regionField == null))
                {
                    this.regionField = new List<string>();
                }
                return this.regionField;
            }
            set
            {
                if ((this.regionField != null))
                {
                    if ((regionField.Equals(value) != true))
                    {
                        this.regionField = value;
                        this.OnPropertyChanged("Region");
                    }
                }
                else
                {
                    this.regionField = value;
                    this.OnPropertyChanged("Region");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.countryCodeField;
            }
            set
            {
                if ((this.countryCodeField != null))
                {
                    if ((countryCodeField.Equals(value) != true))
                    {
                        this.countryCodeField = value;
                        this.OnPropertyChanged("CountryCode");
                    }
                }
                else
                {
                    this.countryCodeField = value;
                    this.OnPropertyChanged("CountryCode");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode
        {
            get
            {
                return this.postalCodeField;
            }
            set
            {
                if ((this.postalCodeField != null))
                {
                    if ((postalCodeField.Equals(value) != true))
                    {
                        this.postalCodeField = value;
                        this.OnPropertyChanged("PostalCode");
                    }
                }
                else
                {
                    this.postalCodeField = value;
                    this.OnPropertyChanged("PostalCode");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EmployerOrgDataTypePositionHistory", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class EmployerOrgDataTypePositionHistory : PositionHistoryType
    {
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionHistoryType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionHistoryType : EntityBase<PositionHistoryType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string titleField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionOrgNameType orgNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<PositionOrgInfoType> orgInfoField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<PositionOrgIndustryType> orgIndustryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string orgSizeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType startDateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType endDateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionCompensationType compensationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string commentsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private VerificationType verificationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<JobLevelInfoType> jobLevelInfoField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<OccupationalCategoryType> jobCategoryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<CompetencyType> competencyField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private UserAreaType userAreaField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string positionTypeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool currentEmployerField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool currentEmployerFieldSpecified;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                if ((this.titleField != null))
                {
                    if ((titleField.Equals(value) != true))
                    {
                        this.titleField = value;
                        this.OnPropertyChanged("Title");
                    }
                }
                else
                {
                    this.titleField = value;
                    this.OnPropertyChanged("Title");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionOrgNameType OrgName
        {
            get
            {
                return this.orgNameField;
            }
            set
            {
                if ((this.orgNameField != null))
                {
                    if ((orgNameField.Equals(value) != true))
                    {
                        this.orgNameField = value;
                        this.OnPropertyChanged("OrgName");
                    }
                }
                else
                {
                    this.orgNameField = value;
                    this.OnPropertyChanged("OrgName");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("OrgInfo")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<PositionOrgInfoType> OrgInfo
        {
            get
            {
                if ((this.orgInfoField == null))
                {
                    this.orgInfoField = new List<PositionOrgInfoType>();
                }
                return this.orgInfoField;
            }
            set
            {
                if ((this.orgInfoField != null))
                {
                    if ((orgInfoField.Equals(value) != true))
                    {
                        this.orgInfoField = value;
                        this.OnPropertyChanged("OrgInfo");
                    }
                }
                else
                {
                    this.orgInfoField = value;
                    this.OnPropertyChanged("OrgInfo");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("OrgIndustry")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<PositionOrgIndustryType> OrgIndustry
        {
            get
            {
                if ((this.orgIndustryField == null))
                {
                    this.orgIndustryField = new List<PositionOrgIndustryType>();
                }
                return this.orgIndustryField;
            }
            set
            {
                if ((this.orgIndustryField != null))
                {
                    if ((orgIndustryField.Equals(value) != true))
                    {
                        this.orgIndustryField = value;
                        this.OnPropertyChanged("OrgIndustry");
                    }
                }
                else
                {
                    this.orgIndustryField = value;
                    this.OnPropertyChanged("OrgIndustry");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgSize
        {
            get
            {
                return this.orgSizeField;
            }
            set
            {
                if ((this.orgSizeField != null))
                {
                    if ((orgSizeField.Equals(value) != true))
                    {
                        this.orgSizeField = value;
                        this.OnPropertyChanged("OrgSize");
                    }
                }
                else
                {
                    this.orgSizeField = value;
                    this.OnPropertyChanged("OrgSize");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                if ((this.startDateField != null))
                {
                    if ((startDateField.Equals(value) != true))
                    {
                        this.startDateField = value;
                        this.OnPropertyChanged("StartDate");
                    }
                }
                else
                {
                    this.startDateField = value;
                    this.OnPropertyChanged("StartDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                if ((this.endDateField != null))
                {
                    if ((endDateField.Equals(value) != true))
                    {
                        this.endDateField = value;
                        this.OnPropertyChanged("EndDate");
                    }
                }
                else
                {
                    this.endDateField = value;
                    this.OnPropertyChanged("EndDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionCompensationType Compensation
        {
            get
            {
                return this.compensationField;
            }
            set
            {
                if ((this.compensationField != null))
                {
                    if ((compensationField.Equals(value) != true))
                    {
                        this.compensationField = value;
                        this.OnPropertyChanged("Compensation");
                    }
                }
                else
                {
                    this.compensationField = value;
                    this.OnPropertyChanged("Compensation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments
        {
            get
            {
                return this.commentsField;
            }
            set
            {
                if ((this.commentsField != null))
                {
                    if ((commentsField.Equals(value) != true))
                    {
                        this.commentsField = value;
                        this.OnPropertyChanged("Comments");
                    }
                }
                else
                {
                    this.commentsField = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public VerificationType Verification
        {
            get
            {
                return this.verificationField;
            }
            set
            {
                if ((this.verificationField != null))
                {
                    if ((verificationField.Equals(value) != true))
                    {
                        this.verificationField = value;
                        this.OnPropertyChanged("Verification");
                    }
                }
                else
                {
                    this.verificationField = value;
                    this.OnPropertyChanged("Verification");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("JobLevelInfo")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<JobLevelInfoType> JobLevelInfo
        {
            get
            {
                if ((this.jobLevelInfoField == null))
                {
                    this.jobLevelInfoField = new List<JobLevelInfoType>();
                }
                return this.jobLevelInfoField;
            }
            set
            {
                if ((this.jobLevelInfoField != null))
                {
                    if ((jobLevelInfoField.Equals(value) != true))
                    {
                        this.jobLevelInfoField = value;
                        this.OnPropertyChanged("JobLevelInfo");
                    }
                }
                else
                {
                    this.jobLevelInfoField = value;
                    this.OnPropertyChanged("JobLevelInfo");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("JobCategory")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<OccupationalCategoryType> JobCategory
        {
            get
            {
                if ((this.jobCategoryField == null))
                {
                    this.jobCategoryField = new List<OccupationalCategoryType>();
                }
                return this.jobCategoryField;
            }
            set
            {
                if ((this.jobCategoryField != null))
                {
                    if ((jobCategoryField.Equals(value) != true))
                    {
                        this.jobCategoryField = value;
                        this.OnPropertyChanged("JobCategory");
                    }
                }
                else
                {
                    this.jobCategoryField = value;
                    this.OnPropertyChanged("JobCategory");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Competency")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<CompetencyType> Competency
        {
            get
            {
                if ((this.competencyField == null))
                {
                    this.competencyField = new List<CompetencyType>();
                }
                return this.competencyField;
            }
            set
            {
                if ((this.competencyField != null))
                {
                    if ((competencyField.Equals(value) != true))
                    {
                        this.competencyField = value;
                        this.OnPropertyChanged("Competency");
                    }
                }
                else
                {
                    this.competencyField = value;
                    this.OnPropertyChanged("Competency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserAreaType UserArea
        {
            get
            {
                return this.userAreaField;
            }
            set
            {
                if ((this.userAreaField != null))
                {
                    if ((userAreaField.Equals(value) != true))
                    {
                        this.userAreaField = value;
                        this.OnPropertyChanged("UserArea");
                    }
                }
                else
                {
                    this.userAreaField = value;
                    this.OnPropertyChanged("UserArea");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string positionType
        {
            get
            {
                return this.positionTypeField;
            }
            set
            {
                if ((this.positionTypeField != null))
                {
                    if ((positionTypeField.Equals(value) != true))
                    {
                        this.positionTypeField = value;
                        this.OnPropertyChanged("positionType");
                    }
                }
                else
                {
                    this.positionTypeField = value;
                    this.OnPropertyChanged("positionType");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool currentEmployer
        {
            get
            {
                return this.currentEmployerField;
            }
            set
            {
                if ((currentEmployerField.Equals(value) != true))
                {
                    this.currentEmployerField = value;
                    this.OnPropertyChanged("currentEmployer");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool currentEmployerSpecified
        {
            get
            {
                return this.currentEmployerFieldSpecified;
            }
            set
            {
                if ((currentEmployerFieldSpecified.Equals(value) != true))
                {
                    this.currentEmployerFieldSpecified = value;
                    this.OnPropertyChanged("currentEmployerSpecified");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionOrgNameType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionOrgNameType : EntityBase<PositionOrgNameType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string organizationNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionOrgNameType orgNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string organizationTypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName
        {
            get
            {
                return this.organizationNameField;
            }
            set
            {
                if ((this.organizationNameField != null))
                {
                    if ((organizationNameField.Equals(value) != true))
                    {
                        this.organizationNameField = value;
                        this.OnPropertyChanged("OrganizationName");
                    }
                }
                else
                {
                    this.organizationNameField = value;
                    this.OnPropertyChanged("OrganizationName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionOrgNameType OrgName
        {
            get
            {
                return this.orgNameField;
            }
            set
            {
                if ((this.orgNameField != null))
                {
                    if ((orgNameField.Equals(value) != true))
                    {
                        this.orgNameField = value;
                        this.OnPropertyChanged("OrgName");
                    }
                }
                else
                {
                    this.orgNameField = value;
                    this.OnPropertyChanged("OrgName");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string organizationType
        {
            get
            {
                return this.organizationTypeField;
            }
            set
            {
                if ((this.organizationTypeField != null))
                {
                    if ((organizationTypeField.Equals(value) != true))
                    {
                        this.organizationTypeField = value;
                        this.OnPropertyChanged("organizationType");
                    }
                }
                else
                {
                    this.organizationTypeField = value;
                    this.OnPropertyChanged("organizationType");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionOrgInfoType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionOrgInfoType : EntityBase<PositionOrgInfoType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PostalAddressType positionLocationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string webSiteField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EmploymentLocationSummaryType locationSummaryField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PostalAddressType PositionLocation
        {
            get
            {
                return this.positionLocationField;
            }
            set
            {
                if ((this.positionLocationField != null))
                {
                    if ((positionLocationField.Equals(value) != true))
                    {
                        this.positionLocationField = value;
                        this.OnPropertyChanged("PositionLocation");
                    }
                }
                else
                {
                    this.positionLocationField = value;
                    this.OnPropertyChanged("PositionLocation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebSite
        {
            get
            {
                return this.webSiteField;
            }
            set
            {
                if ((this.webSiteField != null))
                {
                    if ((webSiteField.Equals(value) != true))
                    {
                        this.webSiteField = value;
                        this.OnPropertyChanged("WebSite");
                    }
                }
                else
                {
                    this.webSiteField = value;
                    this.OnPropertyChanged("WebSite");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmploymentLocationSummaryType LocationSummary
        {
            get
            {
                return this.locationSummaryField;
            }
            set
            {
                if ((this.locationSummaryField != null))
                {
                    if ((locationSummaryField.Equals(value) != true))
                    {
                        this.locationSummaryField = value;
                        this.OnPropertyChanged("LocationSummary");
                    }
                }
                else
                {
                    this.locationSummaryField = value;
                    this.OnPropertyChanged("LocationSummary");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionOrgIndustryType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionOrgIndustryType : EntityBase<PositionOrgIndustryType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string industryDescriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionOrgIndustryTypeIndustryCode industryCodeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool primaryIndicatorField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndustryDescription
        {
            get
            {
                return this.industryDescriptionField;
            }
            set
            {
                if ((this.industryDescriptionField != null))
                {
                    if ((industryDescriptionField.Equals(value) != true))
                    {
                        this.industryDescriptionField = value;
                        this.OnPropertyChanged("IndustryDescription");
                    }
                }
                else
                {
                    this.industryDescriptionField = value;
                    this.OnPropertyChanged("IndustryDescription");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionOrgIndustryTypeIndustryCode IndustryCode
        {
            get
            {
                return this.industryCodeField;
            }
            set
            {
                if ((this.industryCodeField != null))
                {
                    if ((industryCodeField.Equals(value) != true))
                    {
                        this.industryCodeField = value;
                        this.OnPropertyChanged("IndustryCode");
                    }
                }
                else
                {
                    this.industryCodeField = value;
                    this.OnPropertyChanged("IndustryCode");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool primaryIndicator
        {
            get
            {
                return this.primaryIndicatorField;
            }
            set
            {
                if ((primaryIndicatorField.Equals(value) != true))
                {
                    this.primaryIndicatorField = value;
                    this.OnPropertyChanged("primaryIndicator");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionOrgIndustryTypeIndustryCode", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionOrgIndustryTypeIndustryCode : EntityBase<PositionOrgIndustryTypeIndustryCode>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string classificationNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string classificationName
        {
            get
            {
                return this.classificationNameField;
            }
            set
            {
                if ((this.classificationNameField != null))
                {
                    if ((classificationNameField.Equals(value) != true))
                    {
                        this.classificationNameField = value;
                        this.OnPropertyChanged("classificationName");
                    }
                }
                else
                {
                    this.classificationNameField = value;
                    this.OnPropertyChanged("classificationName");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionCompensationType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionCompensationType : EntityBase<PositionCompensationType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionCompensationTypeStartingCompensation startingCompensationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionCompensationTypeEndingCompensation endingCompensationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string commentsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<PositionCompensationTypeOtherCompensation> otherCompensationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionCompensationTypeStartingCompensation StartingCompensation
        {
            get
            {
                return this.startingCompensationField;
            }
            set
            {
                if ((this.startingCompensationField != null))
                {
                    if ((startingCompensationField.Equals(value) != true))
                    {
                        this.startingCompensationField = value;
                        this.OnPropertyChanged("StartingCompensation");
                    }
                }
                else
                {
                    this.startingCompensationField = value;
                    this.OnPropertyChanged("StartingCompensation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionCompensationTypeEndingCompensation EndingCompensation
        {
            get
            {
                return this.endingCompensationField;
            }
            set
            {
                if ((this.endingCompensationField != null))
                {
                    if ((endingCompensationField.Equals(value) != true))
                    {
                        this.endingCompensationField = value;
                        this.OnPropertyChanged("EndingCompensation");
                    }
                }
                else
                {
                    this.endingCompensationField = value;
                    this.OnPropertyChanged("EndingCompensation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments
        {
            get
            {
                return this.commentsField;
            }
            set
            {
                if ((this.commentsField != null))
                {
                    if ((commentsField.Equals(value) != true))
                    {
                        this.commentsField = value;
                        this.OnPropertyChanged("Comments");
                    }
                }
                else
                {
                    this.commentsField = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("OtherCompensation")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<PositionCompensationTypeOtherCompensation> OtherCompensation
        {
            get
            {
                if ((this.otherCompensationField == null))
                {
                    this.otherCompensationField = new List<PositionCompensationTypeOtherCompensation>();
                }
                return this.otherCompensationField;
            }
            set
            {
                if ((this.otherCompensationField != null))
                {
                    if ((otherCompensationField.Equals(value) != true))
                    {
                        this.otherCompensationField = value;
                        this.OnPropertyChanged("OtherCompensation");
                    }
                }
                else
                {
                    this.otherCompensationField = value;
                    this.OnPropertyChanged("OtherCompensation");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionCompensationTypeStartingCompensation", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionCompensationTypeStartingCompensation : EntityBase<PositionCompensationTypeStartingCompensation>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string currencyField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string intervalTypeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string validFromField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string validToField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency
        {
            get
            {
                return this.currencyField;
            }
            set
            {
                if ((this.currencyField != null))
                {
                    if ((currencyField.Equals(value) != true))
                    {
                        this.currencyField = value;
                        this.OnPropertyChanged("currency");
                    }
                }
                else
                {
                    this.currencyField = value;
                    this.OnPropertyChanged("currency");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string intervalType
        {
            get
            {
                return this.intervalTypeField;
            }
            set
            {
                if ((this.intervalTypeField != null))
                {
                    if ((intervalTypeField.Equals(value) != true))
                    {
                        this.intervalTypeField = value;
                        this.OnPropertyChanged("intervalType");
                    }
                }
                else
                {
                    this.intervalTypeField = value;
                    this.OnPropertyChanged("intervalType");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string validFrom
        {
            get
            {
                return this.validFromField;
            }
            set
            {
                if ((this.validFromField != null))
                {
                    if ((validFromField.Equals(value) != true))
                    {
                        this.validFromField = value;
                        this.OnPropertyChanged("validFrom");
                    }
                }
                else
                {
                    this.validFromField = value;
                    this.OnPropertyChanged("validFrom");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string validTo
        {
            get
            {
                return this.validToField;
            }
            set
            {
                if ((this.validToField != null))
                {
                    if ((validToField.Equals(value) != true))
                    {
                        this.validToField = value;
                        this.OnPropertyChanged("validTo");
                    }
                }
                else
                {
                    this.validToField = value;
                    this.OnPropertyChanged("validTo");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionCompensationTypeEndingCompensation", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionCompensationTypeEndingCompensation : EntityBase<PositionCompensationTypeEndingCompensation>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string currencyField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string intervalTypeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string validFromField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string validToField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency
        {
            get
            {
                return this.currencyField;
            }
            set
            {
                if ((this.currencyField != null))
                {
                    if ((currencyField.Equals(value) != true))
                    {
                        this.currencyField = value;
                        this.OnPropertyChanged("currency");
                    }
                }
                else
                {
                    this.currencyField = value;
                    this.OnPropertyChanged("currency");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string intervalType
        {
            get
            {
                return this.intervalTypeField;
            }
            set
            {
                if ((this.intervalTypeField != null))
                {
                    if ((intervalTypeField.Equals(value) != true))
                    {
                        this.intervalTypeField = value;
                        this.OnPropertyChanged("intervalType");
                    }
                }
                else
                {
                    this.intervalTypeField = value;
                    this.OnPropertyChanged("intervalType");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string validFrom
        {
            get
            {
                return this.validFromField;
            }
            set
            {
                if ((this.validFromField != null))
                {
                    if ((validFromField.Equals(value) != true))
                    {
                        this.validFromField = value;
                        this.OnPropertyChanged("validFrom");
                    }
                }
                else
                {
                    this.validFromField = value;
                    this.OnPropertyChanged("validFrom");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string validTo
        {
            get
            {
                return this.validToField;
            }
            set
            {
                if ((this.validToField != null))
                {
                    if ((validToField.Equals(value) != true))
                    {
                        this.validToField = value;
                        this.OnPropertyChanged("validTo");
                    }
                }
                else
                {
                    this.validToField = value;
                    this.OnPropertyChanged("validTo");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionCompensationTypeOtherCompensation", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionCompensationTypeOtherCompensation : EntityBase<PositionCompensationTypeOtherCompensation>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string typeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string validFromField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string validToField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((this.typeField != null))
                {
                    if ((typeField.Equals(value) != true))
                    {
                        this.typeField = value;
                        this.OnPropertyChanged("type");
                    }
                }
                else
                {
                    this.typeField = value;
                    this.OnPropertyChanged("type");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string validFrom
        {
            get
            {
                return this.validFromField;
            }
            set
            {
                if ((this.validFromField != null))
                {
                    if ((validFromField.Equals(value) != true))
                    {
                        this.validFromField = value;
                        this.OnPropertyChanged("validFrom");
                    }
                }
                else
                {
                    this.validFromField = value;
                    this.OnPropertyChanged("validFrom");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string validTo
        {
            get
            {
                return this.validToField;
            }
            set
            {
                if ((this.validToField != null))
                {
                    if ((validToField.Equals(value) != true))
                    {
                        this.validToField = value;
                        this.OnPropertyChanged("validTo");
                    }
                }
                else
                {
                    this.validToField = value;
                    this.OnPropertyChanged("validTo");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "VerificationType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class VerificationType : EntityBase<VerificationType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private VerificationTypeContactInfo contactInfoField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string reasonForLeavingField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool permissionToContactField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool permissionToContactFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool verifyEmploymentField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool verifyEmploymentFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool eligibleForRehireField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool eligibleForRehireFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private RatingType attendanceRatingField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private RatingType overallPerformanceRatingField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EmploymentQuestionAnswerPairType> questionAnswerPairField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public VerificationTypeContactInfo ContactInfo
        {
            get
            {
                return this.contactInfoField;
            }
            set
            {
                if ((this.contactInfoField != null))
                {
                    if ((contactInfoField.Equals(value) != true))
                    {
                        this.contactInfoField = value;
                        this.OnPropertyChanged("ContactInfo");
                    }
                }
                else
                {
                    this.contactInfoField = value;
                    this.OnPropertyChanged("ContactInfo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonForLeaving
        {
            get
            {
                return this.reasonForLeavingField;
            }
            set
            {
                if ((this.reasonForLeavingField != null))
                {
                    if ((reasonForLeavingField.Equals(value) != true))
                    {
                        this.reasonForLeavingField = value;
                        this.OnPropertyChanged("ReasonForLeaving");
                    }
                }
                else
                {
                    this.reasonForLeavingField = value;
                    this.OnPropertyChanged("ReasonForLeaving");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermissionToContact
        {
            get
            {
                return this.permissionToContactField;
            }
            set
            {
                if ((permissionToContactField.Equals(value) != true))
                {
                    this.permissionToContactField = value;
                    this.OnPropertyChanged("PermissionToContact");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermissionToContactSpecified
        {
            get
            {
                return this.permissionToContactFieldSpecified;
            }
            set
            {
                if ((permissionToContactFieldSpecified.Equals(value) != true))
                {
                    this.permissionToContactFieldSpecified = value;
                    this.OnPropertyChanged("PermissionToContactSpecified");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VerifyEmployment
        {
            get
            {
                return this.verifyEmploymentField;
            }
            set
            {
                if ((verifyEmploymentField.Equals(value) != true))
                {
                    this.verifyEmploymentField = value;
                    this.OnPropertyChanged("VerifyEmployment");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VerifyEmploymentSpecified
        {
            get
            {
                return this.verifyEmploymentFieldSpecified;
            }
            set
            {
                if ((verifyEmploymentFieldSpecified.Equals(value) != true))
                {
                    this.verifyEmploymentFieldSpecified = value;
                    this.OnPropertyChanged("VerifyEmploymentSpecified");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EligibleForRehire
        {
            get
            {
                return this.eligibleForRehireField;
            }
            set
            {
                if ((eligibleForRehireField.Equals(value) != true))
                {
                    this.eligibleForRehireField = value;
                    this.OnPropertyChanged("EligibleForRehire");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EligibleForRehireSpecified
        {
            get
            {
                return this.eligibleForRehireFieldSpecified;
            }
            set
            {
                if ((eligibleForRehireFieldSpecified.Equals(value) != true))
                {
                    this.eligibleForRehireFieldSpecified = value;
                    this.OnPropertyChanged("EligibleForRehireSpecified");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public RatingType AttendanceRating
        {
            get
            {
                return this.attendanceRatingField;
            }
            set
            {
                if ((this.attendanceRatingField != null))
                {
                    if ((attendanceRatingField.Equals(value) != true))
                    {
                        this.attendanceRatingField = value;
                        this.OnPropertyChanged("AttendanceRating");
                    }
                }
                else
                {
                    this.attendanceRatingField = value;
                    this.OnPropertyChanged("AttendanceRating");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public RatingType OverallPerformanceRating
        {
            get
            {
                return this.overallPerformanceRatingField;
            }
            set
            {
                if ((this.overallPerformanceRatingField != null))
                {
                    if ((overallPerformanceRatingField.Equals(value) != true))
                    {
                        this.overallPerformanceRatingField = value;
                        this.OnPropertyChanged("OverallPerformanceRating");
                    }
                }
                else
                {
                    this.overallPerformanceRatingField = value;
                    this.OnPropertyChanged("OverallPerformanceRating");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("QuestionAnswerPair")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EmploymentQuestionAnswerPairType> QuestionAnswerPair
        {
            get
            {
                if ((this.questionAnswerPairField == null))
                {
                    this.questionAnswerPairField = new List<EmploymentQuestionAnswerPairType>();
                }
                return this.questionAnswerPairField;
            }
            set
            {
                if ((this.questionAnswerPairField != null))
                {
                    if ((questionAnswerPairField.Equals(value) != true))
                    {
                        this.questionAnswerPairField = value;
                        this.OnPropertyChanged("QuestionAnswerPair");
                    }
                }
                else
                {
                    this.questionAnswerPairField = value;
                    this.OnPropertyChanged("QuestionAnswerPair");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "VerificationTypeContactInfo", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class VerificationTypeContactInfo : EntityBase<VerificationTypeContactInfo>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PersonNameType personNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<ContactMethodType> contactMethodField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PersonNameType PersonName
        {
            get
            {
                return this.personNameField;
            }
            set
            {
                if ((this.personNameField != null))
                {
                    if ((personNameField.Equals(value) != true))
                    {
                        this.personNameField = value;
                        this.OnPropertyChanged("PersonName");
                    }
                }
                else
                {
                    this.personNameField = value;
                    this.OnPropertyChanged("PersonName");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("ContactMethod")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<ContactMethodType> ContactMethod
        {
            get
            {
                if ((this.contactMethodField == null))
                {
                    this.contactMethodField = new List<ContactMethodType>();
                }
                return this.contactMethodField;
            }
            set
            {
                if ((this.contactMethodField != null))
                {
                    if ((contactMethodField.Equals(value) != true))
                    {
                        this.contactMethodField = value;
                        this.OnPropertyChanged("ContactMethod");
                    }
                }
                else
                {
                    this.contactMethodField = value;
                    this.OnPropertyChanged("ContactMethod");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RatingType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class RatingType : EntityBase<RatingType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private object itemField;

        [System.Xml.Serialization.XmlElementAttribute("NumericValue", typeof(RatingTypeNumericValue))]
        [System.Xml.Serialization.XmlElementAttribute("StringValue", typeof(RatingTypeStringValue))]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                if ((this.itemField != null))
                {
                    if ((itemField.Equals(value) != true))
                    {
                        this.itemField = value;
                        this.OnPropertyChanged("Item");
                    }
                }
                else
                {
                    this.itemField = value;
                    this.OnPropertyChanged("Item");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RatingTypeNumericValue", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class RatingTypeNumericValue
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private double minValueField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool minValueFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private double maxValueField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool maxValueFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private double valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double minValue
        {
            get
            {
                return this.minValueField;
            }
            set
            {
                if ((minValueField.Equals(value) != true))
                {
                    this.minValueField = value;
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool minValueSpecified
        {
            get
            {
                return this.minValueFieldSpecified;
            }
            set
            {
                if ((minValueFieldSpecified.Equals(value) != true))
                {
                    this.minValueFieldSpecified = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double maxValue
        {
            get
            {
                return this.maxValueField;
            }
            set
            {
                if ((maxValueField.Equals(value) != true))
                {
                    this.maxValueField = value;
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool maxValueSpecified
        {
            get
            {
                return this.maxValueFieldSpecified;
            }
            set
            {
                if ((maxValueFieldSpecified.Equals(value) != true))
                {
                    this.maxValueFieldSpecified = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                    }
                }
                else
                {
                    this.descriptionField = value;
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RatingTypeStringValue", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class RatingTypeStringValue : EntityBase<RatingTypeStringValue>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string minValueField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string maxValueField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string minValue
        {
            get
            {
                return this.minValueField;
            }
            set
            {
                if ((this.minValueField != null))
                {
                    if ((minValueField.Equals(value) != true))
                    {
                        this.minValueField = value;
                        this.OnPropertyChanged("minValue");
                    }
                }
                else
                {
                    this.minValueField = value;
                    this.OnPropertyChanged("minValue");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string maxValue
        {
            get
            {
                return this.maxValueField;
            }
            set
            {
                if ((this.maxValueField != null))
                {
                    if ((maxValueField.Equals(value) != true))
                    {
                        this.maxValueField = value;
                        this.OnPropertyChanged("maxValue");
                    }
                }
                else
                {
                    this.maxValueField = value;
                    this.OnPropertyChanged("maxValue");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("description");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EmploymentQuestionAnswerPairType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class EmploymentQuestionAnswerPairType : EntityBase<EmploymentQuestionAnswerPairType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string questionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string answerField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Question
        {
            get
            {
                return this.questionField;
            }
            set
            {
                if ((this.questionField != null))
                {
                    if ((questionField.Equals(value) != true))
                    {
                        this.questionField = value;
                        this.OnPropertyChanged("Question");
                    }
                }
                else
                {
                    this.questionField = value;
                    this.OnPropertyChanged("Question");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer
        {
            get
            {
                return this.answerField;
            }
            set
            {
                if ((this.answerField != null))
                {
                    if ((answerField.Equals(value) != true))
                    {
                        this.answerField = value;
                        this.OnPropertyChanged("Answer");
                    }
                }
                else
                {
                    this.answerField = value;
                    this.OnPropertyChanged("Answer");
                }
            }
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("PublicationHistory", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PublicationHistoryType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PublicationHistoryType : EntityBase<PublicationHistoryType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<PublicationHistoryTypeFormattedPublicationDescription> formattedPublicationDescriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<ArticleType> articleField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<BookType> bookField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<ConferencePaperType> conferencePaperField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<OtherPublicationType> otherPublicationField;

        [System.Xml.Serialization.XmlElementAttribute("FormattedPublicationDescription")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<PublicationHistoryTypeFormattedPublicationDescription> FormattedPublicationDescription
        {
            get
            {
                if ((this.formattedPublicationDescriptionField == null))
                {
                    this.formattedPublicationDescriptionField = new List<PublicationHistoryTypeFormattedPublicationDescription>();
                }
                return this.formattedPublicationDescriptionField;
            }
            set
            {
                if ((this.formattedPublicationDescriptionField != null))
                {
                    if ((formattedPublicationDescriptionField.Equals(value) != true))
                    {
                        this.formattedPublicationDescriptionField = value;
                        this.OnPropertyChanged("FormattedPublicationDescription");
                    }
                }
                else
                {
                    this.formattedPublicationDescriptionField = value;
                    this.OnPropertyChanged("FormattedPublicationDescription");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Article")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<ArticleType> Article
        {
            get
            {
                if ((this.articleField == null))
                {
                    this.articleField = new List<ArticleType>();
                }
                return this.articleField;
            }
            set
            {
                if ((this.articleField != null))
                {
                    if ((articleField.Equals(value) != true))
                    {
                        this.articleField = value;
                        this.OnPropertyChanged("Article");
                    }
                }
                else
                {
                    this.articleField = value;
                    this.OnPropertyChanged("Article");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Book")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<BookType> Book
        {
            get
            {
                if ((this.bookField == null))
                {
                    this.bookField = new List<BookType>();
                }
                return this.bookField;
            }
            set
            {
                if ((this.bookField != null))
                {
                    if ((bookField.Equals(value) != true))
                    {
                        this.bookField = value;
                        this.OnPropertyChanged("Book");
                    }
                }
                else
                {
                    this.bookField = value;
                    this.OnPropertyChanged("Book");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("ConferencePaper")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<ConferencePaperType> ConferencePaper
        {
            get
            {
                if ((this.conferencePaperField == null))
                {
                    this.conferencePaperField = new List<ConferencePaperType>();
                }
                return this.conferencePaperField;
            }
            set
            {
                if ((this.conferencePaperField != null))
                {
                    if ((conferencePaperField.Equals(value) != true))
                    {
                        this.conferencePaperField = value;
                        this.OnPropertyChanged("ConferencePaper");
                    }
                }
                else
                {
                    this.conferencePaperField = value;
                    this.OnPropertyChanged("ConferencePaper");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("OtherPublication")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<OtherPublicationType> OtherPublication
        {
            get
            {
                if ((this.otherPublicationField == null))
                {
                    this.otherPublicationField = new List<OtherPublicationType>();
                }
                return this.otherPublicationField;
            }
            set
            {
                if ((this.otherPublicationField != null))
                {
                    if ((otherPublicationField.Equals(value) != true))
                    {
                        this.otherPublicationField = value;
                        this.OnPropertyChanged("OtherPublication");
                    }
                }
                else
                {
                    this.otherPublicationField = value;
                    this.OnPropertyChanged("OtherPublication");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PublicationHistoryTypeFormattedPublicationDescription", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PublicationHistoryTypeFormattedPublicationDescription : EntityBase<PublicationHistoryTypeFormattedPublicationDescription>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string typeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((this.typeField != null))
                {
                    if ((typeField.Equals(value) != true))
                    {
                        this.typeField = value;
                        this.OnPropertyChanged("type");
                    }
                }
                else
                {
                    this.typeField = value;
                    this.OnPropertyChanged("type");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ArticleType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class ArticleType : BasicBibliographicRecordType
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string journalOrSerialNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string iSSNField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string volumeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string issueField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string pageNumberField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string publicationLanguageField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalOrSerialName
        {
            get
            {
                return this.journalOrSerialNameField;
            }
            set
            {
                if ((this.journalOrSerialNameField != null))
                {
                    if ((journalOrSerialNameField.Equals(value) != true))
                    {
                        this.journalOrSerialNameField = value;
                        this.OnPropertyChanged("JournalOrSerialName");
                    }
                }
                else
                {
                    this.journalOrSerialNameField = value;
                    this.OnPropertyChanged("JournalOrSerialName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSN
        {
            get
            {
                return this.iSSNField;
            }
            set
            {
                if ((this.iSSNField != null))
                {
                    if ((iSSNField.Equals(value) != true))
                    {
                        this.iSSNField = value;
                        this.OnPropertyChanged("ISSN");
                    }
                }
                else
                {
                    this.iSSNField = value;
                    this.OnPropertyChanged("ISSN");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Volume
        {
            get
            {
                return this.volumeField;
            }
            set
            {
                if ((this.volumeField != null))
                {
                    if ((volumeField.Equals(value) != true))
                    {
                        this.volumeField = value;
                        this.OnPropertyChanged("Volume");
                    }
                }
                else
                {
                    this.volumeField = value;
                    this.OnPropertyChanged("Volume");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issue
        {
            get
            {
                return this.issueField;
            }
            set
            {
                if ((this.issueField != null))
                {
                    if ((issueField.Equals(value) != true))
                    {
                        this.issueField = value;
                        this.OnPropertyChanged("Issue");
                    }
                }
                else
                {
                    this.issueField = value;
                    this.OnPropertyChanged("Issue");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageNumber
        {
            get
            {
                return this.pageNumberField;
            }
            set
            {
                if ((this.pageNumberField != null))
                {
                    if ((pageNumberField.Equals(value) != true))
                    {
                        this.pageNumberField = value;
                        this.OnPropertyChanged("PageNumber");
                    }
                }
                else
                {
                    this.pageNumberField = value;
                    this.OnPropertyChanged("PageNumber");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(DataType = "language")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublicationLanguage
        {
            get
            {
                return this.publicationLanguageField;
            }
            set
            {
                if ((this.publicationLanguageField != null))
                {
                    if ((publicationLanguageField.Equals(value) != true))
                    {
                        this.publicationLanguageField = value;
                        this.OnPropertyChanged("PublicationLanguage");
                    }
                }
                else
                {
                    this.publicationLanguageField = value;
                    this.OnPropertyChanged("PublicationLanguage");
                }
            }
        }
    }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OtherPublicationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConferencePaperType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BookType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ArticleType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "BasicBibliographicRecordType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class BasicBibliographicRecordType : EntityBase<BasicBibliographicRecordType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string titleField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<BasicBibliographicRecordTypeName> nameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType publicationDateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> linkField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string abstractField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private CopyrightType copyrightField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string commentsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                if ((this.titleField != null))
                {
                    if ((titleField.Equals(value) != true))
                    {
                        this.titleField = value;
                        this.OnPropertyChanged("Title");
                    }
                }
                else
                {
                    this.titleField = value;
                    this.OnPropertyChanged("Title");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Name")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<BasicBibliographicRecordTypeName> Name
        {
            get
            {
                if ((this.nameField == null))
                {
                    this.nameField = new List<BasicBibliographicRecordTypeName>();
                }
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType PublicationDate
        {
            get
            {
                return this.publicationDateField;
            }
            set
            {
                if ((this.publicationDateField != null))
                {
                    if ((publicationDateField.Equals(value) != true))
                    {
                        this.publicationDateField = value;
                        this.OnPropertyChanged("PublicationDate");
                    }
                }
                else
                {
                    this.publicationDateField = value;
                    this.OnPropertyChanged("PublicationDate");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Link")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> Link
        {
            get
            {
                if ((this.linkField == null))
                {
                    this.linkField = new List<string>();
                }
                return this.linkField;
            }
            set
            {
                if ((this.linkField != null))
                {
                    if ((linkField.Equals(value) != true))
                    {
                        this.linkField = value;
                        this.OnPropertyChanged("Link");
                    }
                }
                else
                {
                    this.linkField = value;
                    this.OnPropertyChanged("Link");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abstract
        {
            get
            {
                return this.abstractField;
            }
            set
            {
                if ((this.abstractField != null))
                {
                    if ((abstractField.Equals(value) != true))
                    {
                        this.abstractField = value;
                        this.OnPropertyChanged("Abstract");
                    }
                }
                else
                {
                    this.abstractField = value;
                    this.OnPropertyChanged("Abstract");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public CopyrightType Copyright
        {
            get
            {
                return this.copyrightField;
            }
            set
            {
                if ((this.copyrightField != null))
                {
                    if ((copyrightField.Equals(value) != true))
                    {
                        this.copyrightField = value;
                        this.OnPropertyChanged("Copyright");
                    }
                }
                else
                {
                    this.copyrightField = value;
                    this.OnPropertyChanged("Copyright");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments
        {
            get
            {
                return this.commentsField;
            }
            set
            {
                if ((this.commentsField != null))
                {
                    if ((commentsField.Equals(value) != true))
                    {
                        this.commentsField = value;
                        this.OnPropertyChanged("Comments");
                    }
                }
                else
                {
                    this.commentsField = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "BasicBibliographicRecordTypeName", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class BasicBibliographicRecordTypeName : PersonNameType
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string roleField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string role
        {
            get
            {
                if ((this.roleField == null))
                {
                    this.roleField = string.Empty;
                }
                return this.roleField;
            }
            set
            {
                if ((this.roleField != null))
                {
                    if ((roleField.Equals(value) != true))
                    {
                        this.roleField = value;
                        this.OnPropertyChanged("role");
                    }
                }
                else
                {
                    this.roleField = value;
                    this.OnPropertyChanged("role");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CopyrightType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class CopyrightType : EntityBase<CopyrightType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private CopyrightTypeCopyrightDates copyrightDatesField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string copyrightTextField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public CopyrightTypeCopyrightDates CopyrightDates
        {
            get
            {
                return this.copyrightDatesField;
            }
            set
            {
                if ((this.copyrightDatesField != null))
                {
                    if ((copyrightDatesField.Equals(value) != true))
                    {
                        this.copyrightDatesField = value;
                        this.OnPropertyChanged("CopyrightDates");
                    }
                }
                else
                {
                    this.copyrightDatesField = value;
                    this.OnPropertyChanged("CopyrightDates");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CopyrightText
        {
            get
            {
                return this.copyrightTextField;
            }
            set
            {
                if ((this.copyrightTextField != null))
                {
                    if ((copyrightTextField.Equals(value) != true))
                    {
                        this.copyrightTextField = value;
                        this.OnPropertyChanged("CopyrightText");
                    }
                }
                else
                {
                    this.copyrightTextField = value;
                    this.OnPropertyChanged("CopyrightText");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CopyrightTypeCopyrightDates", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class CopyrightTypeCopyrightDates : EntityBase<CopyrightTypeCopyrightDates>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType originalDateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType mostRecentDateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType OriginalDate
        {
            get
            {
                return this.originalDateField;
            }
            set
            {
                if ((this.originalDateField != null))
                {
                    if ((originalDateField.Equals(value) != true))
                    {
                        this.originalDateField = value;
                        this.OnPropertyChanged("OriginalDate");
                    }
                }
                else
                {
                    this.originalDateField = value;
                    this.OnPropertyChanged("OriginalDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType MostRecentDate
        {
            get
            {
                return this.mostRecentDateField;
            }
            set
            {
                if ((this.mostRecentDateField != null))
                {
                    if ((mostRecentDateField.Equals(value) != true))
                    {
                        this.mostRecentDateField = value;
                        this.OnPropertyChanged("MostRecentDate");
                    }
                }
                else
                {
                    this.mostRecentDateField = value;
                    this.OnPropertyChanged("MostRecentDate");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "OtherPublicationType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class OtherPublicationType : BasicBibliographicRecordType
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string iSSNField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string iSBNField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string numberOfPagesField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string publisherNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string publisherLocationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string typeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSN
        {
            get
            {
                return this.iSSNField;
            }
            set
            {
                if ((this.iSSNField != null))
                {
                    if ((iSSNField.Equals(value) != true))
                    {
                        this.iSSNField = value;
                        this.OnPropertyChanged("ISSN");
                    }
                }
                else
                {
                    this.iSSNField = value;
                    this.OnPropertyChanged("ISSN");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISBN
        {
            get
            {
                return this.iSBNField;
            }
            set
            {
                if ((this.iSBNField != null))
                {
                    if ((iSBNField.Equals(value) != true))
                    {
                        this.iSBNField = value;
                        this.OnPropertyChanged("ISBN");
                    }
                }
                else
                {
                    this.iSBNField = value;
                    this.OnPropertyChanged("ISBN");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOfPages
        {
            get
            {
                return this.numberOfPagesField;
            }
            set
            {
                if ((this.numberOfPagesField != null))
                {
                    if ((numberOfPagesField.Equals(value) != true))
                    {
                        this.numberOfPagesField = value;
                        this.OnPropertyChanged("NumberOfPages");
                    }
                }
                else
                {
                    this.numberOfPagesField = value;
                    this.OnPropertyChanged("NumberOfPages");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublisherName
        {
            get
            {
                return this.publisherNameField;
            }
            set
            {
                if ((this.publisherNameField != null))
                {
                    if ((publisherNameField.Equals(value) != true))
                    {
                        this.publisherNameField = value;
                        this.OnPropertyChanged("PublisherName");
                    }
                }
                else
                {
                    this.publisherNameField = value;
                    this.OnPropertyChanged("PublisherName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublisherLocation
        {
            get
            {
                return this.publisherLocationField;
            }
            set
            {
                if ((this.publisherLocationField != null))
                {
                    if ((publisherLocationField.Equals(value) != true))
                    {
                        this.publisherLocationField = value;
                        this.OnPropertyChanged("PublisherLocation");
                    }
                }
                else
                {
                    this.publisherLocationField = value;
                    this.OnPropertyChanged("PublisherLocation");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((this.typeField != null))
                {
                    if ((typeField.Equals(value) != true))
                    {
                        this.typeField = value;
                        this.OnPropertyChanged("type");
                    }
                }
                else
                {
                    this.typeField = value;
                    this.OnPropertyChanged("type");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ConferencePaperType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class ConferencePaperType : BasicBibliographicRecordType
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string eventNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType conferenceDateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string conferenceLocationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName
        {
            get
            {
                return this.eventNameField;
            }
            set
            {
                if ((this.eventNameField != null))
                {
                    if ((eventNameField.Equals(value) != true))
                    {
                        this.eventNameField = value;
                        this.OnPropertyChanged("EventName");
                    }
                }
                else
                {
                    this.eventNameField = value;
                    this.OnPropertyChanged("EventName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType ConferenceDate
        {
            get
            {
                return this.conferenceDateField;
            }
            set
            {
                if ((this.conferenceDateField != null))
                {
                    if ((conferenceDateField.Equals(value) != true))
                    {
                        this.conferenceDateField = value;
                        this.OnPropertyChanged("ConferenceDate");
                    }
                }
                else
                {
                    this.conferenceDateField = value;
                    this.OnPropertyChanged("ConferenceDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConferenceLocation
        {
            get
            {
                return this.conferenceLocationField;
            }
            set
            {
                if ((this.conferenceLocationField != null))
                {
                    if ((conferenceLocationField.Equals(value) != true))
                    {
                        this.conferenceLocationField = value;
                        this.OnPropertyChanged("ConferenceLocation");
                    }
                }
                else
                {
                    this.conferenceLocationField = value;
                    this.OnPropertyChanged("ConferenceLocation");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "BookType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class BookType : BasicBibliographicRecordType
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string editionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string chapterField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string iSSNField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string iSBNField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string numberOfPagesField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string publisherNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string publisherLocationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Edition
        {
            get
            {
                return this.editionField;
            }
            set
            {
                if ((this.editionField != null))
                {
                    if ((editionField.Equals(value) != true))
                    {
                        this.editionField = value;
                        this.OnPropertyChanged("Edition");
                    }
                }
                else
                {
                    this.editionField = value;
                    this.OnPropertyChanged("Edition");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chapter
        {
            get
            {
                return this.chapterField;
            }
            set
            {
                if ((this.chapterField != null))
                {
                    if ((chapterField.Equals(value) != true))
                    {
                        this.chapterField = value;
                        this.OnPropertyChanged("Chapter");
                    }
                }
                else
                {
                    this.chapterField = value;
                    this.OnPropertyChanged("Chapter");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSN
        {
            get
            {
                return this.iSSNField;
            }
            set
            {
                if ((this.iSSNField != null))
                {
                    if ((iSSNField.Equals(value) != true))
                    {
                        this.iSSNField = value;
                        this.OnPropertyChanged("ISSN");
                    }
                }
                else
                {
                    this.iSSNField = value;
                    this.OnPropertyChanged("ISSN");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISBN
        {
            get
            {
                return this.iSBNField;
            }
            set
            {
                if ((this.iSBNField != null))
                {
                    if ((iSBNField.Equals(value) != true))
                    {
                        this.iSBNField = value;
                        this.OnPropertyChanged("ISBN");
                    }
                }
                else
                {
                    this.iSBNField = value;
                    this.OnPropertyChanged("ISBN");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOfPages
        {
            get
            {
                return this.numberOfPagesField;
            }
            set
            {
                if ((this.numberOfPagesField != null))
                {
                    if ((numberOfPagesField.Equals(value) != true))
                    {
                        this.numberOfPagesField = value;
                        this.OnPropertyChanged("NumberOfPages");
                    }
                }
                else
                {
                    this.numberOfPagesField = value;
                    this.OnPropertyChanged("NumberOfPages");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublisherName
        {
            get
            {
                return this.publisherNameField;
            }
            set
            {
                if ((this.publisherNameField != null))
                {
                    if ((publisherNameField.Equals(value) != true))
                    {
                        this.publisherNameField = value;
                        this.OnPropertyChanged("PublisherName");
                    }
                }
                else
                {
                    this.publisherNameField = value;
                    this.OnPropertyChanged("PublisherName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublisherLocation
        {
            get
            {
                return this.publisherLocationField;
            }
            set
            {
                if ((this.publisherLocationField != null))
                {
                    if ((publisherLocationField.Equals(value) != true))
                    {
                        this.publisherLocationField = value;
                        this.OnPropertyChanged("PublisherLocation");
                    }
                }
                else
                {
                    this.publisherLocationField = value;
                    this.OnPropertyChanged("PublisherLocation");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("PatentHistory", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PatentHistoryType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PatentHistoryType : EntityBase<PatentHistoryType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<PatentDescriptionType> patentField;

        [System.Xml.Serialization.XmlElementAttribute("Patent")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<PatentDescriptionType> Patent
        {
            get
            {
                if ((this.patentField == null))
                {
                    this.patentField = new List<PatentDescriptionType>();
                }
                return this.patentField;
            }
            set
            {
                if ((this.patentField != null))
                {
                    if ((patentField.Equals(value) != true))
                    {
                        this.patentField = value;
                        this.OnPropertyChanged("Patent");
                    }
                }
                else
                {
                    this.patentField = value;
                    this.OnPropertyChanged("Patent");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PatentDescriptionType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PatentDescriptionType : EntityBase<PatentDescriptionType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string patentTitleField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> inventorsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<PatentDescriptionTypePatentDetail> patentDetailField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string linkField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatentTitle
        {
            get
            {
                return this.patentTitleField;
            }
            set
            {
                if ((this.patentTitleField != null))
                {
                    if ((patentTitleField.Equals(value) != true))
                    {
                        this.patentTitleField = value;
                        this.OnPropertyChanged("PatentTitle");
                    }
                }
                else
                {
                    this.patentTitleField = value;
                    this.OnPropertyChanged("PatentTitle");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("InventorName", IsNullable = false)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> Inventors
        {
            get
            {
                if ((this.inventorsField == null))
                {
                    this.inventorsField = new List<string>();
                }
                return this.inventorsField;
            }
            set
            {
                if ((this.inventorsField != null))
                {
                    if ((inventorsField.Equals(value) != true))
                    {
                        this.inventorsField = value;
                        this.OnPropertyChanged("Inventors");
                    }
                }
                else
                {
                    this.inventorsField = value;
                    this.OnPropertyChanged("Inventors");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PatentDetail")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<PatentDescriptionTypePatentDetail> PatentDetail
        {
            get
            {
                if ((this.patentDetailField == null))
                {
                    this.patentDetailField = new List<PatentDescriptionTypePatentDetail>();
                }
                return this.patentDetailField;
            }
            set
            {
                if ((this.patentDetailField != null))
                {
                    if ((patentDetailField.Equals(value) != true))
                    {
                        this.patentDetailField = value;
                        this.OnPropertyChanged("PatentDetail");
                    }
                }
                else
                {
                    this.patentDetailField = value;
                    this.OnPropertyChanged("PatentDetail");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link
        {
            get
            {
                if ((this.linkField == null))
                {
                    this.linkField = string.Empty;
                }
                return this.linkField;
            }
            set
            {
                if ((this.linkField != null))
                {
                    if ((linkField.Equals(value) != true))
                    {
                        this.linkField = value;
                        this.OnPropertyChanged("Link");
                    }
                }
                else
                {
                    this.linkField = value;
                    this.OnPropertyChanged("Link");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PatentDescriptionTypePatentDetail", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PatentDescriptionTypePatentDetail : EntityBase<PatentDescriptionTypePatentDetail>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PatentDescriptionTypePatentDetailIssuingAuthority issuingAuthorityField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<PatentDescriptionTypePatentDetailPatentMilestone> patentMilestoneField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PatentDescriptionTypePatentDetailIssuingAuthority IssuingAuthority
        {
            get
            {
                return this.issuingAuthorityField;
            }
            set
            {
                if ((this.issuingAuthorityField != null))
                {
                    if ((issuingAuthorityField.Equals(value) != true))
                    {
                        this.issuingAuthorityField = value;
                        this.OnPropertyChanged("IssuingAuthority");
                    }
                }
                else
                {
                    this.issuingAuthorityField = value;
                    this.OnPropertyChanged("IssuingAuthority");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PatentMilestone")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<PatentDescriptionTypePatentDetailPatentMilestone> PatentMilestone
        {
            get
            {
                if ((this.patentMilestoneField == null))
                {
                    this.patentMilestoneField = new List<PatentDescriptionTypePatentDetailPatentMilestone>();
                }
                return this.patentMilestoneField;
            }
            set
            {
                if ((this.patentMilestoneField != null))
                {
                    if ((patentMilestoneField.Equals(value) != true))
                    {
                        this.patentMilestoneField = value;
                        this.OnPropertyChanged("PatentMilestone");
                    }
                }
                else
                {
                    this.patentMilestoneField = value;
                    this.OnPropertyChanged("PatentMilestone");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PatentDescriptionTypePatentDetailIssuingAuthority", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PatentDescriptionTypePatentDetailIssuingAuthority : EntityBase<PatentDescriptionTypePatentDetailIssuingAuthority>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string countryCodeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string countryCode
        {
            get
            {
                return this.countryCodeField;
            }
            set
            {
                if ((this.countryCodeField != null))
                {
                    if ((countryCodeField.Equals(value) != true))
                    {
                        this.countryCodeField = value;
                        this.OnPropertyChanged("countryCode");
                    }
                }
                else
                {
                    this.countryCodeField = value;
                    this.OnPropertyChanged("countryCode");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PatentDescriptionTypePatentDetailPatentMilestone", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PatentDescriptionTypePatentDetailPatentMilestone : EntityBase<PatentDescriptionTypePatentDetailPatentMilestone>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string idField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string statusField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string dateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                if ((this.idField == null))
                {
                    this.idField = string.Empty;
                }
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id");
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                if ((this.statusField != null))
                {
                    if ((statusField.Equals(value) != true))
                    {
                        this.statusField = value;
                        this.OnPropertyChanged("Status");
                    }
                }
                else
                {
                    this.statusField = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date
        {
            get
            {
                if ((this.dateField == null))
                {
                    this.dateField = string.Empty;
                }
                return this.dateField;
            }
            set
            {
                if ((this.dateField != null))
                {
                    if ((dateField.Equals(value) != true))
                    {
                        this.dateField = value;
                        this.OnPropertyChanged("Date");
                    }
                }
                else
                {
                    this.dateField = value;
                    this.OnPropertyChanged("Date");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SpeakingEventsHistory", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class SpeakingEventsHistory : EntityBase<SpeakingEventsHistory>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<SpeakingEventType> speakingEventField;

        [System.Xml.Serialization.XmlElementAttribute("SpeakingEvent")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<SpeakingEventType> SpeakingEvent
        {
            get
            {
                if ((this.speakingEventField == null))
                {
                    this.speakingEventField = new List<SpeakingEventType>();
                }
                return this.speakingEventField;
            }
            set
            {
                if ((this.speakingEventField != null))
                {
                    if ((speakingEventField.Equals(value) != true))
                    {
                        this.speakingEventField = value;
                        this.OnPropertyChanged("SpeakingEvent");
                    }
                }
                else
                {
                    this.speakingEventField = value;
                    this.OnPropertyChanged("SpeakingEvent");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("SpeakingEvent", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SpeakingEventType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class SpeakingEventType : EntityBase<SpeakingEventType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string titleField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string roleField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType startDateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType endDateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string eventNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string eventTypeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string locationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> affiliatedOrganizationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string linkField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string typeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                if ((this.titleField != null))
                {
                    if ((titleField.Equals(value) != true))
                    {
                        this.titleField = value;
                        this.OnPropertyChanged("Title");
                    }
                }
                else
                {
                    this.titleField = value;
                    this.OnPropertyChanged("Title");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role
        {
            get
            {
                if ((this.roleField == null))
                {
                    this.roleField = string.Empty;
                }
                return this.roleField;
            }
            set
            {
                if ((this.roleField != null))
                {
                    if ((roleField.Equals(value) != true))
                    {
                        this.roleField = value;
                        this.OnPropertyChanged("Role");
                    }
                }
                else
                {
                    this.roleField = value;
                    this.OnPropertyChanged("Role");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                if ((this.startDateField != null))
                {
                    if ((startDateField.Equals(value) != true))
                    {
                        this.startDateField = value;
                        this.OnPropertyChanged("StartDate");
                    }
                }
                else
                {
                    this.startDateField = value;
                    this.OnPropertyChanged("StartDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                if ((this.endDateField != null))
                {
                    if ((endDateField.Equals(value) != true))
                    {
                        this.endDateField = value;
                        this.OnPropertyChanged("EndDate");
                    }
                }
                else
                {
                    this.endDateField = value;
                    this.OnPropertyChanged("EndDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName
        {
            get
            {
                return this.eventNameField;
            }
            set
            {
                if ((this.eventNameField != null))
                {
                    if ((eventNameField.Equals(value) != true))
                    {
                        this.eventNameField = value;
                        this.OnPropertyChanged("EventName");
                    }
                }
                else
                {
                    this.eventNameField = value;
                    this.OnPropertyChanged("EventName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventType
        {
            get
            {
                return this.eventTypeField;
            }
            set
            {
                if ((this.eventTypeField != null))
                {
                    if ((eventTypeField.Equals(value) != true))
                    {
                        this.eventTypeField = value;
                        this.OnPropertyChanged("EventType");
                    }
                }
                else
                {
                    this.eventTypeField = value;
                    this.OnPropertyChanged("EventType");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.locationField;
            }
            set
            {
                if ((this.locationField != null))
                {
                    if ((locationField.Equals(value) != true))
                    {
                        this.locationField = value;
                        this.OnPropertyChanged("Location");
                    }
                }
                else
                {
                    this.locationField = value;
                    this.OnPropertyChanged("Location");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("AffiliatedOrganization")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> AffiliatedOrganization
        {
            get
            {
                if ((this.affiliatedOrganizationField == null))
                {
                    this.affiliatedOrganizationField = new List<string>();
                }
                return this.affiliatedOrganizationField;
            }
            set
            {
                if ((this.affiliatedOrganizationField != null))
                {
                    if ((affiliatedOrganizationField.Equals(value) != true))
                    {
                        this.affiliatedOrganizationField = value;
                        this.OnPropertyChanged("AffiliatedOrganization");
                    }
                }
                else
                {
                    this.affiliatedOrganizationField = value;
                    this.OnPropertyChanged("AffiliatedOrganization");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link
        {
            get
            {
                if ((this.linkField == null))
                {
                    this.linkField = string.Empty;
                }
                return this.linkField;
            }
            set
            {
                if ((this.linkField != null))
                {
                    if ((linkField.Equals(value) != true))
                    {
                        this.linkField = value;
                        this.OnPropertyChanged("Link");
                    }
                }
                else
                {
                    this.linkField = value;
                    this.OnPropertyChanged("Link");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((this.typeField != null))
                {
                    if ((typeField.Equals(value) != true))
                    {
                        this.typeField = value;
                        this.OnPropertyChanged("type");
                    }
                }
                else
                {
                    this.typeField = value;
                    this.OnPropertyChanged("type");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LicensesAndCertifications", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class LicensesAndCertifications : EntityBase<LicensesAndCertifications>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<CredentialType> licenseOrCertificationField;

        [System.Xml.Serialization.XmlElementAttribute("LicenseOrCertification")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<CredentialType> LicenseOrCertification
        {
            get
            {
                if ((this.licenseOrCertificationField == null))
                {
                    this.licenseOrCertificationField = new List<CredentialType>();
                }
                return this.licenseOrCertificationField;
            }
            set
            {
                if ((this.licenseOrCertificationField != null))
                {
                    if ((licenseOrCertificationField.Equals(value) != true))
                    {
                        this.licenseOrCertificationField = value;
                        this.OnPropertyChanged("LicenseOrCertification");
                    }
                }
                else
                {
                    this.licenseOrCertificationField = value;
                    this.OnPropertyChanged("LicenseOrCertification");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("LicenseOrCertification", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CredentialType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class CredentialType : EntityBase<CredentialType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string nameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string idField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private IssuingAuthorityType issuingAuthorityField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private CredentialTypeEffectiveDate effectiveDateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                if ((this.nameField == null))
                {
                    this.nameField = string.Empty;
                }
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                if ((this.idField == null))
                {
                    this.idField = string.Empty;
                }
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id");
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public IssuingAuthorityType IssuingAuthority
        {
            get
            {
                return this.issuingAuthorityField;
            }
            set
            {
                if ((this.issuingAuthorityField != null))
                {
                    if ((issuingAuthorityField.Equals(value) != true))
                    {
                        this.issuingAuthorityField = value;
                        this.OnPropertyChanged("IssuingAuthority");
                    }
                }
                else
                {
                    this.issuingAuthorityField = value;
                    this.OnPropertyChanged("IssuingAuthority");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                if ((this.descriptionField == null))
                {
                    this.descriptionField = string.Empty;
                }
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public CredentialTypeEffectiveDate EffectiveDate
        {
            get
            {
                return this.effectiveDateField;
            }
            set
            {
                if ((this.effectiveDateField != null))
                {
                    if ((effectiveDateField.Equals(value) != true))
                    {
                        this.effectiveDateField = value;
                        this.OnPropertyChanged("EffectiveDate");
                    }
                }
                else
                {
                    this.effectiveDateField = value;
                    this.OnPropertyChanged("EffectiveDate");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "IssuingAuthorityType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class IssuingAuthorityType : EntityBase<IssuingAuthorityType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string countryCodeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string countryCode
        {
            get
            {
                return this.countryCodeField;
            }
            set
            {
                if ((this.countryCodeField != null))
                {
                    if ((countryCodeField.Equals(value) != true))
                    {
                        this.countryCodeField = value;
                        this.OnPropertyChanged("countryCode");
                    }
                }
                else
                {
                    this.countryCodeField = value;
                    this.OnPropertyChanged("countryCode");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CredentialTypeEffectiveDate", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class CredentialTypeEffectiveDate : EntityBase<CredentialTypeEffectiveDate>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType validFromField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType validToField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private FlexibleDatesType firstIssuedDateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType ValidFrom
        {
            get
            {
                return this.validFromField;
            }
            set
            {
                if ((this.validFromField != null))
                {
                    if ((validFromField.Equals(value) != true))
                    {
                        this.validFromField = value;
                        this.OnPropertyChanged("ValidFrom");
                    }
                }
                else
                {
                    this.validFromField = value;
                    this.OnPropertyChanged("ValidFrom");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType ValidTo
        {
            get
            {
                return this.validToField;
            }
            set
            {
                if ((this.validToField != null))
                {
                    if ((validToField.Equals(value) != true))
                    {
                        this.validToField = value;
                        this.OnPropertyChanged("ValidTo");
                    }
                }
                else
                {
                    this.validToField = value;
                    this.OnPropertyChanged("ValidTo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public FlexibleDatesType FirstIssuedDate
        {
            get
            {
                return this.firstIssuedDateField;
            }
            set
            {
                if ((this.firstIssuedDateField != null))
                {
                    if ((firstIssuedDateField.Equals(value) != true))
                    {
                        this.firstIssuedDateField = value;
                        this.OnPropertyChanged("FirstIssuedDate");
                    }
                }
                else
                {
                    this.firstIssuedDateField = value;
                    this.OnPropertyChanged("FirstIssuedDate");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SecurityCredentials", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class SecurityCredentials : EntityBase<SecurityCredentials>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<CredentialType> securityCredentialField;

        [System.Xml.Serialization.XmlElementAttribute("SecurityCredential")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<CredentialType> SecurityCredential
        {
            get
            {
                if ((this.securityCredentialField == null))
                {
                    this.securityCredentialField = new List<CredentialType>();
                }
                return this.securityCredentialField;
            }
            set
            {
                if ((this.securityCredentialField != null))
                {
                    if ((securityCredentialField.Equals(value) != true))
                    {
                        this.securityCredentialField = value;
                        this.OnPropertyChanged("SecurityCredential");
                    }
                }
                else
                {
                    this.securityCredentialField = value;
                    this.OnPropertyChanged("SecurityCredential");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(ElementName = "Resume", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ResumeType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class ResumeType : EntityBase<ResumeType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EntityIdType resumeIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private DistributionGuidelinesType distributionGuidelinesField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private StructuredXMLResumeType structuredXMLResumeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private NonXMLResumeType nonXMLResumeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private UserAreaType userAreaField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string langField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityIdType ResumeId
        {
            get
            {
                return this.resumeIdField;
            }
            set
            {
                if ((this.resumeIdField != null))
                {
                    if ((resumeIdField.Equals(value) != true))
                    {
                        this.resumeIdField = value;
                        this.OnPropertyChanged("ResumeId");
                    }
                }
                else
                {
                    this.resumeIdField = value;
                    this.OnPropertyChanged("ResumeId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public DistributionGuidelinesType DistributionGuidelines
        {
            get
            {
                return this.distributionGuidelinesField;
            }
            set
            {
                if ((this.distributionGuidelinesField != null))
                {
                    if ((distributionGuidelinesField.Equals(value) != true))
                    {
                        this.distributionGuidelinesField = value;
                        this.OnPropertyChanged("DistributionGuidelines");
                    }
                }
                else
                {
                    this.distributionGuidelinesField = value;
                    this.OnPropertyChanged("DistributionGuidelines");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public StructuredXMLResumeType StructuredXMLResume
        {
            get
            {
                return this.structuredXMLResumeField;
            }
            set
            {
                if ((this.structuredXMLResumeField != null))
                {
                    if ((structuredXMLResumeField.Equals(value) != true))
                    {
                        this.structuredXMLResumeField = value;
                        this.OnPropertyChanged("StructuredXMLResume");
                    }
                }
                else
                {
                    this.structuredXMLResumeField = value;
                    this.OnPropertyChanged("StructuredXMLResume");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public NonXMLResumeType NonXMLResume
        {
            get
            {
                return this.nonXMLResumeField;
            }
            set
            {
                if ((this.nonXMLResumeField != null))
                {
                    if ((nonXMLResumeField.Equals(value) != true))
                    {
                        this.nonXMLResumeField = value;
                        this.OnPropertyChanged("NonXMLResume");
                    }
                }
                else
                {
                    this.nonXMLResumeField = value;
                    this.OnPropertyChanged("NonXMLResume");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserAreaType UserArea
        {
            get
            {
                return this.userAreaField;
            }
            set
            {
                if ((this.userAreaField != null))
                {
                    if ((userAreaField.Equals(value) != true))
                    {
                        this.userAreaField = value;
                        this.OnPropertyChanged("UserArea");
                    }
                }
                else
                {
                    this.userAreaField = value;
                    this.OnPropertyChanged("UserArea");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/XML/1998/namespace")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lang
        {
            get
            {
                return this.langField;
            }
            set
            {
                if ((this.langField != null))
                {
                    if ((langField.Equals(value) != true))
                    {
                        this.langField = value;
                        this.OnPropertyChanged("lang");
                    }
                }
                else
                {
                    this.langField = value;
                    this.OnPropertyChanged("lang");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("StructuredXMLResume", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StructuredXMLResumeType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StructuredXMLResumeType : EntityBase<StructuredXMLResumeType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private SEPContactInfoType contactInfoField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string executiveSummaryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string objectiveField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EmployerOrgDataType> employmentHistoryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EducationHistoryTypeSchoolOrInstitution> educationHistoryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<CredentialType> licensesAndCertificationsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private MilitaryHistoryType militaryHistoryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<PatentDescriptionType> patentHistoryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PublicationHistoryType publicationHistoryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<SpeakingEventType> speakingEventsHistoryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private StructuredXMLResumeTypeQualifications qualificationsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<Language> languagesField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<AchievementType> achievementsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<Association> associationsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<ReferenceType> referencesField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<CredentialType> securityCredentialsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<AdditionalItemType> resumeAdditionalItemsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<StaffingSupportingMaterialsType> supportingMaterialsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> professionalAssociationsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string commentsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string revisionDateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public SEPContactInfoType ContactInfo
        {
            get
            {
                return this.contactInfoField;
            }
            set
            {
                if ((this.contactInfoField != null))
                {
                    if ((contactInfoField.Equals(value) != true))
                    {
                        this.contactInfoField = value;
                        this.OnPropertyChanged("ContactInfo");
                    }
                }
                else
                {
                    this.contactInfoField = value;
                    this.OnPropertyChanged("ContactInfo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutiveSummary
        {
            get
            {
                return this.executiveSummaryField;
            }
            set
            {
                if ((this.executiveSummaryField != null))
                {
                    if ((executiveSummaryField.Equals(value) != true))
                    {
                        this.executiveSummaryField = value;
                        this.OnPropertyChanged("ExecutiveSummary");
                    }
                }
                else
                {
                    this.executiveSummaryField = value;
                    this.OnPropertyChanged("ExecutiveSummary");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Objective
        {
            get
            {
                return this.objectiveField;
            }
            set
            {
                if ((this.objectiveField != null))
                {
                    if ((objectiveField.Equals(value) != true))
                    {
                        this.objectiveField = value;
                        this.OnPropertyChanged("Objective");
                    }
                }
                else
                {
                    this.objectiveField = value;
                    this.OnPropertyChanged("Objective");
                }
            }
        }

        private bool employmentHistoryFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmploymentHistorySpecified
        {
            get
            {
                return this.employmentHistoryFieldSpecified;
            }
            set
            {
                if ((employmentHistoryFieldSpecified.Equals(value) != true))
                {
                    this.employmentHistoryFieldSpecified = value;
                    this.OnPropertyChanged("EmploymentHistorySpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("EmployerOrg")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EmployerOrgDataType> EmploymentHistory
        {
            get
            {
                return this.employmentHistoryField;
            }
            set
            {
                if ((this.employmentHistoryField != null))
                {
                    if ((employmentHistoryField.Equals(value) != true))
                    {
                        this.employmentHistoryField = value;
                        this.OnPropertyChanged("EmploymentHistory");
                    }
                }
                else
                {
                    this.employmentHistoryField = value;
                    this.OnPropertyChanged("EmploymentHistory");
                }
            }
        }

        private bool educationHistoryFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EducationHistorySpecified
        {
            get
            {
                return this.educationHistoryFieldSpecified;
            }
            set
            {
                if ((educationHistoryFieldSpecified.Equals(value) != true))
                {
                    this.educationHistoryFieldSpecified = value;
                    this.OnPropertyChanged("EducationHistorySpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("SchoolOrInstitution")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EducationHistoryTypeSchoolOrInstitution> EducationHistory
        {
            get
            {
                return this.educationHistoryField;
            }
            set
            {
                if ((this.educationHistoryField != null))
                {
                    if ((educationHistoryField.Equals(value) != true))
                    {
                        this.educationHistoryField = value;
                        this.OnPropertyChanged("EducationHistory");
                    }
                }
                else
                {
                    this.educationHistoryField = value;
                    this.OnPropertyChanged("EducationHistory");
                }
            }
        }

        private bool licensesAndCertificationsFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LicensesAndCertificationsSpecified
        {
            get
            {
                return this.licensesAndCertificationsFieldSpecified;
            }
            set
            {
                if ((licensesAndCertificationsFieldSpecified.Equals(value) != true))
                {
                    this.licensesAndCertificationsFieldSpecified = value;
                    this.OnPropertyChanged("LicensesAndCertificationsSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("LicenseOrCertification")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<CredentialType> LicensesAndCertifications
        {
            get
            {
                return this.licensesAndCertificationsField;
            }
            set
            {
                if ((this.licensesAndCertificationsField != null))
                {
                    if ((licensesAndCertificationsField.Equals(value) != true))
                    {
                        this.licensesAndCertificationsField = value;
                        this.OnPropertyChanged("LicensesAndCertifications");
                    }
                }
                else
                {
                    this.licensesAndCertificationsField = value;
                    this.OnPropertyChanged("LicensesAndCertifications");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public MilitaryHistoryType MilitaryHistory
        {
            get
            {
                return this.militaryHistoryField;
            }
            set
            {
                if ((this.militaryHistoryField != null))
                {
                    if ((militaryHistoryField.Equals(value) != true))
                    {
                        this.militaryHistoryField = value;
                        this.OnPropertyChanged("MilitaryHistory");
                    }
                }
                else
                {
                    this.militaryHistoryField = value;
                    this.OnPropertyChanged("MilitaryHistory");
                }
            }
        }

        private bool patentHistoryFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PatentHistorySpecified
        {
            get
            {
                return this.patentHistoryFieldSpecified;
            }
            set
            {
                if ((patentHistoryFieldSpecified.Equals(value) != true))
                {
                    this.patentHistoryFieldSpecified = value;
                    this.OnPropertyChanged("PatentHistorySpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("Patent")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<PatentDescriptionType> PatentHistory
        {
            get
            {
                return this.patentHistoryField;
            }
            set
            {
                if ((this.patentHistoryField != null))
                {
                    if ((patentHistoryField.Equals(value) != true))
                    {
                        this.patentHistoryField = value;
                        this.OnPropertyChanged("PatentHistory");
                    }
                }
                else
                {
                    this.patentHistoryField = value;
                    this.OnPropertyChanged("PatentHistory");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PublicationHistoryType PublicationHistory
        {
            get
            {
                return this.publicationHistoryField;
            }
            set
            {
                if ((this.publicationHistoryField != null))
                {
                    if ((publicationHistoryField.Equals(value) != true))
                    {
                        this.publicationHistoryField = value;
                        this.OnPropertyChanged("PublicationHistory");
                    }
                }
                else
                {
                    this.publicationHistoryField = value;
                    this.OnPropertyChanged("PublicationHistory");
                }
            }
        }

        private bool speakingEventsHistoryFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SpeakingEventsHistorySpecified
        {
            get
            {
                return this.speakingEventsHistoryFieldSpecified;
            }
            set
            {
                if ((speakingEventsHistoryFieldSpecified.Equals(value) != true))
                {
                    this.speakingEventsHistoryFieldSpecified = value;
                    this.OnPropertyChanged("SpeakingEventsHistorySpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("SpeakingEvent")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<SpeakingEventType> SpeakingEventsHistory
        {
            get
            {
                return this.speakingEventsHistoryField;
            }
            set
            {
                if ((this.speakingEventsHistoryField != null))
                {
                    if ((speakingEventsHistoryField.Equals(value) != true))
                    {
                        this.speakingEventsHistoryField = value;
                        this.OnPropertyChanged("SpeakingEventsHistory");
                    }
                }
                else
                {
                    this.speakingEventsHistoryField = value;
                    this.OnPropertyChanged("SpeakingEventsHistory");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public StructuredXMLResumeTypeQualifications Qualifications
        {
            get
            {
                return this.qualificationsField;
            }
            set
            {
                if ((this.qualificationsField != null))
                {
                    if ((qualificationsField.Equals(value) != true))
                    {
                        this.qualificationsField = value;
                        this.OnPropertyChanged("Qualifications");
                    }
                }
                else
                {
                    this.qualificationsField = value;
                    this.OnPropertyChanged("Qualifications");
                }
            }
        }

        private bool languagesFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LanguagesSpecified
        {
            get
            {
                return this.languagesFieldSpecified;
            }
            set
            {
                if ((languagesFieldSpecified.Equals(value) != true))
                {
                    this.languagesFieldSpecified = value;
                    this.OnPropertyChanged("LanguagesSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("Language")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<Language> Languages
        {
            get
            {
                return this.languagesField;
            }
            set
            {
                if ((this.languagesField != null))
                {
                    if ((languagesField.Equals(value) != true))
                    {
                        this.languagesField = value;
                        this.OnPropertyChanged("Languages");
                    }
                }
                else
                {
                    this.languagesField = value;
                    this.OnPropertyChanged("Languages");
                }
            }
        }

        private bool achievementsFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AchievementsSpecified
        {
            get
            {
                return this.achievementsFieldSpecified;
            }
            set
            {
                if ((achievementsFieldSpecified.Equals(value) != true))
                {
                    this.achievementsFieldSpecified = value;
                    this.OnPropertyChanged("AchievementsSpecified");
                }
            }
        }
        [System.Xml.Serialization.XmlArrayItemAttribute("Achievement")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<AchievementType> Achievements
        {
            get
            {
                return this.achievementsField;
            }
            set
            {
                if ((this.achievementsField != null))
                {
                    if ((achievementsField.Equals(value) != true))
                    {
                        this.achievementsField = value;
                        this.OnPropertyChanged("Achievements");
                    }
                }
                else
                {
                    this.achievementsField = value;
                    this.OnPropertyChanged("Achievements");
                }
            }
        }

        private bool associationsFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AssociationsSpecified
        {
            get
            {
                return this.associationsFieldSpecified;
            }
            set
            {
                if ((associationsFieldSpecified.Equals(value) != true))
                {
                    this.associationsFieldSpecified = value;
                    this.OnPropertyChanged("AssociationsSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("Association")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<Association> Associations
        {
            get
            {
                return this.associationsField;
            }
            set
            {
                if ((this.associationsField != null))
                {
                    if ((associationsField.Equals(value) != true))
                    {
                        this.associationsField = value;
                        this.OnPropertyChanged("Associations");
                    }
                }
                else
                {
                    this.associationsField = value;
                    this.OnPropertyChanged("Associations");
                }
            }
        }

        private bool referencesFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReferencesSpecified
        {
            get
            {
                return this.referencesFieldSpecified;
            }
            set
            {
                if ((referencesFieldSpecified.Equals(value) != true))
                {
                    this.referencesFieldSpecified = value;
                    this.OnPropertyChanged("ReferencesSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("Reference")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<ReferenceType> References
        {
            get
            {
                return this.referencesField;
            }
            set
            {
                if ((this.referencesField != null))
                {
                    if ((referencesField.Equals(value) != true))
                    {
                        this.referencesField = value;
                        this.OnPropertyChanged("References");
                    }
                }
                else
                {
                    this.referencesField = value;
                    this.OnPropertyChanged("References");
                }
            }
        }

        private bool securityCredentialsFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SecurityCredentialsSpecified
        {
            get
            {
                return this.securityCredentialsFieldSpecified;
            }
            set
            {
                if ((securityCredentialsFieldSpecified.Equals(value) != true))
                {
                    this.securityCredentialsFieldSpecified = value;
                    this.OnPropertyChanged("SecurityCredentialsSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("SecurityCredential")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<CredentialType> SecurityCredentials
        {
            get
            {
                return this.securityCredentialsField;
            }
            set
            {
                if ((this.securityCredentialsField != null))
                {
                    if ((securityCredentialsField.Equals(value) != true))
                    {
                        this.securityCredentialsField = value;
                        this.OnPropertyChanged("SecurityCredentials");
                    }
                }
                else
                {
                    this.securityCredentialsField = value;
                    this.OnPropertyChanged("SecurityCredentials");
                }
            }
        }

        private bool resumeAdditionalItemsFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResumeAdditionalItemsSpecified
        {
            get
            {
                return this.resumeAdditionalItemsFieldSpecified;
            }
            set
            {
                if ((resumeAdditionalItemsFieldSpecified.Equals(value) != true))
                {
                    this.resumeAdditionalItemsFieldSpecified = value;
                    this.OnPropertyChanged("ResumeAdditionalItemsSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("ResumeAdditionalItem")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<AdditionalItemType> ResumeAdditionalItems
        {
            get
            {
                return this.resumeAdditionalItemsField;
            }
            set
            {
                if ((this.resumeAdditionalItemsField != null))
                {
                    if ((resumeAdditionalItemsField.Equals(value) != true))
                    {
                        this.resumeAdditionalItemsField = value;
                        this.OnPropertyChanged("ResumeAdditionalItems");
                    }
                }
                else
                {
                    this.resumeAdditionalItemsField = value;
                    this.OnPropertyChanged("ResumeAdditionalItems");
                }
            }
        }

        private bool supportingMaterialsFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SupportingMaterialsSpecified
        {
            get
            {
                return this.supportingMaterialsFieldSpecified;
            }
            set
            {
                if ((supportingMaterialsFieldSpecified.Equals(value) != true))
                {
                    this.supportingMaterialsFieldSpecified = value;
                    this.OnPropertyChanged("SupportingMaterialsSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("SupportingMaterials")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<StaffingSupportingMaterialsType> SupportingMaterials
        {
            get
            {
                return this.supportingMaterialsField;
            }
            set
            {
                if ((this.supportingMaterialsField != null))
                {
                    if ((supportingMaterialsField.Equals(value) != true))
                    {
                        this.supportingMaterialsField = value;
                        this.OnPropertyChanged("SupportingMaterials");
                    }
                }
                else
                {
                    this.supportingMaterialsField = value;
                    this.OnPropertyChanged("SupportingMaterials");
                }
            }
        }

        private bool professionalAssociationsFieldSpecified;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProfessionalAssociationsSpecified
        {
            get
            {
                return this.professionalAssociationsFieldSpecified;
            }
            set
            {
                if ((professionalAssociationsFieldSpecified.Equals(value) != true))
                {
                    this.professionalAssociationsFieldSpecified = value;
                    this.OnPropertyChanged("ProfessionalAssociationsSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("Association")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> ProfessionalAssociations
        {
            get
            {
                return this.professionalAssociationsField;
            }
            set
            {
                if ((this.professionalAssociationsField != null))
                {
                    if ((professionalAssociationsField.Equals(value) != true))
                    {
                        this.professionalAssociationsField = value;
                        this.OnPropertyChanged("ProfessionalAssociations");
                    }
                }
                else
                {
                    this.professionalAssociationsField = value;
                    this.OnPropertyChanged("ProfessionalAssociations");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments
        {
            get
            {
                return this.commentsField;
            }
            set
            {
                if ((this.commentsField != null))
                {
                    if ((commentsField.Equals(value) != true))
                    {
                        this.commentsField = value;
                        this.OnPropertyChanged("Comments");
                    }
                }
                else
                {
                    this.commentsField = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionDate
        {
            get
            {
                return this.revisionDateField;
            }
            set
            {
                if ((this.revisionDateField != null))
                {
                    if ((revisionDateField.Equals(value) != true))
                    {
                        this.revisionDateField = value;
                        this.OnPropertyChanged("RevisionDate");
                    }
                }
                else
                {
                    this.revisionDateField = value;
                    this.OnPropertyChanged("RevisionDate");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SEPContactInfoType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class SEPContactInfoType : EntityBase<SEPContactInfoType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PersonNameType personNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<ContactMethodType> contactMethodField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PersonNameType PersonName
        {
            get
            {
                return this.personNameField;
            }
            set
            {
                if ((this.personNameField != null))
                {
                    if ((personNameField.Equals(value) != true))
                    {
                        this.personNameField = value;
                        this.OnPropertyChanged("PersonName");
                    }
                }
                else
                {
                    this.personNameField = value;
                    this.OnPropertyChanged("PersonName");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("ContactMethod")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<ContactMethodType> ContactMethod
        {
            get
            {
                if ((this.contactMethodField == null))
                {
                    this.contactMethodField = new List<ContactMethodType>();
                }
                return this.contactMethodField;
            }
            set
            {
                if ((this.contactMethodField != null))
                {
                    if ((contactMethodField.Equals(value) != true))
                    {
                        this.contactMethodField = value;
                        this.OnPropertyChanged("ContactMethod");
                    }
                }
                else
                {
                    this.contactMethodField = value;
                    this.OnPropertyChanged("ContactMethod");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StructuredXMLResumeTypeQualifications", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StructuredXMLResumeTypeQualifications : EntityBase<StructuredXMLResumeTypeQualifications>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string qualificationSummaryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<CompetencyType> competencyField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualificationSummary
        {
            get
            {
                return this.qualificationSummaryField;
            }
            set
            {
                if ((this.qualificationSummaryField != null))
                {
                    if ((qualificationSummaryField.Equals(value) != true))
                    {
                        this.qualificationSummaryField = value;
                        this.OnPropertyChanged("QualificationSummary");
                    }
                }
                else
                {
                    this.qualificationSummaryField = value;
                    this.OnPropertyChanged("QualificationSummary");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Competency")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<CompetencyType> Competency
        {
            get
            {
                if ((this.competencyField == null))
                {
                    this.competencyField = new List<CompetencyType>();
                }
                return this.competencyField;
            }
            set
            {
                if ((this.competencyField != null))
                {
                    if ((competencyField.Equals(value) != true))
                    {
                        this.competencyField = value;
                        this.OnPropertyChanged("Competency");
                    }
                }
                else
                {
                    this.competencyField = value;
                    this.OnPropertyChanged("Competency");
                }
            }
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("NonXMLResume", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NonXMLResumeType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class NonXMLResumeType : EntityBase<NonXMLResumeType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string textResumeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string linkToResumeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<StaffingSupportingMaterialsType> supportingMaterialsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string commentsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string revisionDateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextResume
        {
            get
            {
                return this.textResumeField;
            }
            set
            {
                if ((this.textResumeField != null))
                {
                    if ((textResumeField.Equals(value) != true))
                    {
                        this.textResumeField = value;
                        this.OnPropertyChanged("TextResume");
                    }
                }
                else
                {
                    this.textResumeField = value;
                    this.OnPropertyChanged("TextResume");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkToResume
        {
            get
            {
                return this.linkToResumeField;
            }
            set
            {
                if ((this.linkToResumeField != null))
                {
                    if ((linkToResumeField.Equals(value) != true))
                    {
                        this.linkToResumeField = value;
                        this.OnPropertyChanged("LinkToResume");
                    }
                }
                else
                {
                    this.linkToResumeField = value;
                    this.OnPropertyChanged("LinkToResume");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("SupportingMaterials")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<StaffingSupportingMaterialsType> SupportingMaterials
        {
            get
            {
                if ((this.supportingMaterialsField == null))
                {
                    this.supportingMaterialsField = new List<StaffingSupportingMaterialsType>();
                }
                return this.supportingMaterialsField;
            }
            set
            {
                if ((this.supportingMaterialsField != null))
                {
                    if ((supportingMaterialsField.Equals(value) != true))
                    {
                        this.supportingMaterialsField = value;
                        this.OnPropertyChanged("SupportingMaterials");
                    }
                }
                else
                {
                    this.supportingMaterialsField = value;
                    this.OnPropertyChanged("SupportingMaterials");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments
        {
            get
            {
                return this.commentsField;
            }
            set
            {
                if ((this.commentsField != null))
                {
                    if ((commentsField.Equals(value) != true))
                    {
                        this.commentsField = value;
                        this.OnPropertyChanged("Comments");
                    }
                }
                else
                {
                    this.commentsField = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionDate
        {
            get
            {
                return this.revisionDateField;
            }
            set
            {
                if ((this.revisionDateField != null))
                {
                    if ((revisionDateField.Equals(value) != true))
                    {
                        this.revisionDateField = value;
                        this.OnPropertyChanged("RevisionDate");
                    }
                }
                else
                {
                    this.revisionDateField = value;
                    this.OnPropertyChanged("RevisionDate");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("ResourceScreening", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ResourceScreeningType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class ResourceScreeningType : EntityBase<ResourceScreeningType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string screeningResultDateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string screeningResultField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string screeningCommentsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string screeningTypeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string langField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScreeningResultDate
        {
            get
            {
                return this.screeningResultDateField;
            }
            set
            {
                if ((this.screeningResultDateField != null))
                {
                    if ((screeningResultDateField.Equals(value) != true))
                    {
                        this.screeningResultDateField = value;
                        this.OnPropertyChanged("ScreeningResultDate");
                    }
                }
                else
                {
                    this.screeningResultDateField = value;
                    this.OnPropertyChanged("ScreeningResultDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScreeningResult
        {
            get
            {
                return this.screeningResultField;
            }
            set
            {
                if ((this.screeningResultField != null))
                {
                    if ((screeningResultField.Equals(value) != true))
                    {
                        this.screeningResultField = value;
                        this.OnPropertyChanged("ScreeningResult");
                    }
                }
                else
                {
                    this.screeningResultField = value;
                    this.OnPropertyChanged("ScreeningResult");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScreeningComments
        {
            get
            {
                return this.screeningCommentsField;
            }
            set
            {
                if ((this.screeningCommentsField != null))
                {
                    if ((screeningCommentsField.Equals(value) != true))
                    {
                        this.screeningCommentsField = value;
                        this.OnPropertyChanged("ScreeningComments");
                    }
                }
                else
                {
                    this.screeningCommentsField = value;
                    this.OnPropertyChanged("ScreeningComments");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string screeningType
        {
            get
            {
                return this.screeningTypeField;
            }
            set
            {
                if ((this.screeningTypeField != null))
                {
                    if ((screeningTypeField.Equals(value) != true))
                    {
                        this.screeningTypeField = value;
                        this.OnPropertyChanged("screeningType");
                    }
                }
                else
                {
                    this.screeningTypeField = value;
                    this.OnPropertyChanged("screeningType");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/XML/1998/namespace")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lang
        {
            get
            {
                return this.langField;
            }
            set
            {
                if ((this.langField != null))
                {
                    if ((langField.Equals(value) != true))
                    {
                        this.langField = value;
                        this.OnPropertyChanged("lang");
                    }
                }
                else
                {
                    this.langField = value;
                    this.OnPropertyChanged("lang");
                }
            }
        }
    }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StaffingPositionHeaderType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("PositionHeader", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionHeaderType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionHeaderType : EntityBase<PositionHeaderType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionIdentifierType positionIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionIdentifierType jobIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string positionTitleField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string positionTypeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string positionDescriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionStatus positionStatusField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionIdentifierType reportToPositionIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string specialInstructionsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string typeOfHoursField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private double quantityField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool quantityFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<PositionHeaderTypeRequestedPerson> requestedPersonField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<PositionHeaderTypePositionSpecificCondition> positionSpecificConditionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string validFromField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string validToField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionIdentifierType PositionId
        {
            get
            {
                return this.positionIdField;
            }
            set
            {
                if ((this.positionIdField != null))
                {
                    if ((positionIdField.Equals(value) != true))
                    {
                        this.positionIdField = value;
                        this.OnPropertyChanged("PositionId");
                    }
                }
                else
                {
                    this.positionIdField = value;
                    this.OnPropertyChanged("PositionId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionIdentifierType JobId
        {
            get
            {
                return this.jobIdField;
            }
            set
            {
                if ((this.jobIdField != null))
                {
                    if ((jobIdField.Equals(value) != true))
                    {
                        this.jobIdField = value;
                        this.OnPropertyChanged("JobId");
                    }
                }
                else
                {
                    this.jobIdField = value;
                    this.OnPropertyChanged("JobId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionTitle
        {
            get
            {
                return this.positionTitleField;
            }
            set
            {
                if ((this.positionTitleField != null))
                {
                    if ((positionTitleField.Equals(value) != true))
                    {
                        this.positionTitleField = value;
                        this.OnPropertyChanged("PositionTitle");
                    }
                }
                else
                {
                    this.positionTitleField = value;
                    this.OnPropertyChanged("PositionTitle");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionType
        {
            get
            {
                return this.positionTypeField;
            }
            set
            {
                if ((this.positionTypeField != null))
                {
                    if ((positionTypeField.Equals(value) != true))
                    {
                        this.positionTypeField = value;
                        this.OnPropertyChanged("PositionType");
                    }
                }
                else
                {
                    this.positionTypeField = value;
                    this.OnPropertyChanged("PositionType");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionDescription
        {
            get
            {
                return this.positionDescriptionField;
            }
            set
            {
                if ((this.positionDescriptionField != null))
                {
                    if ((positionDescriptionField.Equals(value) != true))
                    {
                        this.positionDescriptionField = value;
                        this.OnPropertyChanged("PositionDescription");
                    }
                }
                else
                {
                    this.positionDescriptionField = value;
                    this.OnPropertyChanged("PositionDescription");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionStatus PositionStatus
        {
            get
            {
                return this.positionStatusField;
            }
            set
            {
                if ((this.positionStatusField != null))
                {
                    if ((positionStatusField.Equals(value) != true))
                    {
                        this.positionStatusField = value;
                        this.OnPropertyChanged("PositionStatus");
                    }
                }
                else
                {
                    this.positionStatusField = value;
                    this.OnPropertyChanged("PositionStatus");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionIdentifierType ReportToPositionId
        {
            get
            {
                return this.reportToPositionIdField;
            }
            set
            {
                if ((this.reportToPositionIdField != null))
                {
                    if ((reportToPositionIdField.Equals(value) != true))
                    {
                        this.reportToPositionIdField = value;
                        this.OnPropertyChanged("ReportToPositionId");
                    }
                }
                else
                {
                    this.reportToPositionIdField = value;
                    this.OnPropertyChanged("ReportToPositionId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialInstructions
        {
            get
            {
                return this.specialInstructionsField;
            }
            set
            {
                if ((this.specialInstructionsField != null))
                {
                    if ((specialInstructionsField.Equals(value) != true))
                    {
                        this.specialInstructionsField = value;
                        this.OnPropertyChanged("SpecialInstructions");
                    }
                }
                else
                {
                    this.specialInstructionsField = value;
                    this.OnPropertyChanged("SpecialInstructions");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeOfHours
        {
            get
            {
                return this.typeOfHoursField;
            }
            set
            {
                if ((this.typeOfHoursField != null))
                {
                    if ((typeOfHoursField.Equals(value) != true))
                    {
                        this.typeOfHoursField = value;
                        this.OnPropertyChanged("TypeOfHours");
                    }
                }
                else
                {
                    this.typeOfHoursField = value;
                    this.OnPropertyChanged("TypeOfHours");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity
        {
            get
            {
                return this.quantityField;
            }
            set
            {
                if ((quantityField.Equals(value) != true))
                {
                    this.quantityField = value;
                    this.OnPropertyChanged("Quantity");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QuantitySpecified
        {
            get
            {
                return this.quantityFieldSpecified;
            }
            set
            {
                if ((quantityFieldSpecified.Equals(value) != true))
                {
                    this.quantityFieldSpecified = value;
                    this.OnPropertyChanged("QuantitySpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("RequestedPerson")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<PositionHeaderTypeRequestedPerson> RequestedPerson
        {
            get
            {
                if ((this.requestedPersonField == null))
                {
                    this.requestedPersonField = new List<PositionHeaderTypeRequestedPerson>();
                }
                return this.requestedPersonField;
            }
            set
            {
                if ((this.requestedPersonField != null))
                {
                    if ((requestedPersonField.Equals(value) != true))
                    {
                        this.requestedPersonField = value;
                        this.OnPropertyChanged("RequestedPerson");
                    }
                }
                else
                {
                    this.requestedPersonField = value;
                    this.OnPropertyChanged("RequestedPerson");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PositionSpecificCondition")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<PositionHeaderTypePositionSpecificCondition> PositionSpecificCondition
        {
            get
            {
                if ((this.positionSpecificConditionField == null))
                {
                    this.positionSpecificConditionField = new List<PositionHeaderTypePositionSpecificCondition>();
                }
                return this.positionSpecificConditionField;
            }
            set
            {
                if ((this.positionSpecificConditionField != null))
                {
                    if ((positionSpecificConditionField.Equals(value) != true))
                    {
                        this.positionSpecificConditionField = value;
                        this.OnPropertyChanged("PositionSpecificCondition");
                    }
                }
                else
                {
                    this.positionSpecificConditionField = value;
                    this.OnPropertyChanged("PositionSpecificCondition");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string validFrom
        {
            get
            {
                if ((this.validFromField == null))
                {
                    this.validFromField = string.Empty;
                }
                return this.validFromField;
            }
            set
            {
                if ((this.validFromField != null))
                {
                    if ((validFromField.Equals(value) != true))
                    {
                        this.validFromField = value;
                        this.OnPropertyChanged("validFrom");
                    }
                }
                else
                {
                    this.validFromField = value;
                    this.OnPropertyChanged("validFrom");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string validTo
        {
            get
            {
                if ((this.validToField == null))
                {
                    this.validToField = string.Empty;
                }
                return this.validToField;
            }
            set
            {
                if ((this.validToField != null))
                {
                    if ((validToField.Equals(value) != true))
                    {
                        this.validToField = value;
                        this.OnPropertyChanged("validTo");
                    }
                }
                else
                {
                    this.validToField = value;
                    this.OnPropertyChanged("validTo");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("JobId", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionIdentifierType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionIdentifierType : EntityBase<PositionIdentifierType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string idField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PositionIdentifierTypeDomain domainField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                if ((this.idField == null))
                {
                    this.idField = string.Empty;
                }
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id");
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionIdentifierTypeDomain Domain
        {
            get
            {
                return this.domainField;
            }
            set
            {
                if ((this.domainField != null))
                {
                    if ((domainField.Equals(value) != true))
                    {
                        this.domainField = value;
                        this.OnPropertyChanged("Domain");
                    }
                }
                else
                {
                    this.domainField = value;
                    this.OnPropertyChanged("Domain");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionIdentifierTypeDomain", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionIdentifierTypeDomain : EntityBase<PositionIdentifierTypeDomain>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string idIssuerField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string idTypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdIssuer
        {
            get
            {
                return this.idIssuerField;
            }
            set
            {
                if ((this.idIssuerField != null))
                {
                    if ((idIssuerField.Equals(value) != true))
                    {
                        this.idIssuerField = value;
                        this.OnPropertyChanged("IdIssuer");
                    }
                }
                else
                {
                    this.idIssuerField = value;
                    this.OnPropertyChanged("IdIssuer");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdType
        {
            get
            {
                return this.idTypeField;
            }
            set
            {
                if ((this.idTypeField != null))
                {
                    if ((idTypeField.Equals(value) != true))
                    {
                        this.idTypeField = value;
                        this.OnPropertyChanged("IdType");
                    }
                }
                else
                {
                    this.idTypeField = value;
                    this.OnPropertyChanged("IdType");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionStatus", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionStatus : EntityBase<PositionStatus>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string codeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                if ((this.codeField != null))
                {
                    if ((codeField.Equals(value) != true))
                    {
                        this.codeField = value;
                        this.OnPropertyChanged("Code");
                    }
                }
                else
                {
                    this.codeField = value;
                    this.OnPropertyChanged("Code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                if ((this.descriptionField == null))
                {
                    this.descriptionField = string.Empty;
                }
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionHeaderTypeRequestedPerson", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionHeaderTypeRequestedPerson : EntityBase<PositionHeaderTypeRequestedPerson>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PersonNameType personNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EntityIdType personIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EntityReferenceType supplierField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool mandatoryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool mandatoryFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool currentlyAssignedField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool currentlyAssignedFieldSpecified;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PersonNameType PersonName
        {
            get
            {
                return this.personNameField;
            }
            set
            {
                if ((this.personNameField != null))
                {
                    if ((personNameField.Equals(value) != true))
                    {
                        this.personNameField = value;
                        this.OnPropertyChanged("PersonName");
                    }
                }
                else
                {
                    this.personNameField = value;
                    this.OnPropertyChanged("PersonName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityIdType PersonId
        {
            get
            {
                return this.personIdField;
            }
            set
            {
                if ((this.personIdField != null))
                {
                    if ((personIdField.Equals(value) != true))
                    {
                        this.personIdField = value;
                        this.OnPropertyChanged("PersonId");
                    }
                }
                else
                {
                    this.personIdField = value;
                    this.OnPropertyChanged("PersonId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityReferenceType Supplier
        {
            get
            {
                return this.supplierField;
            }
            set
            {
                if ((this.supplierField != null))
                {
                    if ((supplierField.Equals(value) != true))
                    {
                        this.supplierField = value;
                        this.OnPropertyChanged("Supplier");
                    }
                }
                else
                {
                    this.supplierField = value;
                    this.OnPropertyChanged("Supplier");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool mandatory
        {
            get
            {
                return this.mandatoryField;
            }
            set
            {
                if ((mandatoryField.Equals(value) != true))
                {
                    this.mandatoryField = value;
                    this.OnPropertyChanged("mandatory");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool mandatorySpecified
        {
            get
            {
                return this.mandatoryFieldSpecified;
            }
            set
            {
                if ((mandatoryFieldSpecified.Equals(value) != true))
                {
                    this.mandatoryFieldSpecified = value;
                    this.OnPropertyChanged("mandatorySpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool currentlyAssigned
        {
            get
            {
                return this.currentlyAssignedField;
            }
            set
            {
                if ((currentlyAssignedField.Equals(value) != true))
                {
                    this.currentlyAssignedField = value;
                    this.OnPropertyChanged("currentlyAssigned");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool currentlyAssignedSpecified
        {
            get
            {
                return this.currentlyAssignedFieldSpecified;
            }
            set
            {
                if ((currentlyAssignedFieldSpecified.Equals(value) != true))
                {
                    this.currentlyAssignedFieldSpecified = value;
                    this.OnPropertyChanged("currentlyAssignedSpecified");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EntityReferenceType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class EntityReferenceType : EntityBase<EntityReferenceType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EntityIdType idField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string nameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityIdType Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id");
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                if ((this.nameField == null))
                {
                    this.nameField = string.Empty;
                }
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PositionHeaderTypePositionSpecificCondition", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class PositionHeaderTypePositionSpecificCondition : EntityBase<PositionHeaderTypePositionSpecificCondition>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string conditionCodeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string conditionDescriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string conditionValueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConditionCode
        {
            get
            {
                return this.conditionCodeField;
            }
            set
            {
                if ((this.conditionCodeField != null))
                {
                    if ((conditionCodeField.Equals(value) != true))
                    {
                        this.conditionCodeField = value;
                        this.OnPropertyChanged("ConditionCode");
                    }
                }
                else
                {
                    this.conditionCodeField = value;
                    this.OnPropertyChanged("ConditionCode");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConditionDescription
        {
            get
            {
                return this.conditionDescriptionField;
            }
            set
            {
                if ((this.conditionDescriptionField != null))
                {
                    if ((conditionDescriptionField.Equals(value) != true))
                    {
                        this.conditionDescriptionField = value;
                        this.OnPropertyChanged("ConditionDescription");
                    }
                }
                else
                {
                    this.conditionDescriptionField = value;
                    this.OnPropertyChanged("ConditionDescription");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConditionValue
        {
            get
            {
                return this.conditionValueField;
            }
            set
            {
                if ((this.conditionValueField != null))
                {
                    if ((conditionValueField.Equals(value) != true))
                    {
                        this.conditionValueField = value;
                        this.OnPropertyChanged("ConditionValue");
                    }
                }
                else
                {
                    this.conditionValueField = value;
                    this.OnPropertyChanged("ConditionValue");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("StaffingPositionHeader", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderType : PositionHeaderType
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<StaffingPositionHeaderTypeFormattedPositionDescription> formattedPositionDescriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<StaffingPositionHeaderTypeJobCategory> jobCategoryField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private StaffingPositionHeaderTypeShiftWork shiftWorkField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private StaffingPositionHeaderTypePositionMustEndByInfo positionMustEndByInfoField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private StaffingPositionHeaderTypeTransitionInfo transitionInfoField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private StaffingPositionHeaderTypeOvertimeInfo overtimeInfoField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private StaffingPositionHeaderTypeHolidayWork holidayWorkField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<StaffingPositionHeaderTypeBusyPeriodInfo> busyPeriodInfoField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private LocalStaffingPositionInfoType localStaffingPositionInfoField;

        [System.Xml.Serialization.XmlElementAttribute("FormattedPositionDescription")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<StaffingPositionHeaderTypeFormattedPositionDescription> FormattedPositionDescription
        {
            get
            {
                if ((this.formattedPositionDescriptionField == null))
                {
                    this.formattedPositionDescriptionField = new List<StaffingPositionHeaderTypeFormattedPositionDescription>();
                }
                return this.formattedPositionDescriptionField;
            }
            set
            {
                if ((this.formattedPositionDescriptionField != null))
                {
                    if ((formattedPositionDescriptionField.Equals(value) != true))
                    {
                        this.formattedPositionDescriptionField = value;
                        this.OnPropertyChanged("FormattedPositionDescription");
                    }
                }
                else
                {
                    this.formattedPositionDescriptionField = value;
                    this.OnPropertyChanged("FormattedPositionDescription");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("JobCategory")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<StaffingPositionHeaderTypeJobCategory> JobCategory
        {
            get
            {
                if ((this.jobCategoryField == null))
                {
                    this.jobCategoryField = new List<StaffingPositionHeaderTypeJobCategory>();
                }
                return this.jobCategoryField;
            }
            set
            {
                if ((this.jobCategoryField != null))
                {
                    if ((jobCategoryField.Equals(value) != true))
                    {
                        this.jobCategoryField = value;
                        this.OnPropertyChanged("JobCategory");
                    }
                }
                else
                {
                    this.jobCategoryField = value;
                    this.OnPropertyChanged("JobCategory");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public StaffingPositionHeaderTypeShiftWork ShiftWork
        {
            get
            {
                return this.shiftWorkField;
            }
            set
            {
                if ((this.shiftWorkField != null))
                {
                    if ((shiftWorkField.Equals(value) != true))
                    {
                        this.shiftWorkField = value;
                        this.OnPropertyChanged("ShiftWork");
                    }
                }
                else
                {
                    this.shiftWorkField = value;
                    this.OnPropertyChanged("ShiftWork");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public StaffingPositionHeaderTypePositionMustEndByInfo PositionMustEndByInfo
        {
            get
            {
                return this.positionMustEndByInfoField;
            }
            set
            {
                if ((this.positionMustEndByInfoField != null))
                {
                    if ((positionMustEndByInfoField.Equals(value) != true))
                    {
                        this.positionMustEndByInfoField = value;
                        this.OnPropertyChanged("PositionMustEndByInfo");
                    }
                }
                else
                {
                    this.positionMustEndByInfoField = value;
                    this.OnPropertyChanged("PositionMustEndByInfo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public StaffingPositionHeaderTypeTransitionInfo TransitionInfo
        {
            get
            {
                return this.transitionInfoField;
            }
            set
            {
                if ((this.transitionInfoField != null))
                {
                    if ((transitionInfoField.Equals(value) != true))
                    {
                        this.transitionInfoField = value;
                        this.OnPropertyChanged("TransitionInfo");
                    }
                }
                else
                {
                    this.transitionInfoField = value;
                    this.OnPropertyChanged("TransitionInfo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public StaffingPositionHeaderTypeOvertimeInfo OvertimeInfo
        {
            get
            {
                return this.overtimeInfoField;
            }
            set
            {
                if ((this.overtimeInfoField != null))
                {
                    if ((overtimeInfoField.Equals(value) != true))
                    {
                        this.overtimeInfoField = value;
                        this.OnPropertyChanged("OvertimeInfo");
                    }
                }
                else
                {
                    this.overtimeInfoField = value;
                    this.OnPropertyChanged("OvertimeInfo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public StaffingPositionHeaderTypeHolidayWork HolidayWork
        {
            get
            {
                return this.holidayWorkField;
            }
            set
            {
                if ((this.holidayWorkField != null))
                {
                    if ((holidayWorkField.Equals(value) != true))
                    {
                        this.holidayWorkField = value;
                        this.OnPropertyChanged("HolidayWork");
                    }
                }
                else
                {
                    this.holidayWorkField = value;
                    this.OnPropertyChanged("HolidayWork");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("BusyPeriodInfo")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<StaffingPositionHeaderTypeBusyPeriodInfo> BusyPeriodInfo
        {
            get
            {
                if ((this.busyPeriodInfoField == null))
                {
                    this.busyPeriodInfoField = new List<StaffingPositionHeaderTypeBusyPeriodInfo>();
                }
                return this.busyPeriodInfoField;
            }
            set
            {
                if ((this.busyPeriodInfoField != null))
                {
                    if ((busyPeriodInfoField.Equals(value) != true))
                    {
                        this.busyPeriodInfoField = value;
                        this.OnPropertyChanged("BusyPeriodInfo");
                    }
                }
                else
                {
                    this.busyPeriodInfoField = value;
                    this.OnPropertyChanged("BusyPeriodInfo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public LocalStaffingPositionInfoType LocalStaffingPositionInfo
        {
            get
            {
                return this.localStaffingPositionInfoField;
            }
            set
            {
                if ((this.localStaffingPositionInfoField != null))
                {
                    if ((localStaffingPositionInfoField.Equals(value) != true))
                    {
                        this.localStaffingPositionInfoField = value;
                        this.OnPropertyChanged("LocalStaffingPositionInfo");
                    }
                }
                else
                {
                    this.localStaffingPositionInfoField = value;
                    this.OnPropertyChanged("LocalStaffingPositionInfo");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypeFormattedPositionDescription", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypeFormattedPositionDescription : EntityBase<StaffingPositionHeaderTypeFormattedPositionDescription>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EntityIdType idField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string nameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityIdType Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id");
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                if ((this.nameField == null))
                {
                    this.nameField = string.Empty;
                }
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypeJobCategory", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypeJobCategory : EntityBase<StaffingPositionHeaderTypeJobCategory>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EntityIdType idField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityIdType Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id");
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                if ((this.descriptionField == null))
                {
                    this.descriptionField = string.Empty;
                }
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypeShiftWork", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypeShiftWork : EntityBase<StaffingPositionHeaderTypeShiftWork>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool haveShiftWorkField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                if ((this.descriptionField == null))
                {
                    this.descriptionField = string.Empty;
                }
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool haveShiftWork
        {
            get
            {
                return this.haveShiftWorkField;
            }
            set
            {
                if ((haveShiftWorkField.Equals(value) != true))
                {
                    this.haveShiftWorkField = value;
                    this.OnPropertyChanged("haveShiftWork");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypePositionMustEndByInfo", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypePositionMustEndByInfo : EntityBase<StaffingPositionHeaderTypePositionMustEndByInfo>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private System.DateTime dateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [System.Xml.Serialization.XmlElementAttribute(DataType = "date")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                if ((dateField.Equals(value) != true))
                {
                    this.dateField = value;
                    this.OnPropertyChanged("Date");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                if ((this.descriptionField == null))
                {
                    this.descriptionField = string.Empty;
                }
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypeTransitionInfo", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypeTransitionInfo : EntityBase<StaffingPositionHeaderTypeTransitionInfo>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private StaffingPositionHeaderTypeTransitionInfoDuration durationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool requiredField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public StaffingPositionHeaderTypeTransitionInfoDuration Duration
        {
            get
            {
                return this.durationField;
            }
            set
            {
                if ((this.durationField != null))
                {
                    if ((durationField.Equals(value) != true))
                    {
                        this.durationField = value;
                        this.OnPropertyChanged("Duration");
                    }
                }
                else
                {
                    this.durationField = value;
                    this.OnPropertyChanged("Duration");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                if ((this.descriptionField == null))
                {
                    this.descriptionField = string.Empty;
                }
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool required
        {
            get
            {
                return this.requiredField;
            }
            set
            {
                if ((requiredField.Equals(value) != true))
                {
                    this.requiredField = value;
                    this.OnPropertyChanged("required");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypeTransitionInfoDuration", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypeTransitionInfoDuration
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private UnitOfTimeEnumType unitOfTimeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private decimal valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UnitOfTimeEnumType unitOfTime
        {
            get
            {
                return this.unitOfTimeField;
            }
            set
            {
                if ((unitOfTimeField.Equals(value) != true))
                {
                    this.unitOfTimeField = value;
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum UnitOfTimeEnumType
    {

        /// <remarks/>
        second,

        /// <remarks/>
        minute,

        /// <remarks/>
        hour,

        /// <remarks/>
        day,

        /// <remarks/>
        week,

        /// <remarks/>
        month,

        /// <remarks/>
        year,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypeOvertimeInfo", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypeOvertimeInfo : EntityBase<StaffingPositionHeaderTypeOvertimeInfo>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private StaffingPositionHeaderTypeOvertimeInfoExpectedTime expectedTimeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private StaffingPositionHeaderTypeOvertimeInfoExpectedWithin expectedWithinField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool haveOvertimeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public StaffingPositionHeaderTypeOvertimeInfoExpectedTime ExpectedTime
        {
            get
            {
                return this.expectedTimeField;
            }
            set
            {
                if ((this.expectedTimeField != null))
                {
                    if ((expectedTimeField.Equals(value) != true))
                    {
                        this.expectedTimeField = value;
                        this.OnPropertyChanged("ExpectedTime");
                    }
                }
                else
                {
                    this.expectedTimeField = value;
                    this.OnPropertyChanged("ExpectedTime");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public StaffingPositionHeaderTypeOvertimeInfoExpectedWithin ExpectedWithin
        {
            get
            {
                return this.expectedWithinField;
            }
            set
            {
                if ((this.expectedWithinField != null))
                {
                    if ((expectedWithinField.Equals(value) != true))
                    {
                        this.expectedWithinField = value;
                        this.OnPropertyChanged("ExpectedWithin");
                    }
                }
                else
                {
                    this.expectedWithinField = value;
                    this.OnPropertyChanged("ExpectedWithin");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                if ((this.descriptionField == null))
                {
                    this.descriptionField = string.Empty;
                }
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool haveOvertime
        {
            get
            {
                return this.haveOvertimeField;
            }
            set
            {
                if ((haveOvertimeField.Equals(value) != true))
                {
                    this.haveOvertimeField = value;
                    this.OnPropertyChanged("haveOvertime");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypeOvertimeInfoExpectedTime", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypeOvertimeInfoExpectedTime
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private UnitOfTimeEnumType unitOfTimeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private decimal valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UnitOfTimeEnumType unitOfTime
        {
            get
            {
                return this.unitOfTimeField;
            }
            set
            {
                if ((unitOfTimeField.Equals(value) != true))
                {
                    this.unitOfTimeField = value;
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypeOvertimeInfoExpectedWithin", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypeOvertimeInfoExpectedWithin
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private UnitOfTimeEnumType unitOfTimeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private decimal valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UnitOfTimeEnumType unitOfTime
        {
            get
            {
                return this.unitOfTimeField;
            }
            set
            {
                if ((unitOfTimeField.Equals(value) != true))
                {
                    this.unitOfTimeField = value;
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypeHolidayWork", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypeHolidayWork : EntityBase<StaffingPositionHeaderTypeHolidayWork>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool haveHolidayWorkField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                if ((this.descriptionField == null))
                {
                    this.descriptionField = string.Empty;
                }
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool haveHolidayWork
        {
            get
            {
                return this.haveHolidayWorkField;
            }
            set
            {
                if ((haveHolidayWorkField.Equals(value) != true))
                {
                    this.haveHolidayWorkField = value;
                    this.OnPropertyChanged("haveHolidayWork");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StaffingPositionHeaderTypeBusyPeriodInfo", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class StaffingPositionHeaderTypeBusyPeriodInfo : EntityBase<StaffingPositionHeaderTypeBusyPeriodInfo>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string[] itemsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private BusyPeriodInfoChoiceType[] itemsElementNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [System.Xml.Serialization.XmlElementAttribute("EndBusyPeriod", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("PeriodString", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("StartBusyPeriod", typeof(string))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Items
        {
            get
            {
                if ((this.itemsField == null))
                {
                    this.itemsField = new string[0];
                }
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items");
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BusyPeriodInfoChoiceType[] ItemsElementName
        {
            get
            {
                if ((this.itemsElementNameField == null))
                {
                    this.itemsElementNameField = new BusyPeriodInfoChoiceType[0];
                }
                return this.itemsElementNameField;
            }
            set
            {
                if ((this.itemsElementNameField != null))
                {
                    if ((itemsElementNameField.Equals(value) != true))
                    {
                        this.itemsElementNameField = value;
                        this.OnPropertyChanged("ItemsElementName");
                    }
                }
                else
                {
                    this.itemsElementNameField = value;
                    this.OnPropertyChanged("ItemsElementName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                if ((this.descriptionField == null))
                {
                    this.descriptionField = string.Empty;
                }
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IncludeInSchema = false)]
    public enum BusyPeriodInfoChoiceType
    {

        /// <remarks/>
        EndBusyPeriod,

        /// <remarks/>
        PeriodString,

        /// <remarks/>
        StartBusyPeriod,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LocalStaffingPositionInfoType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class LocalStaffingPositionInfoType : EntityBase<LocalStaffingPositionInfoType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private JPStaffingPositionInfoType itemField;

        [System.Xml.Serialization.XmlElementAttribute("JPStaffingPositionInfo")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JPStaffingPositionInfoType Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                if ((this.itemField != null))
                {
                    if ((itemField.Equals(value) != true))
                    {
                        this.itemField = value;
                        this.OnPropertyChanged("Item");
                    }
                }
                else
                {
                    this.itemField = value;
                    this.OnPropertyChanged("Item");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "JPStaffingPositionInfoType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class JPStaffingPositionInfoType : EntityBase<JPStaffingPositionInfoType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private NoLimitStaffingType noLimitStaffingField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public NoLimitStaffingType NoLimitStaffing
        {
            get
            {
                return this.noLimitStaffingField;
            }
            set
            {
                if ((this.noLimitStaffingField != null))
                {
                    if ((noLimitStaffingField.Equals(value) != true))
                    {
                        this.noLimitStaffingField = value;
                        this.OnPropertyChanged("NoLimitStaffing");
                    }
                }
                else
                {
                    this.noLimitStaffingField = value;
                    this.OnPropertyChanged("NoLimitStaffing");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NoLimitStaffingType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class NoLimitStaffingType : EntityBase<NoLimitStaffingType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private object itemField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private NoLimitStaffingEnumType typeField;

        [System.Xml.Serialization.XmlElementAttribute("Leave", typeof(AnyLeaveType))]
        [System.Xml.Serialization.XmlElementAttribute("ProjectWithPeriod", typeof(ProjectWithPeriodType))]
        [System.Xml.Serialization.XmlElementAttribute("SpecialCases", typeof(SpecialCasesType))]
        [System.Xml.Serialization.XmlElementAttribute("WorkWithPeriod", typeof(WorkWithPeriodType))]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                if ((this.itemField != null))
                {
                    if ((itemField.Equals(value) != true))
                    {
                        this.itemField = value;
                        this.OnPropertyChanged("Item");
                    }
                }
                else
                {
                    this.itemField = value;
                    this.OnPropertyChanged("Item");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NoLimitStaffingEnumType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((typeField.Equals(value) != true))
                {
                    this.typeField = value;
                    this.OnPropertyChanged("type");
                }
            }
        }
    }
   
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ProjectWithPeriodType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class ProjectWithPeriodType : EntityBase<ProjectWithPeriodType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string projectDetailField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string projectPeriodField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectDetail
        {
            get
            {
                return this.projectDetailField;
            }
            set
            {
                if ((this.projectDetailField != null))
                {
                    if ((projectDetailField.Equals(value) != true))
                    {
                        this.projectDetailField = value;
                        this.OnPropertyChanged("ProjectDetail");
                    }
                }
                else
                {
                    this.projectDetailField = value;
                    this.OnPropertyChanged("ProjectDetail");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectPeriod
        {
            get
            {
                return this.projectPeriodField;
            }
            set
            {
                if ((this.projectPeriodField != null))
                {
                    if ((projectPeriodField.Equals(value) != true))
                    {
                        this.projectPeriodField = value;
                        this.OnPropertyChanged("ProjectPeriod");
                    }
                }
                else
                {
                    this.projectPeriodField = value;
                    this.OnPropertyChanged("ProjectPeriod");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SpecialCasesType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class SpecialCasesType : EntityBase<SpecialCasesType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string descriptionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                if ((this.descriptionField == null))
                {
                    this.descriptionField = string.Empty;
                }
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WorkWithPeriodType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class WorkWithPeriodType : EntityBase<WorkWithPeriodType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private decimal daysPerMonthField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private decimal ordinaryDaysPerMonthField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DaysPerMonth
        {
            get
            {
                return this.daysPerMonthField;
            }
            set
            {
                if ((daysPerMonthField.Equals(value) != true))
                {
                    this.daysPerMonthField = value;
                    this.OnPropertyChanged("DaysPerMonth");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrdinaryDaysPerMonth
        {
            get
            {
                return this.ordinaryDaysPerMonthField;
            }
            set
            {
                if ((ordinaryDaysPerMonthField.Equals(value) != true))
                {
                    this.ordinaryDaysPerMonthField = value;
                    this.OnPropertyChanged("OrdinaryDaysPerMonth");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum NoLimitStaffingEnumType
    {

        /// <remarks/>
        JobCategoryByOrdinance,

        /// <remarks/>
        ProjectWithPeriod,

        /// <remarks/>
        WorkWithPeriod,

        /// <remarks/>
        MaternityLeave,

        /// <remarks/>
        CaringLeave,

        /// <remarks/>
        SpecialCases,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute("HumanResource", Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceType : EntityBase<HumanResourceType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> humanResourceIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypeHumanResourceStatus humanResourceStatusField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypeReferenceInformation referenceInformationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypeResourceInformation resourceInformationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<RatesType> ratesField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypeProfile profileField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<ResourceScreeningType> resourceScreeningField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypePreferences preferencesField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string humanResourceCommentsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<HumanResourceTypeSocialInsurance> socialInsuranceField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private UserAreaType userAreaField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string langField;

        [System.Xml.Serialization.XmlElementAttribute("HumanResourceId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> HumanResourceId
        {
            get
            {
                if ((this.humanResourceIdField == null))
                {
                    this.humanResourceIdField = new List<EntityIdType>();
                }
                return this.humanResourceIdField;
            }
            set
            {
                if ((this.humanResourceIdField != null))
                {
                    if ((humanResourceIdField.Equals(value) != true))
                    {
                        this.humanResourceIdField = value;
                        this.OnPropertyChanged("HumanResourceId");
                    }
                }
                else
                {
                    this.humanResourceIdField = value;
                    this.OnPropertyChanged("HumanResourceId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypeHumanResourceStatus HumanResourceStatus
        {
            get
            {
                return this.humanResourceStatusField;
            }
            set
            {
                if ((this.humanResourceStatusField != null))
                {
                    if ((humanResourceStatusField.Equals(value) != true))
                    {
                        this.humanResourceStatusField = value;
                        this.OnPropertyChanged("HumanResourceStatus");
                    }
                }
                else
                {
                    this.humanResourceStatusField = value;
                    this.OnPropertyChanged("HumanResourceStatus");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypeReferenceInformation ReferenceInformation
        {
            get
            {
                return this.referenceInformationField;
            }
            set
            {
                if ((this.referenceInformationField != null))
                {
                    if ((referenceInformationField.Equals(value) != true))
                    {
                        this.referenceInformationField = value;
                        this.OnPropertyChanged("ReferenceInformation");
                    }
                }
                else
                {
                    this.referenceInformationField = value;
                    this.OnPropertyChanged("ReferenceInformation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypeResourceInformation ResourceInformation
        {
            get
            {
                return this.resourceInformationField;
            }
            set
            {
                if ((this.resourceInformationField != null))
                {
                    if ((resourceInformationField.Equals(value) != true))
                    {
                        this.resourceInformationField = value;
                        this.OnPropertyChanged("ResourceInformation");
                    }
                }
                else
                {
                    this.resourceInformationField = value;
                    this.OnPropertyChanged("ResourceInformation");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Rates")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<RatesType> Rates
        {
            get
            {
                if ((this.ratesField == null))
                {
                    this.ratesField = new List<RatesType>();
                }
                return this.ratesField;
            }
            set
            {
                if ((this.ratesField != null))
                {
                    if ((ratesField.Equals(value) != true))
                    {
                        this.ratesField = value;
                        this.OnPropertyChanged("Rates");
                    }
                }
                else
                {
                    this.ratesField = value;
                    this.OnPropertyChanged("Rates");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypeProfile Profile
        {
            get
            {
                return this.profileField;
            }
            set
            {
                if ((this.profileField != null))
                {
                    if ((profileField.Equals(value) != true))
                    {
                        this.profileField = value;
                        this.OnPropertyChanged("Profile");
                    }
                }
                else
                {
                    this.profileField = value;
                    this.OnPropertyChanged("Profile");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("ResourceScreening")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<ResourceScreeningType> ResourceScreening
        {
            get
            {
                if ((this.resourceScreeningField == null))
                {
                    this.resourceScreeningField = new List<ResourceScreeningType>();
                }
                return this.resourceScreeningField;
            }
            set
            {
                if ((this.resourceScreeningField != null))
                {
                    if ((resourceScreeningField.Equals(value) != true))
                    {
                        this.resourceScreeningField = value;
                        this.OnPropertyChanged("ResourceScreening");
                    }
                }
                else
                {
                    this.resourceScreeningField = value;
                    this.OnPropertyChanged("ResourceScreening");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypePreferences Preferences
        {
            get
            {
                return this.preferencesField;
            }
            set
            {
                if ((this.preferencesField != null))
                {
                    if ((preferencesField.Equals(value) != true))
                    {
                        this.preferencesField = value;
                        this.OnPropertyChanged("Preferences");
                    }
                }
                else
                {
                    this.preferencesField = value;
                    this.OnPropertyChanged("Preferences");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HumanResourceComments
        {
            get
            {
                return this.humanResourceCommentsField;
            }
            set
            {
                if ((this.humanResourceCommentsField != null))
                {
                    if ((humanResourceCommentsField.Equals(value) != true))
                    {
                        this.humanResourceCommentsField = value;
                        this.OnPropertyChanged("HumanResourceComments");
                    }
                }
                else
                {
                    this.humanResourceCommentsField = value;
                    this.OnPropertyChanged("HumanResourceComments");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("SocialInsurance")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<HumanResourceTypeSocialInsurance> SocialInsurance
        {
            get
            {
                if ((this.socialInsuranceField == null))
                {
                    this.socialInsuranceField = new List<HumanResourceTypeSocialInsurance>();
                }
                return this.socialInsuranceField;
            }
            set
            {
                if ((this.socialInsuranceField != null))
                {
                    if ((socialInsuranceField.Equals(value) != true))
                    {
                        this.socialInsuranceField = value;
                        this.OnPropertyChanged("SocialInsurance");
                    }
                }
                else
                {
                    this.socialInsuranceField = value;
                    this.OnPropertyChanged("SocialInsurance");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("UserArea")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserAreaType UserArea
        {
            get
            {
                return this.userAreaField;
            }
            set
            {
                if ((this.userAreaField != null))
                {
                    if ((userAreaField.Equals(value) != true))
                    {
                        this.userAreaField = value;
                        this.OnPropertyChanged("UserArea");
                    }
                }
                else
                {
                    this.userAreaField = value;
                    this.OnPropertyChanged("UserArea");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/XML/1998/namespace")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lang
        {
            get
            {
                return this.langField;
            }
            set
            {
                if ((this.langField != null))
                {
                    if ((langField.Equals(value) != true))
                    {
                        this.langField = value;
                        this.OnPropertyChanged("lang");
                    }
                }
                else
                {
                    this.langField = value;
                    this.OnPropertyChanged("lang");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum KnownStatusType
    {
        [System.Xml.Serialization.XmlEnumAttribute("new")]
     	New,
        [System.Xml.Serialization.XmlEnumAttribute("revised")]
        Revised,
        [System.Xml.Serialization.XmlEnumAttribute("rejected")]
        Rejected,
        [System.Xml.Serialization.XmlEnumAttribute("accepted")]
        Accepted,
        [System.Xml.Serialization.XmlEnumAttribute("withdrawn")]
        Withdrawn,
        [System.Xml.Serialization.XmlEnumAttribute("suspended")]
        Suspended,
        [System.Xml.Serialization.XmlEnumAttribute("pending")]
        Pending
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypeHumanResourceStatus", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypeHumanResourceStatus : EntityBase<HumanResourceTypeHumanResourceStatus>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private KnownStatusType statusField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string statusChangeReasonField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KnownStatusType status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                if ((statusField.Equals(value) != true))
                {
                    this.statusField = value;
                    this.OnPropertyChanged("status");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusChangeReason
        {
            get
            {
                return this.statusChangeReasonField;
            }
            set
            {
                if ((this.statusChangeReasonField != null))
                {
                    if ((statusChangeReasonField.Equals(value) != true))
                    {
                        this.statusChangeReasonField = value;
                        this.OnPropertyChanged("statusChangeReason");
                    }
                }
                else
                {
                    this.statusChangeReasonField = value;
                    this.OnPropertyChanged("statusChangeReason");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypeReferenceInformation", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypeReferenceInformation : EntityBase<HumanResourceTypeReferenceInformation>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> staffingSupplierIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> staffingCustomerIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> intermediaryIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> orderIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> positionIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> assignmentIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> staffingSupplierOrgUnitIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> staffingCustomerOrgUnitIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> masterOrderIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> timeCardIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> invoiceIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> billToEntityIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<EntityIdType> staffingOrganizationIdField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private UserAreaType userAreaField;

        [System.Xml.Serialization.XmlElementAttribute("StaffingSupplierId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> StaffingSupplierId
        {
            get
            {
                if ((this.staffingSupplierIdField == null))
                {
                    this.staffingSupplierIdField = new List<EntityIdType>();
                }
                return this.staffingSupplierIdField;
            }
            set
            {
                if ((this.staffingSupplierIdField != null))
                {
                    if ((staffingSupplierIdField.Equals(value) != true))
                    {
                        this.staffingSupplierIdField = value;
                        this.OnPropertyChanged("StaffingSupplierId");
                    }
                }
                else
                {
                    this.staffingSupplierIdField = value;
                    this.OnPropertyChanged("StaffingSupplierId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("StaffingCustomerId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> StaffingCustomerId
        {
            get
            {
                if ((this.staffingCustomerIdField == null))
                {
                    this.staffingCustomerIdField = new List<EntityIdType>();
                }
                return this.staffingCustomerIdField;
            }
            set
            {
                if ((this.staffingCustomerIdField != null))
                {
                    if ((staffingCustomerIdField.Equals(value) != true))
                    {
                        this.staffingCustomerIdField = value;
                        this.OnPropertyChanged("StaffingCustomerId");
                    }
                }
                else
                {
                    this.staffingCustomerIdField = value;
                    this.OnPropertyChanged("StaffingCustomerId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("IntermediaryId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> IntermediaryId
        {
            get
            {
                if ((this.intermediaryIdField == null))
                {
                    this.intermediaryIdField = new List<EntityIdType>();
                }
                return this.intermediaryIdField;
            }
            set
            {
                if ((this.intermediaryIdField != null))
                {
                    if ((intermediaryIdField.Equals(value) != true))
                    {
                        this.intermediaryIdField = value;
                        this.OnPropertyChanged("IntermediaryId");
                    }
                }
                else
                {
                    this.intermediaryIdField = value;
                    this.OnPropertyChanged("IntermediaryId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("OrderId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> OrderId
        {
            get
            {
                if ((this.orderIdField == null))
                {
                    this.orderIdField = new List<EntityIdType>();
                }
                return this.orderIdField;
            }
            set
            {
                if ((this.orderIdField != null))
                {
                    if ((orderIdField.Equals(value) != true))
                    {
                        this.orderIdField = value;
                        this.OnPropertyChanged("OrderId");
                    }
                }
                else
                {
                    this.orderIdField = value;
                    this.OnPropertyChanged("OrderId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PositionId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> PositionId
        {
            get
            {
                if ((this.positionIdField == null))
                {
                    this.positionIdField = new List<EntityIdType>();
                }
                return this.positionIdField;
            }
            set
            {
                if ((this.positionIdField != null))
                {
                    if ((positionIdField.Equals(value) != true))
                    {
                        this.positionIdField = value;
                        this.OnPropertyChanged("PositionId");
                    }
                }
                else
                {
                    this.positionIdField = value;
                    this.OnPropertyChanged("PositionId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("AssignmentId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> AssignmentId
        {
            get
            {
                if ((this.assignmentIdField == null))
                {
                    this.assignmentIdField = new List<EntityIdType>();
                }
                return this.assignmentIdField;
            }
            set
            {
                if ((this.assignmentIdField != null))
                {
                    if ((assignmentIdField.Equals(value) != true))
                    {
                        this.assignmentIdField = value;
                        this.OnPropertyChanged("AssignmentId");
                    }
                }
                else
                {
                    this.assignmentIdField = value;
                    this.OnPropertyChanged("AssignmentId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("StaffingSupplierOrgUnitId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> StaffingSupplierOrgUnitId
        {
            get
            {
                if ((this.staffingSupplierOrgUnitIdField == null))
                {
                    this.staffingSupplierOrgUnitIdField = new List<EntityIdType>();
                }
                return this.staffingSupplierOrgUnitIdField;
            }
            set
            {
                if ((this.staffingSupplierOrgUnitIdField != null))
                {
                    if ((staffingSupplierOrgUnitIdField.Equals(value) != true))
                    {
                        this.staffingSupplierOrgUnitIdField = value;
                        this.OnPropertyChanged("StaffingSupplierOrgUnitId");
                    }
                }
                else
                {
                    this.staffingSupplierOrgUnitIdField = value;
                    this.OnPropertyChanged("StaffingSupplierOrgUnitId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("StaffingCustomerOrgUnitId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> StaffingCustomerOrgUnitId
        {
            get
            {
                if ((this.staffingCustomerOrgUnitIdField == null))
                {
                    this.staffingCustomerOrgUnitIdField = new List<EntityIdType>();
                }
                return this.staffingCustomerOrgUnitIdField;
            }
            set
            {
                if ((this.staffingCustomerOrgUnitIdField != null))
                {
                    if ((staffingCustomerOrgUnitIdField.Equals(value) != true))
                    {
                        this.staffingCustomerOrgUnitIdField = value;
                        this.OnPropertyChanged("StaffingCustomerOrgUnitId");
                    }
                }
                else
                {
                    this.staffingCustomerOrgUnitIdField = value;
                    this.OnPropertyChanged("StaffingCustomerOrgUnitId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("MasterOrderId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> MasterOrderId
        {
            get
            {
                if ((this.masterOrderIdField == null))
                {
                    this.masterOrderIdField = new List<EntityIdType>();
                }
                return this.masterOrderIdField;
            }
            set
            {
                if ((this.masterOrderIdField != null))
                {
                    if ((masterOrderIdField.Equals(value) != true))
                    {
                        this.masterOrderIdField = value;
                        this.OnPropertyChanged("MasterOrderId");
                    }
                }
                else
                {
                    this.masterOrderIdField = value;
                    this.OnPropertyChanged("MasterOrderId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("TimeCardId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> TimeCardId
        {
            get
            {
                if ((this.timeCardIdField == null))
                {
                    this.timeCardIdField = new List<EntityIdType>();
                }
                return this.timeCardIdField;
            }
            set
            {
                if ((this.timeCardIdField != null))
                {
                    if ((timeCardIdField.Equals(value) != true))
                    {
                        this.timeCardIdField = value;
                        this.OnPropertyChanged("TimeCardId");
                    }
                }
                else
                {
                    this.timeCardIdField = value;
                    this.OnPropertyChanged("TimeCardId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("InvoiceId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> InvoiceId
        {
            get
            {
                if ((this.invoiceIdField == null))
                {
                    this.invoiceIdField = new List<EntityIdType>();
                }
                return this.invoiceIdField;
            }
            set
            {
                if ((this.invoiceIdField != null))
                {
                    if ((invoiceIdField.Equals(value) != true))
                    {
                        this.invoiceIdField = value;
                        this.OnPropertyChanged("InvoiceId");
                    }
                }
                else
                {
                    this.invoiceIdField = value;
                    this.OnPropertyChanged("InvoiceId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("BillToEntityId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> BillToEntityId
        {
            get
            {
                if ((this.billToEntityIdField == null))
                {
                    this.billToEntityIdField = new List<EntityIdType>();
                }
                return this.billToEntityIdField;
            }
            set
            {
                if ((this.billToEntityIdField != null))
                {
                    if ((billToEntityIdField.Equals(value) != true))
                    {
                        this.billToEntityIdField = value;
                        this.OnPropertyChanged("BillToEntityId");
                    }
                }
                else
                {
                    this.billToEntityIdField = value;
                    this.OnPropertyChanged("BillToEntityId");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("StaffingOrganizationId")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<EntityIdType> StaffingOrganizationId
        {
            get
            {
                if ((this.staffingOrganizationIdField == null))
                {
                    this.staffingOrganizationIdField = new List<EntityIdType>();
                }
                return this.staffingOrganizationIdField;
            }
            set
            {
                if ((this.staffingOrganizationIdField != null))
                {
                    if ((staffingOrganizationIdField.Equals(value) != true))
                    {
                        this.staffingOrganizationIdField = value;
                        this.OnPropertyChanged("StaffingOrganizationId");
                    }
                }
                else
                {
                    this.staffingOrganizationIdField = value;
                    this.OnPropertyChanged("StaffingOrganizationId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserAreaType UserArea
        {
            get
            {
                //if ((this.userAreaField == null))
                //{
                //    this.userAreaField = new UserAreaType();
                //}
                return this.userAreaField;
            }
            set
            {
                if ((this.userAreaField != null))
                {
                    if ((userAreaField.Equals(value) != true))
                    {
                        this.userAreaField = value;
                        this.OnPropertyChanged("UserArea");
                    }
                }
                else
                {
                    this.userAreaField = value;
                    this.OnPropertyChanged("UserArea");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypeResourceInformation", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypeResourceInformation : EntityBase<HumanResourceTypeResourceInformation>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypeResourceInformationResourceType resourceTypeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PersonNameType personNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EntityContactInfoType entityContactInfoField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private PostalAddressType postalAddressField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<HumanResourceTypeResourceInformationAvailabilityDate> availabilityDateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypeResourceInformationResourceType ResourceType
        {
            get
            {
                if ((this.resourceTypeField == null))
                {
                    this.resourceTypeField = new HumanResourceTypeResourceInformationResourceType();
                }
                return this.resourceTypeField;
            }
            set
            {
                if ((this.resourceTypeField != null))
                {
                    if ((resourceTypeField.Equals(value) != true))
                    {
                        this.resourceTypeField = value;
                        this.OnPropertyChanged("ResourceType");
                    }
                }
                else
                {
                    this.resourceTypeField = value;
                    this.OnPropertyChanged("ResourceType");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PersonNameType PersonName
        {
            get
            {
                return this.personNameField;
            }
            set
            {
                if ((this.personNameField != null))
                {
                    if ((personNameField.Equals(value) != true))
                    {
                        this.personNameField = value;
                        this.OnPropertyChanged("PersonName");
                    }
                }
                else
                {
                    this.personNameField = value;
                    this.OnPropertyChanged("PersonName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityContactInfoType EntityContactInfo
        {
            get
            {
                return this.entityContactInfoField;
            }
            set
            {
                if ((this.entityContactInfoField != null))
                {
                    if ((entityContactInfoField.Equals(value) != true))
                    {
                        this.entityContactInfoField = value;
                        this.OnPropertyChanged("EntityContactInfo");
                    }
                }
                else
                {
                    this.entityContactInfoField = value;
                    this.OnPropertyChanged("EntityContactInfo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public PostalAddressType PostalAddress
        {
            get
            {
                return this.postalAddressField;
            }
            set
            {
                if ((this.postalAddressField != null))
                {
                    if ((postalAddressField.Equals(value) != true))
                    {
                        this.postalAddressField = value;
                        this.OnPropertyChanged("PostalAddress");
                    }
                }
                else
                {
                    this.postalAddressField = value;
                    this.OnPropertyChanged("PostalAddress");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("AvailabilityDate")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<HumanResourceTypeResourceInformationAvailabilityDate> AvailabilityDate
        {
            get
            {
                if ((this.availabilityDateField == null))
                {
                    this.availabilityDateField = new List<HumanResourceTypeResourceInformationAvailabilityDate>();
                }
                return this.availabilityDateField;
            }
            set
            {
                if ((this.availabilityDateField != null))
                {
                    if ((availabilityDateField.Equals(value) != true))
                    {
                        this.availabilityDateField = value;
                        this.OnPropertyChanged("AvailabilityDate");
                    }
                }
                else
                {
                    this.availabilityDateField = value;
                    this.OnPropertyChanged("AvailabilityDate");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypeResourceInformationResourceType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypeResourceInformationResourceType : EntityBase<HumanResourceTypeResourceInformationResourceType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool independentContractorField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool payrolledEmployeeField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool independentContractor
        {
            get
            {
                return this.independentContractorField;
            }
            set
            {
                if ((independentContractorField.Equals(value) != true))
                {
                    this.independentContractorField = value;
                    this.OnPropertyChanged("independentContractor");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool payrolledEmployee
        {
            get
            {
                return this.payrolledEmployeeField;
            }
            set
            {
                if ((payrolledEmployeeField.Equals(value) != true))
                {
                    this.payrolledEmployeeField = value;
                    this.OnPropertyChanged("payrolledEmployee");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypeResourceInformationAvailabilityDate", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypeResourceInformationAvailabilityDate : EntityBase<HumanResourceTypeResourceInformationAvailabilityDate>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string availabilityStartDateField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string availabilityEndDateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvailabilityStartDate
        {
            get
            {
                return this.availabilityStartDateField;
            }
            set
            {
                if ((this.availabilityStartDateField != null))
                {
                    if ((availabilityStartDateField.Equals(value) != true))
                    {
                        this.availabilityStartDateField = value;
                        this.OnPropertyChanged("AvailabilityStartDate");
                    }
                }
                else
                {
                    this.availabilityStartDateField = value;
                    this.OnPropertyChanged("AvailabilityStartDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvailabilityEndDate
        {
            get
            {
                return this.availabilityEndDateField;
            }
            set
            {
                if ((this.availabilityEndDateField != null))
                {
                    if ((availabilityEndDateField.Equals(value) != true))
                    {
                        this.availabilityEndDateField = value;
                        this.OnPropertyChanged("AvailabilityEndDate");
                    }
                }
                else
                {
                    this.availabilityEndDateField = value;
                    this.OnPropertyChanged("AvailabilityEndDate");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypeProfile", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypeProfile : EntityBase<HumanResourceTypeProfile>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<CompetencyType> competencyField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private ResumeType resumeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<StaffingPositionHeaderType> positionHeaderField;

        [System.Xml.Serialization.XmlElementAttribute("Competency")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<CompetencyType> Competency
        {
            get
            {
                if ((this.competencyField == null))
                {
                    this.competencyField = new List<CompetencyType>();
                }
                return this.competencyField;
            }
            set
            {
                if ((this.competencyField != null))
                {
                    if ((competencyField.Equals(value) != true))
                    {
                        this.competencyField = value;
                        this.OnPropertyChanged("Competency");
                    }
                }
                else
                {
                    this.competencyField = value;
                    this.OnPropertyChanged("Competency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ResumeType Resume
        {
            get
            {
                return this.resumeField;
            }
            set
            {
                if ((this.resumeField != null))
                {
                    if ((resumeField.Equals(value) != true))
                    {
                        this.resumeField = value;
                        this.OnPropertyChanged("Resume");
                    }
                }
                else
                {
                    this.resumeField = value;
                    this.OnPropertyChanged("Resume");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PositionHeader")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<StaffingPositionHeaderType> PositionHeader
        {
            get
            {
                if ((this.positionHeaderField == null))
                {
                    this.positionHeaderField = new List<StaffingPositionHeaderType>();
                }
                return this.positionHeaderField;
            }
            set
            {
                if ((this.positionHeaderField != null))
                {
                    if ((positionHeaderField.Equals(value) != true))
                    {
                        this.positionHeaderField = value;
                        this.OnPropertyChanged("PositionHeader");
                    }
                }
                else
                {
                    this.positionHeaderField = value;
                    this.OnPropertyChanged("PositionHeader");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypePreferences", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypePreferences : EntityBase<HumanResourceTypePreferences>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypePreferencesDesiredShift desiredShiftField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypePreferencesTravel travelField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypePreferencesCommute commuteField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypePreferencesRelocation relocationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> distributionRestrictionsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool distributionRestrictionsSpecifiedField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypePreferencesDesiredCompensation desiredCompensationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypePreferencesDesiredShift DesiredShift
        {
            get
            {
                return this.desiredShiftField;
            }
            set
            {
                if ((this.desiredShiftField != null))
                {
                    if ((desiredShiftField.Equals(value) != true))
                    {
                        this.desiredShiftField = value;
                        this.OnPropertyChanged("DesiredShift");
                    }
                }
                else
                {
                    this.desiredShiftField = value;
                    this.OnPropertyChanged("DesiredShift");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypePreferencesTravel Travel
        {
            get
            {
                return this.travelField;
            }
            set
            {
                if ((this.travelField != null))
                {
                    if ((travelField.Equals(value) != true))
                    {
                        this.travelField = value;
                        this.OnPropertyChanged("Travel");
                    }
                }
                else
                {
                    this.travelField = value;
                    this.OnPropertyChanged("Travel");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypePreferencesCommute Commute
        {
            get
            {
                return this.commuteField;
            }
            set
            {
                if ((this.commuteField != null))
                {
                    if ((commuteField.Equals(value) != true))
                    {
                        this.commuteField = value;
                        this.OnPropertyChanged("Commute");
                    }
                }
                else
                {
                    this.commuteField = value;
                    this.OnPropertyChanged("Commute");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypePreferencesRelocation Relocation
        {
            get
            {
                return this.relocationField;
            }
            set
            {
                if ((this.relocationField != null))
                {
                    if ((relocationField.Equals(value) != true))
                    {
                        this.relocationField = value;
                        this.OnPropertyChanged("Relocation");
                    }
                }
                else
                {
                    this.relocationField = value;
                    this.OnPropertyChanged("Relocation");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("DoNotDistributeTo", IsNullable = false)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> DistributionRestrictions
        {
            get
            {
                return this.distributionRestrictionsField;
            }
            set
            {
                if ((this.distributionRestrictionsField != null))
                {
                    if ((distributionRestrictionsField.Equals(value) != true))
                    {
                        this.distributionRestrictionsField = value;
                        this.OnPropertyChanged("DistributionRestrictions");
                    }
                }
                else
                {
                    this.distributionRestrictionsField = value;
                    this.OnPropertyChanged("DistributionRestrictions");
                }
            }
        }

        [XmlIgnore()]
        public bool DistributionRestrictionsSpecified
        {
            get
            {
                return this.distributionRestrictionsSpecifiedField;
            }
            set
            {
                if ((distributionRestrictionsSpecifiedField.Equals(value) != true))
                {
                    this.distributionRestrictionsSpecifiedField = value;
                    this.OnPropertyChanged("DistributionRestrictionsSpecified");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypePreferencesDesiredCompensation DesiredCompensation
        {
            get
            {
                return this.desiredCompensationField;
            }
            set
            {
                if ((this.desiredCompensationField != null))
                {
                    if ((desiredCompensationField.Equals(value) != true))
                    {
                        this.desiredCompensationField = value;
                        this.OnPropertyChanged("DesiredCompensation");
                    }
                }
                else
                {
                    this.desiredCompensationField = value;
                    this.OnPropertyChanged("DesiredCompensation");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypePreferencesDesiredShift", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypePreferencesDesiredShift : EntityBase<HumanResourceTypePreferencesDesiredShift>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string shiftNameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private decimal shiftHoursField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool shiftHoursFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string shiftStartTimeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string shiftEndTimeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string shiftCommentsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShiftName
        {
            get
            {
                return this.shiftNameField;
            }
            set
            {
                if ((this.shiftNameField != null))
                {
                    if ((shiftNameField.Equals(value) != true))
                    {
                        this.shiftNameField = value;
                        this.OnPropertyChanged("ShiftName");
                    }
                }
                else
                {
                    this.shiftNameField = value;
                    this.OnPropertyChanged("ShiftName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShiftHours
        {
            get
            {
                return this.shiftHoursField;
            }
            set
            {
                if ((shiftHoursField.Equals(value) != true))
                {
                    this.shiftHoursField = value;
                    this.OnPropertyChanged("ShiftHours");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShiftHoursSpecified
        {
            get
            {
                return this.shiftHoursFieldSpecified;
            }
            set
            {
                if ((shiftHoursFieldSpecified.Equals(value) != true))
                {
                    this.shiftHoursFieldSpecified = value;
                    this.OnPropertyChanged("ShiftHoursSpecified");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShiftStartTime
        {
            get
            {
                return this.shiftStartTimeField;
            }
            set
            {
                if ((this.shiftStartTimeField != null))
                {
                    if ((shiftStartTimeField.Equals(value) != true))
                    {
                        this.shiftStartTimeField = value;
                        this.OnPropertyChanged("ShiftStartTime");
                    }
                }
                else
                {
                    this.shiftStartTimeField = value;
                    this.OnPropertyChanged("ShiftStartTime");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShiftEndTime
        {
            get
            {
                return this.shiftEndTimeField;
            }
            set
            {
                if ((this.shiftEndTimeField != null))
                {
                    if ((shiftEndTimeField.Equals(value) != true))
                    {
                        this.shiftEndTimeField = value;
                        this.OnPropertyChanged("ShiftEndTime");
                    }
                }
                else
                {
                    this.shiftEndTimeField = value;
                    this.OnPropertyChanged("ShiftEndTime");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShiftComments
        {
            get
            {
                return this.shiftCommentsField;
            }
            set
            {
                if ((this.shiftCommentsField != null))
                {
                    if ((shiftCommentsField.Equals(value) != true))
                    {
                        this.shiftCommentsField = value;
                        this.OnPropertyChanged("ShiftComments");
                    }
                }
                else
                {
                    this.shiftCommentsField = value;
                    this.OnPropertyChanged("ShiftComments");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypePreferencesTravel", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypePreferencesTravel : EntityBase<HumanResourceTypePreferencesTravel>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string percentageTravelField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string travelConsiderationsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool willingToTravelField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PercentageTravel
        {
            get
            {
                return this.percentageTravelField;
            }
            set
            {
                if ((this.percentageTravelField != null))
                {
                    if ((percentageTravelField.Equals(value) != true))
                    {
                        this.percentageTravelField = value;
                        this.OnPropertyChanged("PercentageTravel");
                    }
                }
                else
                {
                    this.percentageTravelField = value;
                    this.OnPropertyChanged("PercentageTravel");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TravelConsiderations
        {
            get
            {
                return this.travelConsiderationsField;
            }
            set
            {
                if ((this.travelConsiderationsField != null))
                {
                    if ((travelConsiderationsField.Equals(value) != true))
                    {
                        this.travelConsiderationsField = value;
                        this.OnPropertyChanged("TravelConsiderations");
                    }
                }
                else
                {
                    this.travelConsiderationsField = value;
                    this.OnPropertyChanged("TravelConsiderations");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool willingToTravel
        {
            get
            {
                return this.willingToTravelField;
            }
            set
            {
                if ((willingToTravelField.Equals(value) != true))
                {
                    this.willingToTravelField = value;
                    this.OnPropertyChanged("willingToTravel");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypePreferencesCommute", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypePreferencesCommute : EntityBase<HumanResourceTypePreferencesCommute>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string timeMaxField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string distanceMaxField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string commuteCommentsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeMax
        {
            get
            {
                return this.timeMaxField;
            }
            set
            {
                if ((this.timeMaxField != null))
                {
                    if ((timeMaxField.Equals(value) != true))
                    {
                        this.timeMaxField = value;
                        this.OnPropertyChanged("TimeMax");
                    }
                }
                else
                {
                    this.timeMaxField = value;
                    this.OnPropertyChanged("TimeMax");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistanceMax
        {
            get
            {
                return this.distanceMaxField;
            }
            set
            {
                if ((this.distanceMaxField != null))
                {
                    if ((distanceMaxField.Equals(value) != true))
                    {
                        this.distanceMaxField = value;
                        this.OnPropertyChanged("DistanceMax");
                    }
                }
                else
                {
                    this.distanceMaxField = value;
                    this.OnPropertyChanged("DistanceMax");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommuteComments
        {
            get
            {
                return this.commuteCommentsField;
            }
            set
            {
                if ((this.commuteCommentsField != null))
                {
                    if ((commuteCommentsField.Equals(value) != true))
                    {
                        this.commuteCommentsField = value;
                        this.OnPropertyChanged("CommuteComments");
                    }
                }
                else
                {
                    this.commuteCommentsField = value;
                    this.OnPropertyChanged("CommuteComments");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypePreferencesRelocation", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypePreferencesRelocation : EntityBase<HumanResourceTypePreferencesRelocation>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string relocationCommentsField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool willingToRelocateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelocationComments
        {
            get
            {
                return this.relocationCommentsField;
            }
            set
            {
                if ((this.relocationCommentsField != null))
                {
                    if ((relocationCommentsField.Equals(value) != true))
                    {
                        this.relocationCommentsField = value;
                        this.OnPropertyChanged("RelocationComments");
                    }
                }
                else
                {
                    this.relocationCommentsField = value;
                    this.OnPropertyChanged("RelocationComments");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool willingToRelocate
        {
            get
            {
                return this.willingToRelocateField;
            }
            set
            {
                if ((willingToRelocateField.Equals(value) != true))
                {
                    this.willingToRelocateField = value;
                    this.OnPropertyChanged("willingToRelocate");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypePreferencesDesiredCompensation", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypePreferencesDesiredCompensation : EntityBase<HumanResourceTypePreferencesDesiredCompensation>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private HumanResourceTypePreferencesDesiredCompensationCompensationAmount compensationAmountField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string compensationCommentsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public HumanResourceTypePreferencesDesiredCompensationCompensationAmount CompensationAmount
        {
            get
            {
                return this.compensationAmountField;
            }
            set
            {
                if ((this.compensationAmountField != null))
                {
                    if ((compensationAmountField.Equals(value) != true))
                    {
                        this.compensationAmountField = value;
                        this.OnPropertyChanged("CompensationAmount");
                    }
                }
                else
                {
                    this.compensationAmountField = value;
                    this.OnPropertyChanged("CompensationAmount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompensationComments
        {
            get
            {
                return this.compensationCommentsField;
            }
            set
            {
                if ((this.compensationCommentsField != null))
                {
                    if ((compensationCommentsField.Equals(value) != true))
                    {
                        this.compensationCommentsField = value;
                        this.OnPropertyChanged("CompensationComments");
                    }
                }
                else
                {
                    this.compensationCommentsField = value;
                    this.OnPropertyChanged("CompensationComments");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypePreferencesDesiredCompensationCompensationAmount", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypePreferencesDesiredCompensationCompensationAmount : EntityBase<HumanResourceTypePreferencesDesiredCompensationCompensationAmount>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string currencyField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string amountPeriodField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency
        {
            get
            {
                return this.currencyField;
            }
            set
            {
                if ((this.currencyField != null))
                {
                    if ((currencyField.Equals(value) != true))
                    {
                        this.currencyField = value;
                        this.OnPropertyChanged("currency");
                    }
                }
                else
                {
                    this.currencyField = value;
                    this.OnPropertyChanged("currency");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string amountPeriod
        {
            get
            {
                return this.amountPeriodField;
            }
            set
            {
                if ((this.amountPeriodField != null))
                {
                    if ((amountPeriodField.Equals(value) != true))
                    {
                        this.amountPeriodField = value;
                        this.OnPropertyChanged("amountPeriod");
                    }
                }
                else
                {
                    this.amountPeriodField = value;
                    this.OnPropertyChanged("amountPeriod");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HumanResourceTypeSocialInsurance", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class HumanResourceTypeSocialInsurance : EntityBase<HumanResourceTypeSocialInsurance>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private SocialInsuranceTypeType typeField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool isParticipatingField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string reasonForNotParticipatingField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<string> legalDescriptionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public SocialInsuranceTypeType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((this.typeField != null))
                {
                    if ((typeField.Equals(value) != true))
                    {
                        this.typeField = value;
                        this.OnPropertyChanged("Type");
                    }
                }
                else
                {
                    this.typeField = value;
                    this.OnPropertyChanged("Type");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsParticipating
        {
            get
            {
                return this.isParticipatingField;
            }
            set
            {
                if ((isParticipatingField.Equals(value) != true))
                {
                    this.isParticipatingField = value;
                    this.OnPropertyChanged("IsParticipating");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonForNotParticipating
        {
            get
            {
                return this.reasonForNotParticipatingField;
            }
            set
            {
                if ((this.reasonForNotParticipatingField != null))
                {
                    if ((reasonForNotParticipatingField.Equals(value) != true))
                    {
                        this.reasonForNotParticipatingField = value;
                        this.OnPropertyChanged("ReasonForNotParticipating");
                    }
                }
                else
                {
                    this.reasonForNotParticipatingField = value;
                    this.OnPropertyChanged("ReasonForNotParticipating");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("LegalDescription")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<string> LegalDescription
        {
            get
            {
                if ((this.legalDescriptionField == null))
                {
                    this.legalDescriptionField = new List<string>();
                }
                return this.legalDescriptionField;
            }
            set
            {
                if ((this.legalDescriptionField != null))
                {
                    if ((legalDescriptionField.Equals(value) != true))
                    {
                        this.legalDescriptionField = value;
                        this.OnPropertyChanged("LegalDescription");
                    }
                }
                else
                {
                    this.legalDescriptionField = value;
                    this.OnPropertyChanged("LegalDescription");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SocialInsuranceTypeType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class SocialInsuranceTypeType : EntityBase<SocialInsuranceTypeType>
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private object itemField;

        [System.Xml.Serialization.XmlElementAttribute("NonStandardValue", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("StandardValue", typeof(SocialInsuranceEnumType))]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                if ((this.itemField != null))
                {
                    if ((itemField.Equals(value) != true))
                    {
                        this.itemField = value;
                        this.OnPropertyChanged("Item");
                    }
                }
                else
                {
                    this.itemField = value;
                    this.OnPropertyChanged("Item");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum SocialInsuranceEnumType
    {

        /// <remarks/>
        Health,

        /// <remarks/>
        WelfarePension,

        /// <remarks/>
        UnemploymentInsurance,
    }
}
