// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.33213
//    <NameSpace>HRXML.Net</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>True</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>True</GenerateCloneMethod><GenerateDataContracts>True</GenerateDataContracts><CodeBaseTag>Net35</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>ASCII</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace HRXML.Net
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Collections.Generic;
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverage", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverage : EntityBase<USRateBasedCoverage>
    {

        private USRateBasedCoverageTransactionCode transactionCodeField;

        private bool transactionCodeFieldSpecified;

        private string electedPlanCodeField;

        private string groupNumberField;

        private USRateBasedCoverageCoverageType coverageTypeField;

        private CarrierData carrierField;

        private System.DateTime startDateField;

        private System.DateTime endDateField;

        private bool endDateFieldSpecified;

        private List<USRateBasedCoverageCoverageLevel> coverageLevelField;

        private List<USRateBasedCoverageQuestion> questionField;

        private bool eOIOnFileWithEmployerField;

        private bool eOIOnFileWithEmployerFieldSpecified;

        private bool eOIRequiredField;

        private bool eOIRequiredFieldSpecified;

        private List<BeneficiaryDataType> beneficiaryDataField;

        private string eligibilityPostalCodeField;

        private bool lateEntrantIndicatorField;

        private bool lateEntrantIndicatorFieldSpecified;

        /// <summary>
        /// USRateBasedCoverage class constructor
        /// </summary>
        public USRateBasedCoverage()
        {
            this.beneficiaryDataField = new List<BeneficiaryDataType>();
            this.questionField = new List<USRateBasedCoverageQuestion>();
            this.coverageLevelField = new List<USRateBasedCoverageCoverageLevel>();
            this.carrierField = new CarrierData();
            this.coverageTypeField = new USRateBasedCoverageCoverageType();
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageTransactionCode TransactionCode
        {
            get
            {
                return this.transactionCodeField;
            }
            set
            {
                if ((transactionCodeField.Equals(value) != true))
                {
                    this.transactionCodeField = value;
                    this.OnPropertyChanged("TransactionCode");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TransactionCodeSpecified
        {
            get
            {
                return this.transactionCodeFieldSpecified;
            }
            set
            {
                if ((transactionCodeFieldSpecified.Equals(value) != true))
                {
                    this.transactionCodeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionCodeSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElectedPlanCode
        {
            get
            {
                return this.electedPlanCodeField;
            }
            set
            {
                if ((this.electedPlanCodeField != null))
                {
                    if ((electedPlanCodeField.Equals(value) != true))
                    {
                        this.electedPlanCodeField = value;
                        this.OnPropertyChanged("ElectedPlanCode");
                    }
                }
                else
                {
                    this.electedPlanCodeField = value;
                    this.OnPropertyChanged("ElectedPlanCode");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupNumber
        {
            get
            {
                return this.groupNumberField;
            }
            set
            {
                if ((this.groupNumberField != null))
                {
                    if ((groupNumberField.Equals(value) != true))
                    {
                        this.groupNumberField = value;
                        this.OnPropertyChanged("GroupNumber");
                    }
                }
                else
                {
                    this.groupNumberField = value;
                    this.OnPropertyChanged("GroupNumber");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageType CoverageType
        {
            get
            {
                return this.coverageTypeField;
            }
            set
            {
                if ((this.coverageTypeField != null))
                {
                    if ((coverageTypeField.Equals(value) != true))
                    {
                        this.coverageTypeField = value;
                        this.OnPropertyChanged("CoverageType");
                    }
                }
                else
                {
                    this.coverageTypeField = value;
                    this.OnPropertyChanged("CoverageType");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarrierData Carrier
        {
            get
            {
                return this.carrierField;
            }
            set
            {
                if ((this.carrierField != null))
                {
                    if ((carrierField.Equals(value) != true))
                    {
                        this.carrierField = value;
                        this.OnPropertyChanged("Carrier");
                    }
                }
                else
                {
                    this.carrierField = value;
                    this.OnPropertyChanged("Carrier");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(DataType = "date", Order = 5)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                if ((startDateField.Equals(value) != true))
                {
                    this.startDateField = value;
                    this.OnPropertyChanged("StartDate");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(DataType = "date", Order = 6)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                if ((endDateField.Equals(value) != true))
                {
                    this.endDateField = value;
                    this.OnPropertyChanged("EndDate");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EndDateSpecified
        {
            get
            {
                return this.endDateFieldSpecified;
            }
            set
            {
                if ((endDateFieldSpecified.Equals(value) != true))
                {
                    this.endDateFieldSpecified = value;
                    this.OnPropertyChanged("EndDateSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("CoverageLevel", Order = 7)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<USRateBasedCoverageCoverageLevel> CoverageLevel
        {
            get
            {
                return this.coverageLevelField;
            }
            set
            {
                if ((this.coverageLevelField != null))
                {
                    if ((coverageLevelField.Equals(value) != true))
                    {
                        this.coverageLevelField = value;
                        this.OnPropertyChanged("CoverageLevel");
                    }
                }
                else
                {
                    this.coverageLevelField = value;
                    this.OnPropertyChanged("CoverageLevel");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Question", Order = 8)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<USRateBasedCoverageQuestion> Question
        {
            get
            {
                return this.questionField;
            }
            set
            {
                if ((this.questionField != null))
                {
                    if ((questionField.Equals(value) != true))
                    {
                        this.questionField = value;
                        this.OnPropertyChanged("Question");
                    }
                }
                else
                {
                    this.questionField = value;
                    this.OnPropertyChanged("Question");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EOIOnFileWithEmployer
        {
            get
            {
                return this.eOIOnFileWithEmployerField;
            }
            set
            {
                if ((eOIOnFileWithEmployerField.Equals(value) != true))
                {
                    this.eOIOnFileWithEmployerField = value;
                    this.OnPropertyChanged("EOIOnFileWithEmployer");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EOIOnFileWithEmployerSpecified
        {
            get
            {
                return this.eOIOnFileWithEmployerFieldSpecified;
            }
            set
            {
                if ((eOIOnFileWithEmployerFieldSpecified.Equals(value) != true))
                {
                    this.eOIOnFileWithEmployerFieldSpecified = value;
                    this.OnPropertyChanged("EOIOnFileWithEmployerSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EOIRequired
        {
            get
            {
                return this.eOIRequiredField;
            }
            set
            {
                if ((eOIRequiredField.Equals(value) != true))
                {
                    this.eOIRequiredField = value;
                    this.OnPropertyChanged("EOIRequired");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EOIRequiredSpecified
        {
            get
            {
                return this.eOIRequiredFieldSpecified;
            }
            set
            {
                if ((eOIRequiredFieldSpecified.Equals(value) != true))
                {
                    this.eOIRequiredFieldSpecified = value;
                    this.OnPropertyChanged("EOIRequiredSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("BeneficiaryData", Order = 11)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<BeneficiaryDataType> BeneficiaryData
        {
            get
            {
                return this.beneficiaryDataField;
            }
            set
            {
                if ((this.beneficiaryDataField != null))
                {
                    if ((beneficiaryDataField.Equals(value) != true))
                    {
                        this.beneficiaryDataField = value;
                        this.OnPropertyChanged("BeneficiaryData");
                    }
                }
                else
                {
                    this.beneficiaryDataField = value;
                    this.OnPropertyChanged("BeneficiaryData");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EligibilityPostalCode
        {
            get
            {
                return this.eligibilityPostalCodeField;
            }
            set
            {
                if ((this.eligibilityPostalCodeField != null))
                {
                    if ((eligibilityPostalCodeField.Equals(value) != true))
                    {
                        this.eligibilityPostalCodeField = value;
                        this.OnPropertyChanged("EligibilityPostalCode");
                    }
                }
                else
                {
                    this.eligibilityPostalCodeField = value;
                    this.OnPropertyChanged("EligibilityPostalCode");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LateEntrantIndicator
        {
            get
            {
                return this.lateEntrantIndicatorField;
            }
            set
            {
                if ((lateEntrantIndicatorField.Equals(value) != true))
                {
                    this.lateEntrantIndicatorField = value;
                    this.OnPropertyChanged("LateEntrantIndicator");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LateEntrantIndicatorSpecified
        {
            get
            {
                return this.lateEntrantIndicatorFieldSpecified;
            }
            set
            {
                if ((lateEntrantIndicatorFieldSpecified.Equals(value) != true))
                {
                    this.lateEntrantIndicatorFieldSpecified = value;
                    this.OnPropertyChanged("LateEntrantIndicatorSpecified");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum USRateBasedCoverageTransactionCode
    {

        /// <remarks/>
        Add,

        /// <remarks/>
        Audit,

        /// <remarks/>
        Change,

        /// <remarks/>
        Correction,

        /// <remarks/>
        Delete,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Employee Information Not Available")]
        EmployeeInformationNotAvailable,

        /// <remarks/>
        Reinstatement,

        /// <remarks/>
        Termination,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageCoverageType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageCoverageType : EntityBase<USRateBasedCoverageCoverageType>
    {

        private string productField;

        private string productTypeField;

        private USRateBasedCoverageCoverageTypeCoveredEntity coveredEntityField;

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product
        {
            get
            {
                return this.productField;
            }
            set
            {
                if ((this.productField != null))
                {
                    if ((productField.Equals(value) != true))
                    {
                        this.productField = value;
                        this.OnPropertyChanged("Product");
                    }
                }
                else
                {
                    this.productField = value;
                    this.OnPropertyChanged("Product");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType
        {
            get
            {
                return this.productTypeField;
            }
            set
            {
                if ((this.productTypeField != null))
                {
                    if ((productTypeField.Equals(value) != true))
                    {
                        this.productTypeField = value;
                        this.OnPropertyChanged("ProductType");
                    }
                }
                else
                {
                    this.productTypeField = value;
                    this.OnPropertyChanged("ProductType");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageTypeCoveredEntity CoveredEntity
        {
            get
            {
                return this.coveredEntityField;
            }
            set
            {
                if ((coveredEntityField.Equals(value) != true))
                {
                    this.coveredEntityField = value;
                    this.OnPropertyChanged("CoveredEntity");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum USRateBasedCoverageCoverageTypeCoveredEntity
    {

        /// <remarks/>
        Self,

        /// <remarks/>
        Spouse,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Common Law Spouse")]
        CommonLawSpouse,

        /// <remarks/>
        Dependent,

        /// <remarks/>
        Child,
    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageCoverageLevel", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageCoverageLevel : EntityBase<USRateBasedCoverageCoverageLevel>
    {

        private USRateBasedCoverageCoverageLevelApprovedCoverage approvedCoverageField;

        private USRateBasedCoverageCoverageLevelRequestedCoverage requestedCoverageField;

        private string startDateField;

        /// <summary>
        /// USRateBasedCoverageCoverageLevel class constructor
        /// </summary>
        public USRateBasedCoverageCoverageLevel()
        {
            this.requestedCoverageField = new USRateBasedCoverageCoverageLevelRequestedCoverage();
            this.approvedCoverageField = new USRateBasedCoverageCoverageLevelApprovedCoverage();
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageLevelApprovedCoverage ApprovedCoverage
        {
            get
            {
                return this.approvedCoverageField;
            }
            set
            {
                if ((this.approvedCoverageField != null))
                {
                    if ((approvedCoverageField.Equals(value) != true))
                    {
                        this.approvedCoverageField = value;
                        this.OnPropertyChanged("ApprovedCoverage");
                    }
                }
                else
                {
                    this.approvedCoverageField = value;
                    this.OnPropertyChanged("ApprovedCoverage");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageLevelRequestedCoverage RequestedCoverage
        {
            get
            {
                return this.requestedCoverageField;
            }
            set
            {
                if ((this.requestedCoverageField != null))
                {
                    if ((requestedCoverageField.Equals(value) != true))
                    {
                        this.requestedCoverageField = value;
                        this.OnPropertyChanged("RequestedCoverage");
                    }
                }
                else
                {
                    this.requestedCoverageField = value;
                    this.OnPropertyChanged("RequestedCoverage");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                if ((this.startDateField != null))
                {
                    if ((startDateField.Equals(value) != true))
                    {
                        this.startDateField = value;
                        this.OnPropertyChanged("StartDate");
                    }
                }
                else
                {
                    this.startDateField = value;
                    this.OnPropertyChanged("StartDate");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageCoverageLevelApprovedCoverage", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageCoverageLevelApprovedCoverage : EntityBase<USRateBasedCoverageCoverageLevelApprovedCoverage>
    {

        private USRateBasedCoverageCoverageLevelApprovedCoverageLevel levelField;

        private USRateBasedCoverageCoverageLevelApprovedCoverageVolume volumeField;

        /// <summary>
        /// USRateBasedCoverageCoverageLevelApprovedCoverage class constructor
        /// </summary>
        public USRateBasedCoverageCoverageLevelApprovedCoverage()
        {
            this.volumeField = new USRateBasedCoverageCoverageLevelApprovedCoverageVolume();
            this.levelField = new USRateBasedCoverageCoverageLevelApprovedCoverageLevel();
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageLevelApprovedCoverageLevel Level
        {
            get
            {
                return this.levelField;
            }
            set
            {
                if ((this.levelField != null))
                {
                    if ((levelField.Equals(value) != true))
                    {
                        this.levelField = value;
                        this.OnPropertyChanged("Level");
                    }
                }
                else
                {
                    this.levelField = value;
                    this.OnPropertyChanged("Level");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageLevelApprovedCoverageVolume Volume
        {
            get
            {
                return this.volumeField;
            }
            set
            {
                if ((this.volumeField != null))
                {
                    if ((volumeField.Equals(value) != true))
                    {
                        this.volumeField = value;
                        this.OnPropertyChanged("Volume");
                    }
                }
                else
                {
                    this.volumeField = value;
                    this.OnPropertyChanged("Volume");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageCoverageLevelApprovedCoverageLevel", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageCoverageLevelApprovedCoverageLevel : EntityBase<USRateBasedCoverageCoverageLevelApprovedCoverageLevel>
    {

        private USRateBasedCoverageCoverageLevelApprovedCoverageLevelCoverageLevelValue coverageLevelValueField;

        private double coverageLevelMultiplierField;

        private USRateBasedCoverageCoverageLevelApprovedCoverageLevelCoverageLevelType coverageLevelTypeField;

        /// <summary>
        /// USRateBasedCoverageCoverageLevelApprovedCoverageLevel class constructor
        /// </summary>
        public USRateBasedCoverageCoverageLevelApprovedCoverageLevel()
        {
            this.coverageLevelValueField = new USRateBasedCoverageCoverageLevelApprovedCoverageLevelCoverageLevelValue();
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageLevelApprovedCoverageLevelCoverageLevelValue CoverageLevelValue
        {
            get
            {
                return this.coverageLevelValueField;
            }
            set
            {
                if ((this.coverageLevelValueField != null))
                {
                    if ((coverageLevelValueField.Equals(value) != true))
                    {
                        this.coverageLevelValueField = value;
                        this.OnPropertyChanged("CoverageLevelValue");
                    }
                }
                else
                {
                    this.coverageLevelValueField = value;
                    this.OnPropertyChanged("CoverageLevelValue");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CoverageLevelMultiplier
        {
            get
            {
                return this.coverageLevelMultiplierField;
            }
            set
            {
                if ((coverageLevelMultiplierField.Equals(value) != true))
                {
                    this.coverageLevelMultiplierField = value;
                    this.OnPropertyChanged("CoverageLevelMultiplier");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageLevelApprovedCoverageLevelCoverageLevelType CoverageLevelType
        {
            get
            {
                return this.coverageLevelTypeField;
            }
            set
            {
                if ((coverageLevelTypeField.Equals(value) != true))
                {
                    this.coverageLevelTypeField = value;
                    this.OnPropertyChanged("CoverageLevelType");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageCoverageLevelApprovedCoverageLevelCoverageLevelValue", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageCoverageLevelApprovedCoverageLevelCoverageLevelValue : EntityBase<USRateBasedCoverageCoverageLevelApprovedCoverageLevelCoverageLevelValue>
    {

        private string currencyField;

        private double valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency
        {
            get
            {
                return this.currencyField;
            }
            set
            {
                if ((this.currencyField != null))
                {
                    if ((currencyField.Equals(value) != true))
                    {
                        this.currencyField = value;
                        this.OnPropertyChanged("currency");
                    }
                }
                else
                {
                    this.currencyField = value;
                    this.OnPropertyChanged("currency");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum USRateBasedCoverageCoverageLevelApprovedCoverageLevelCoverageLevelType
    {

        /// <remarks/>
        Salary,

        /// <remarks/>
        YearsOfService,

        /// <remarks/>
        Fixed,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageCoverageLevelApprovedCoverageVolume", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageCoverageLevelApprovedCoverageVolume : EntityBase<USRateBasedCoverageCoverageLevelApprovedCoverageVolume>
    {

        private string currencyField;

        private double valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency
        {
            get
            {
                return this.currencyField;
            }
            set
            {
                if ((this.currencyField != null))
                {
                    if ((currencyField.Equals(value) != true))
                    {
                        this.currencyField = value;
                        this.OnPropertyChanged("currency");
                    }
                }
                else
                {
                    this.currencyField = value;
                    this.OnPropertyChanged("currency");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageCoverageLevelRequestedCoverage", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageCoverageLevelRequestedCoverage : EntityBase<USRateBasedCoverageCoverageLevelRequestedCoverage>
    {

        private USRateBasedCoverageCoverageLevelRequestedCoverageLevel levelField;

        private USRateBasedCoverageCoverageLevelRequestedCoverageVolume volumeField;

        /// <summary>
        /// USRateBasedCoverageCoverageLevelRequestedCoverage class constructor
        /// </summary>
        public USRateBasedCoverageCoverageLevelRequestedCoverage()
        {
            this.volumeField = new USRateBasedCoverageCoverageLevelRequestedCoverageVolume();
            this.levelField = new USRateBasedCoverageCoverageLevelRequestedCoverageLevel();
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageLevelRequestedCoverageLevel Level
        {
            get
            {
                return this.levelField;
            }
            set
            {
                if ((this.levelField != null))
                {
                    if ((levelField.Equals(value) != true))
                    {
                        this.levelField = value;
                        this.OnPropertyChanged("Level");
                    }
                }
                else
                {
                    this.levelField = value;
                    this.OnPropertyChanged("Level");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageLevelRequestedCoverageVolume Volume
        {
            get
            {
                return this.volumeField;
            }
            set
            {
                if ((this.volumeField != null))
                {
                    if ((volumeField.Equals(value) != true))
                    {
                        this.volumeField = value;
                        this.OnPropertyChanged("Volume");
                    }
                }
                else
                {
                    this.volumeField = value;
                    this.OnPropertyChanged("Volume");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageCoverageLevelRequestedCoverageLevel", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageCoverageLevelRequestedCoverageLevel : EntityBase<USRateBasedCoverageCoverageLevelRequestedCoverageLevel>
    {

        private USRateBasedCoverageCoverageLevelRequestedCoverageLevelCoverageLevelValue coverageLevelValueField;

        private double coverageLevelMultiplierField;

        private USRateBasedCoverageCoverageLevelRequestedCoverageLevelCoverageLevelType coverageLevelTypeField;

        /// <summary>
        /// USRateBasedCoverageCoverageLevelRequestedCoverageLevel class constructor
        /// </summary>
        public USRateBasedCoverageCoverageLevelRequestedCoverageLevel()
        {
            this.coverageLevelValueField = new USRateBasedCoverageCoverageLevelRequestedCoverageLevelCoverageLevelValue();
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageLevelRequestedCoverageLevelCoverageLevelValue CoverageLevelValue
        {
            get
            {
                return this.coverageLevelValueField;
            }
            set
            {
                if ((this.coverageLevelValueField != null))
                {
                    if ((coverageLevelValueField.Equals(value) != true))
                    {
                        this.coverageLevelValueField = value;
                        this.OnPropertyChanged("CoverageLevelValue");
                    }
                }
                else
                {
                    this.coverageLevelValueField = value;
                    this.OnPropertyChanged("CoverageLevelValue");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CoverageLevelMultiplier
        {
            get
            {
                return this.coverageLevelMultiplierField;
            }
            set
            {
                if ((coverageLevelMultiplierField.Equals(value) != true))
                {
                    this.coverageLevelMultiplierField = value;
                    this.OnPropertyChanged("CoverageLevelMultiplier");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRateBasedCoverageCoverageLevelRequestedCoverageLevelCoverageLevelType CoverageLevelType
        {
            get
            {
                return this.coverageLevelTypeField;
            }
            set
            {
                if ((coverageLevelTypeField.Equals(value) != true))
                {
                    this.coverageLevelTypeField = value;
                    this.OnPropertyChanged("CoverageLevelType");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageCoverageLevelRequestedCoverageLevelCoverageLevelValue", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageCoverageLevelRequestedCoverageLevelCoverageLevelValue : EntityBase<USRateBasedCoverageCoverageLevelRequestedCoverageLevelCoverageLevelValue>
    {

        private string currencyField;

        private double valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency
        {
            get
            {
                return this.currencyField;
            }
            set
            {
                if ((this.currencyField != null))
                {
                    if ((currencyField.Equals(value) != true))
                    {
                        this.currencyField = value;
                        this.OnPropertyChanged("currency");
                    }
                }
                else
                {
                    this.currencyField = value;
                    this.OnPropertyChanged("currency");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum USRateBasedCoverageCoverageLevelRequestedCoverageLevelCoverageLevelType
    {

        /// <remarks/>
        Salary,

        /// <remarks/>
        YearsOfService,

        /// <remarks/>
        Fixed,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageCoverageLevelRequestedCoverageVolume", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageCoverageLevelRequestedCoverageVolume : EntityBase<USRateBasedCoverageCoverageLevelRequestedCoverageVolume>
    {

        private string currencyField;

        private double valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency
        {
            get
            {
                return this.currencyField;
            }
            set
            {
                if ((this.currencyField != null))
                {
                    if ((currencyField.Equals(value) != true))
                    {
                        this.currencyField = value;
                        this.OnPropertyChanged("currency");
                    }
                }
                else
                {
                    this.currencyField = value;
                    this.OnPropertyChanged("currency");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "USRateBasedCoverageQuestion", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class USRateBasedCoverageQuestion : EntityBase<USRateBasedCoverageQuestion>
    {

        private string questionTextField;

        private string questionAnswerField;

        private int questionIDField;

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionText
        {
            get
            {
                return this.questionTextField;
            }
            set
            {
                if ((this.questionTextField != null))
                {
                    if ((questionTextField.Equals(value) != true))
                    {
                        this.questionTextField = value;
                        this.OnPropertyChanged("QuestionText");
                    }
                }
                else
                {
                    this.questionTextField = value;
                    this.OnPropertyChanged("QuestionText");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionAnswer
        {
            get
            {
                return this.questionAnswerField;
            }
            set
            {
                if ((this.questionAnswerField != null))
                {
                    if ((questionAnswerField.Equals(value) != true))
                    {
                        this.questionAnswerField = value;
                        this.OnPropertyChanged("QuestionAnswer");
                    }
                }
                else
                {
                    this.questionAnswerField = value;
                    this.OnPropertyChanged("QuestionAnswer");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int questionID
        {
            get
            {
                return this.questionIDField;
            }
            set
            {
                if ((questionIDField.Equals(value) != true))
                {
                    this.questionIDField = value;
                    this.OnPropertyChanged("questionID");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://ns.hr-xml.org/2007-04-15", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "BeneficiaryDataType", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class BeneficiaryDataType : EntityBase<BeneficiaryDataType>
    {

        private object itemField;

        private List<ContactMethodType> contactInformationField;

        private string dateOfBirthField;

        private FamilyRelationshipType relationshipField;

        private bool relationshipFieldSpecified;

        private EntityIdType identificationCodeField;

        private BeneficiaryDataTypeInheritanceAmount inheritanceAmountField;

        private string beneficiarySequenceField;

        private string startDateField;

        private string endDateField;

        /// <summary>
        /// BeneficiaryDataType class constructor
        /// </summary>
        public BeneficiaryDataType()
        {
            this.inheritanceAmountField = new BeneficiaryDataTypeInheritanceAmount();
            this.identificationCodeField = new EntityIdType();
            this.contactInformationField = new List<ContactMethodType>();
        }

        [System.Xml.Serialization.XmlElementAttribute("OrganizationName", typeof(string), Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute("PersonName", typeof(PersonNameType), Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                if ((this.itemField != null))
                {
                    if ((itemField.Equals(value) != true))
                    {
                        this.itemField = value;
                        this.OnPropertyChanged("Item");
                    }
                }
                else
                {
                    this.itemField = value;
                    this.OnPropertyChanged("Item");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("ContactInformation", Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<ContactMethodType> ContactInformation
        {
            get
            {
                return this.contactInformationField;
            }
            set
            {
                if ((this.contactInformationField != null))
                {
                    if ((contactInformationField.Equals(value) != true))
                    {
                        this.contactInformationField = value;
                        this.OnPropertyChanged("ContactInformation");
                    }
                }
                else
                {
                    this.contactInformationField = value;
                    this.OnPropertyChanged("ContactInformation");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateOfBirth
        {
            get
            {
                return this.dateOfBirthField;
            }
            set
            {
                if ((this.dateOfBirthField != null))
                {
                    if ((dateOfBirthField.Equals(value) != true))
                    {
                        this.dateOfBirthField = value;
                        this.OnPropertyChanged("DateOfBirth");
                    }
                }
                else
                {
                    this.dateOfBirthField = value;
                    this.OnPropertyChanged("DateOfBirth");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FamilyRelationshipType Relationship
        {
            get
            {
                return this.relationshipField;
            }
            set
            {
                if ((relationshipField.Equals(value) != true))
                {
                    this.relationshipField = value;
                    this.OnPropertyChanged("Relationship");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RelationshipSpecified
        {
            get
            {
                return this.relationshipFieldSpecified;
            }
            set
            {
                if ((relationshipFieldSpecified.Equals(value) != true))
                {
                    this.relationshipFieldSpecified = value;
                    this.OnPropertyChanged("RelationshipSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EntityIdType IdentificationCode
        {
            get
            {
                return this.identificationCodeField;
            }
            set
            {
                if ((this.identificationCodeField != null))
                {
                    if ((identificationCodeField.Equals(value) != true))
                    {
                        this.identificationCodeField = value;
                        this.OnPropertyChanged("IdentificationCode");
                    }
                }
                else
                {
                    this.identificationCodeField = value;
                    this.OnPropertyChanged("IdentificationCode");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BeneficiaryDataTypeInheritanceAmount InheritanceAmount
        {
            get
            {
                return this.inheritanceAmountField;
            }
            set
            {
                if ((this.inheritanceAmountField != null))
                {
                    if ((inheritanceAmountField.Equals(value) != true))
                    {
                        this.inheritanceAmountField = value;
                        this.OnPropertyChanged("InheritanceAmount");
                    }
                }
                else
                {
                    this.inheritanceAmountField = value;
                    this.OnPropertyChanged("InheritanceAmount");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(DataType = "integer", Order = 6)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeneficiarySequence
        {
            get
            {
                return this.beneficiarySequenceField;
            }
            set
            {
                if ((this.beneficiarySequenceField != null))
                {
                    if ((beneficiarySequenceField.Equals(value) != true))
                    {
                        this.beneficiarySequenceField = value;
                        this.OnPropertyChanged("BeneficiarySequence");
                    }
                }
                else
                {
                    this.beneficiarySequenceField = value;
                    this.OnPropertyChanged("BeneficiarySequence");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                if ((this.startDateField != null))
                {
                    if ((startDateField.Equals(value) != true))
                    {
                        this.startDateField = value;
                        this.OnPropertyChanged("StartDate");
                    }
                }
                else
                {
                    this.startDateField = value;
                    this.OnPropertyChanged("StartDate");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                if ((this.endDateField != null))
                {
                    if ((endDateField.Equals(value) != true))
                    {
                        this.endDateField = value;
                        this.OnPropertyChanged("EndDate");
                    }
                }
                else
                {
                    this.endDateField = value;
                    this.OnPropertyChanged("EndDate");
                }
            }
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "BeneficiaryDataTypeInheritanceAmount", Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public partial class BeneficiaryDataTypeInheritanceAmount : EntityBase<BeneficiaryDataTypeInheritanceAmount>
    {

        private BeneficiaryDataTypeInheritanceAmountInheritanceType inheritanceTypeField;

        private double valueField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BeneficiaryDataTypeInheritanceAmountInheritanceType inheritanceType
        {
            get
            {
                return this.inheritanceTypeField;
            }
            set
            {
                if ((inheritanceTypeField.Equals(value) != true))
                {
                    this.inheritanceTypeField = value;
                    this.OnPropertyChanged("inheritanceType");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://ns.hr-xml.org/2007-04-15")]
    public enum BeneficiaryDataTypeInheritanceAmountInheritanceType
    {

        /// <remarks/>
        Percentage,

        /// <remarks/>
        MonetaryAmount,
    }
}
